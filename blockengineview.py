from dlw.views import *
import dlw.views.globals as g
from django.db import *
#chanegs Block_division

def barchart(request):
    print(request.user)
    total_insp = forwarded_applications_block.objects.all().distinct('boogy_no').count()
    returned = forwarded_applications_block.objects.filter(status="Returned").count()
    forward_cqam = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection(G)").count()
    forward_wm = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection").count()
    pending_wm = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection(G)").count()
    pending_cqam = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection").count()

    labels = 'Tviakshotal Inspection','Returned Sheet','Pending at SSE','Forward by SSE','Pending at CQAM','Closed by CQAM'
    y_cor=[total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam]
    # explode = [0.1, 0,0,0,0,0]
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor,  labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of User Dashboard of Block Division ')

    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    print(b641,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    # context['piechart'] = b641
    data = [total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam,b641]
    context = {'total_insp': total_insp,
               'returned': returned,
               'forward_cqam': forward_cqam,
               'forward_wm': forward_wm,
               'pending_wm': pending_wm,
               'pending_cqam': pending_cqam,
               'piechart' : b641,
               'data':data,
               }
    print("data",data)
    return render(request,"BLOCK_DIVISION/barchart.html",context)


def linegraph(request):
    print(request.user)
    total_insp = forwarded_applications_block.objects.all().distinct('boogy_no').count()
    returned = forwarded_applications_block.objects.filter(status="Returned").count()
    forward_cqam = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection(G)").count()
    forward_wm = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection").count()
    pending_wm = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection(G)").count()
    pending_cqam = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection").count()

    labels = 'Tviakshotal Inspection','Returned Sheet','Pending at SSE','Forward by SSE','Pending at CQAM','Closed by CQAM'
    y_cor=[total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam]
    # explode = [0.1, 0,0,0,0,0]
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor,  labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of User Dashboard of Block Division ')

    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    print(b641,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    # context['piechart'] = b641
    data = {"Total Inspection":total_insp,"Pending at SSE":pending_wm,"Forward by SSE":forward_wm,"Rejected by SSE":returned,"Pending at CQAM":pending_cqam,"Approved by CQAM":forward_cqam}
    context = {'total_insp': total_insp,
               'returned': returned,
               'forward_cqam': forward_cqam,
               'forward_wm': forward_wm,
               'pending_wm': pending_wm,
               'pending_cqam': pending_cqam,
               'piechart' : b641,
               'data':data,
               }
    print("data",data)
    return render(request,"BLOCK_DIVISION/linegraph.html",context)

def piechart(request):
    print(request.user)
    total_insp = forwarded_applications_block.objects.all().distinct('boogy_no').count()
    returned = forwarded_applications_block.objects.filter(status="Returned").count()
    forward_cqam = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection(G)").count()
    forward_wm = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection").count()
    pending_wm = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection(G)").count()
    pending_cqam = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection").count()

    labels = 'Tviakshotal Inspection','Returned Sheet','Pending at SSE','Forward by SSE','Pending at CQAM','Closed by CQAM'
    y_cor=[total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam]
    # explode = [0.1, 0,0,0,0,0]
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor,  labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of User Dashboard of Block Division ')

    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    print(b641,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    # context['piechart'] = b641
    data = [total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam]
    context = {'total_insp': total_insp,
               'returned': returned,
               'forward_cqam': forward_cqam,
               'forward_wm': forward_wm,
               'pending_wm': pending_wm,
               'pending_cqam': pending_cqam,
               'piechart' : b641,
               'data':data,
               }
    print("data",data)
    return render(request,"BLOCK_DIVISION/piechart.html",context)


def blockdivision7pdf(request):
    if request.method=='GET':
            print("aagya")
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date = request.GET.get('date')
    cursor1=connection.cursor()
    cursor.execute('''
        SELECT distinct t1."BLOCK_DIV_INSP_PARA_TRX_CODE", t1."BLOCK_DIV_INSP_PARA_CODE", t1."BLOCK_DIV_INSP_PARA_TRX_DESC",
        t1.dateblock,t1."w.o.no", t1."GMCC_No", t1."Inspector_no", t1."Observation", t1."ACC_ENDC", t1."ACC_ENDR",
        t1."ACC_ENDL", t1."CSD_ENDC", t1."CSD_ENDR", t1."CSD_ENDL",t1."MFM_NO1", t1."MFM_NO2", t1."MFM_NO3", t1."MFM_NO4",
        t1."MFM_NO5", t1."MFM_NO6", t1."MFM_NO7", t1."MFM_NO8",t1."MFM_NO9", t1."MFM_NO10",t1."Observation_LSC", t1."Observation_LSA",
        t1."Observation_RSC", t1."Observation_RSA", t1."RemarksRs", t1."RemarksLs", t1."Remarks",t1."Role", 
        t1."BLOCK_DIVISION_INSPECTION_CODE",t2."Position 1", t2."Position 2", t2."Discription_Slno",t2."DRAG_SIZE",
        t2."INSTRUMENT_USED",t2."DISCRIPTION",t2."SUB_DESC","sno", t2."Bore no",t2."Heading"
        FROM public.dlw_block_master_trx t1,public.dlw_block_master t2
        where  t1."BLOCK_DIV_INSP_PARA_CODE"=t2."BLOCK_DIV_INSP_PARA_CODE" 
        and t1."BLOCK_DIVISION_INSPECTION_CODE"=t2."BLOCK_DIVISION_INSPECTION_CODE"
        and  t1."Role"='sse_block_shopinspection' and t1."w.o.no"=%s and t1."GMCC_No"=%s and t1."Inspector_no"=%s
        and  t1."BLOCK_DIVISION_INSPECTION_CODE" in 
        (SELECT distinct "BLOCK_DIVISION_INSPECTION_CODE" FROM public.dlw_block_master 
        WHERE "BLOCK_DIVISION_INSPECTION_CODE"="BLOCK_DIVISION_INSPECTION_CODE" AND "BLOCK_DIVISION_INSPECTION_CODE"	in
        ('GCCM1','GCCM2','GCCM3','GCCM4','GCCM5','GCCM6','GCCM7','GCCM8','GCCM9','GCCM10','GCCM11','GCCM12','GCCM13','GCCM14',
        'GCCM15','GCCM16','GCCM17','GCCM18')) 
        order by "sno";
        ''',[won,gmcc,insp])
    result1 = cursor.fetchall()
    print('VIKASHtkkkkk',result1)
    context={'result1':result1,'won':won,"gmcc":gmcc, "insp":insp, "date":date}
    
    pdf= render_to_pdf('Block_Division/blockdivision7pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')
    return HttpResponse(result)

def blockdivision11pdf(request):
    if request.method=="GET":
        won = request.GET.get('won')
        gmcc = request.GET.get('gmcc')
        insp  = request.GET.get('insp')
        date  = request.GET.get('date')

        print('won',won)
        cursor = connection.cursor()
        cursor.execute('''	
            SELECT distinct t1."BLOCK_DIV_INSP_PARA_TRX_CODE", t1."BLOCK_DIV_INSP_PARA_CODE", t1."BLOCK_DIV_INSP_PARA_TRX_DESC",
            t1.dateblock,t1."w.o.no", t1."GMCC_No", t1."Inspector_no", t1."Observation", t1."ACC_ENDC", t1."ACC_ENDR",
            t1."ACC_ENDL", t1."CSD_ENDC", t1."CSD_ENDR", t1."CSD_ENDL",t1."MFM_NO1", t1."MFM_NO2", t1."MFM_NO3", t1."MFM_NO4",
            t1."MFM_NO5", t1."MFM_NO6", t1."MFM_NO7", t1."MFM_NO8",t1."MFM_NO9", t1."MFM_NO10",t1."Observation_LSC", t1."Observation_LSA",
            t1."Observation_RSC", t1."Observation_RSA", t1."RemarksRs", t1."RemarksLs", t1."Remarks",t1."Role", 
            t1."BLOCK_DIVISION_INSPECTION_CODE",t2."Position 1", t2."Position 2", t2."Discription_Slno",t2."DRAG_SIZE",
            t2."INSTRUMENT_USED",t2."DISCRIPTION",t2."SUB_DESC","sno",t2."Bore no",t2."Heading"
            FROM public.dlw_block_master_trx t1,public.dlw_block_master t2
            where  t1."BLOCK_DIV_INSP_PARA_CODE"=t2."BLOCK_DIV_INSP_PARA_CODE" 
            and t1."BLOCK_DIVISION_INSPECTION_CODE"=t2."BLOCK_DIVISION_INSPECTION_CODE"
            and  t1."Role"='user' and t1."w.o.no"=%s and t1."GMCC_No"=%s and t1."Inspector_no"=%s
            and  t1."BLOCK_DIVISION_INSPECTION_CODE" in 
            (SELECT distinct "BLOCK_DIVISION_INSPECTION_CODE" FROM public.dlw_block_master 
            WHERE "BLOCK_DIVISION_INSPECTION_CODE"="BLOCK_DIVISION_INSPECTION_CODE" AND "BLOCK_DIVISION_INSPECTION_CODE"    in
            ('CMM1','CMM2','CMM3','CMM4','CMM5','CMM6','CMM7','CMM8','CMM9','CMM10','CMM11','CMM12','CMM13',
            'CMM14','CMM15','CMM16','CMM17','CMM18','CMM19')) 
            order by "sno"; ''',[won,gmcc,insp])


        data = cursor.fetchall()
        print("mydata",data)
    
        context={
            'won': won,
            'gmcc': gmcc,
            'insp': insp,
            'data':data, 
        }
        pdf = render_to_pdf('Block_Division/blockdivision11pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')

def block_Newchecksheetthird_ABMpdf(request):
    if request.method=='GET':
        won=request.GET.get('won')
        gmcc=request.GET.get('gmcc')
        insp=request.GET.get('insp')
        date=request.GET.get('date')


        print("wonnnnnn",won)
        with connection.cursor() as cursor:
            cursor.execute('''SELECT distinct t1."BLOCK_DIV_INSP_PARA_TRX_CODE", t1."BLOCK_DIV_INSP_PARA_CODE", t1."BLOCK_DIV_INSP_PARA_TRX_DESC",
        t1.dateblock,t1."w.o.no", t1."GMCC_No", t1."Inspector_no", t1."Observation", t1."ACC_ENDC", t1."ACC_ENDR",
        t1."ACC_ENDL", t1."CSD_ENDC", t1."CSD_ENDR", t1."CSD_ENDL",t1."MFM_NO1", t1."MFM_NO2", t1."MFM_NO3", t1."MFM_NO4",
        t1."MFM_NO5", t1."MFM_NO6", t1."MFM_NO7", t1."MFM_NO8",t1."MFM_NO9", t1."MFM_NO10",t1."Observation_LSC", t1."Observation_LSA",
        t1."Observation_RSC", t1."Observation_RSA", t1."RemarksRs", t1."RemarksLs", t1."Remarks",t1."Role", 
        t1."BLOCK_DIVISION_INSPECTION_CODE",t2."Position 1", t2."Position 2", t2."Discription_Slno",t2."DRAG_SIZE",
        t2."INSTRUMENT_USED",t2."DISCRIPTION",t2."SUB_DESC","sno",t2."NO_OF_CAPS_SADDLE"
        FROM public.dlw_block_master_trx t1,public.dlw_block_master t2
        where  t1."BLOCK_DIV_INSP_PARA_CODE"=t2."BLOCK_DIV_INSP_PARA_CODE" and t1."Role"='sse_block_shopinspection(G)'
        and t1."BLOCK_DIVISION_INSPECTION_CODE"=t2."BLOCK_DIVISION_INSPECTION_CODE" AND t1."w.o.no"=%s and t1."GMCC_No"=%s and  t1."Inspector_no"=%s

        and  t1."BLOCK_DIVISION_INSPECTION_CODE" in 
        (SELECT distinct "BLOCK_DIVISION_INSPECTION_CODE" FROM public.dlw_block_master 
        WHERE "BLOCK_DIVISION_INSPECTION_CODE"="BLOCK_DIVISION_INSPECTION_CODE" AND "BLOCK_DIVISION_INSPECTION_CODE"    in
        ('ABM1','ABM2','ABM3','ABM4','ABM5','ABM6','ABM7','ABM8','ABM9','ABM10','ABM11','ABM12','ABM13','ABM14',
        'ABM15','ABM16','ABM17','ABM18')) 
        order by "sno" ''',[won,gmcc,insp])
            rows=cursor.fetchall()
        context={
            'rows':rows, 'won':won, 'gmcc':gmcc, 'insp':insp, 'date':date
        }
        print('rowssssskkkkk',rows)

        pdf = render_to_pdf('Block_Division/block_Newchecksheetthird_ABMpdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')


def blockdivision6pdf(request):
    if request.method=='GET':
        print("aagya")
        eng = request.GET.get('eng')
        blo = request.GET.get('blo')
        wo = request.GET.get('wo')
        date = request.GET.get('date')
        print("-----------------------------------------------------------")
        print("eng",eng)
        print("blo",blo)
        print("wo",wo)
        print("dateKJSDHFGJKDSHGJ",date)
    # wo="11"
    # blo="11"
    # eng="11"
    # date="11"

    cursor1=connection.cursor()
    cursor.execute('''
    SELECT distinct t1."BLOCK_DIV_INSP_PARA_TRX_CODE", t1."BLOCK_DIV_INSP_PARA_CODE", t1."BLOCK_DIV_INSP_PARA_TRX_DESC",
    t1.dateblock,t1."w.o.no", t1."GMCC_No", t1."Inspector_no", t1."Observation", t1."ACC_ENDC", t1."ACC_ENDR",
    t1."ACC_ENDL", t1."CSD_ENDC", t1."CSD_ENDR", t1."CSD_ENDL",t1."MFM_NO1", t1."MFM_NO2", t1."MFM_NO3", t1."MFM_NO4",
    t1."MFM_NO5", t1."MFM_NO6", t1."MFM_NO7", t1."MFM_NO8",t1."MFM_NO9", t1."MFM_NO10",t1."Observation_LSC", t1."Observation_LSA",
    t1."Observation_RSC", t1."Observation_RSA", t1."RemarksRs", t1."RemarksLs", t1."Remarks",t1."Role", 
    t1."BLOCK_DIVISION_INSPECTION_CODE",t2."Position 1", t2."Position 2", t2."Discription_Slno",t2."DRAG_SIZE",
    t2."INSTRUMENT_USED",t2."DISCRIPTION",t2."SUB_DESC","sno"
    FROM public.dlw_block_master_trx t1,public.dlw_block_master t2
    where  t1."BLOCK_DIV_INSP_PARA_CODE"=t2."BLOCK_DIV_INSP_PARA_CODE" 
    and t1."BLOCK_DIVISION_INSPECTION_CODE"=t2."BLOCK_DIVISION_INSPECTION_CODE"
    and  t1."Role"='sse_block_shopinspection(G)'
    and  t1."BLOCK_DIVISION_INSPECTION_CODE" in 
    (SELECT distinct "BLOCK_DIVISION_INSPECTION_CODE" FROM public.dlw_block_master 
    WHERE "BLOCK_DIVISION_INSPECTION_CODE"="BLOCK_DIVISION_INSPECTION_CODE" AND "BLOCK_DIVISION_INSPECTION_CODE"	in
    ('CCM1','CCM2','CCM3','CCM4','CCM5','CCM6','CCM7','CCM8','CCM9','CCM10','CCM11','CCM12','CCM13','CCM14',
    'CCM15','CCM16','CCM17','CCM18','CCM19','CCM20','CCM21','CCM13','CCM14','CCM15','CCM16')) 
    order by "sno";
    ''')
    result1 = cursor.fetchall()
    print('VIKASHtkkkkk',result1)
    context={'result1':result1,'eng':eng,"blo":blo, "wo":wo, "date":date}
    
    pdf= render_to_pdf('Block_Division/blockdivision6pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')
    return HttpResponse(result)



def blockselect1(request):
    print(request.user)
    total_insp = forwarded_applications_block.objects.all().distinct('boogy_no').count()
    returned = forwarded_applications_block.objects.filter(status="Returned").count()
    forward_cqam = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection(G)").count()
    forward_wm = forwarded_applications_block.objects.filter(status="Forwarded",changes_by="sse_block_shopinspection").count()
    pending_wm = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection(G)").count()
    pending_cqam = forwarded_applications_block.objects.filter(status="Returned",changes_by="sse_block_shopinspection").count()

    labels = 'Tviakshotal Inspection','Returned Sheet','Pending at SSE','Forward by SSE','Pending at CQAM','Closed by CQAM'
    y_cor=[total_insp,pending_wm,forward_wm,returned,pending_cqam,forward_cqam]
    # explode = [0.1, 0,0,0,0,0]
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor,  labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of User Dashboard of Block Division ')

    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    print(b641,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    # context['piechart'] = b641
    data = [total_insp,returned,forward_cqam,forward_wm,pending_wm,pending_cqam,b641]
    context = {'total_insp': total_insp,
               'returned': returned,
               'forward_cqam': forward_cqam,
               'forward_wm': forward_wm,
               'pending_wm': pending_wm,
               'pending_cqam': pending_cqam,
               'piechart' : b641,
               'data':data,
               }
    print("data",data)
    return render(request,"BLOCK_DIVISION/blockselect.html",context)


 
def fetch_select_mst_block(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=block_select_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            eng_type=i['block_type']
            eng_name=i['block_name']
            eng_url=i['block_url']
           
            temp={'edicc':'EDICC' + str(sno),'eng_type':eng_type,'eng_name':eng_name,'eng_url':eng_url}  
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
def update_select_mst_block(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('edicc')
        print(sno)
        sno=sno.split("CC")[1]
        sno=int(sno)
        eng_type=request.GET.get('eng_type')
        eng_name=request.GET.get('eng_name')
        eng_url=request.GET.get('eng_url')
        print(eng_name)
        if block_select_mst.objects.filter(sno=sno).exists():
            block_select_mst.objects.filter(sno=sno).update(block_type=eng_type,block_name=eng_name,block_url=eng_url)
        else :
            block_select_mst.objects.create(sno=sno,block_type=eng_type,block_name=eng_name,block_url=eng_url)
 
        return JsonResponse({'status': 200})  
 
def delete_select_mst_block(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
       
        save = block_select_mst.objects.get(sno=sno)
        save.delete()
        return JsonResponse({'status': 200})  
 
 
def fetch_block_types(request):
    if request.method=="GET" and request.is_ajax():
        print("yes112")
        obj=block_select_mst.objects.all().values().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            eng_type=i['block_type']
            eng_sno=i['sno']
            temp={'eng_type':eng_type,'eng_sno':eng_sno}
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
def fetch_block_names(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        eng_type=request.GET.get('eng_type')
        obj=block_select_mst.objects.filter(block_type=eng_type).values().distinct('block_name')
        print("obj",obj)
        print(eng_type)
        sumlist =[]
        for i in obj:
            eng_name=i['block_name']
            eng_url=i['block_url']
           
            temp={'eng_name':eng_name,'eng_url':eng_url,}  
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
def Block_select_master(request):
    return render(request,'Block_Division/Block_select_master.html')
 


##Block Division crankcase_16cyl
def Block_Newchecksheetsec_crankcase_16cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheetsec_crankcase_16cyl.html',context)

def Block_Checksheet_crankcase_16cyl(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #     #    code=obj['Engine_Division_Inspection_code']
        #        print("code")
        #        #empname=obj['empname']
       return render(request,'Block_Division/Block_Checksheet_crankcase_16cyl.html',context)
 
 
 
 
 
 
def fetch_block_checksheet_crankcase_16cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)



def fetch_block_newchecksheet_crankcase_16cyl(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           eng = request.GET.get('eng')
           blo = request.GET.get('blo')
           wo = request.GET.get('wo')
           print("-----------------------------------------------------------")
           print("eng",eng)
           print("blo",blo)
           print("wo",wo)
           obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(block_division_crankcase_16cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo, changes_by="user").values())
           saved_data1=list(block_division_crankcase_16cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo).distinct().values())
           saved_data_wm=list(block_division_crankcase_16cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo, changes_by="sse_block_shopinspection").values())
           saved_data_cqam=list(block_division_crankcase_16cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo, changes_by="sse_block_shopinspection(G)").values())
           
        #    print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,"saved_data1":saved_data1}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)


@csrf_exempt
def save_block_newcheksheet_crankcase_16cyl(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           from datetime import datetime
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           eng = request.POST.get('eng')
           blo = request.POST.get('blo')
           wo = request.POST.get('wo')
           insp = request.POST.get('insp')
           date1 = request.POST.get('date1')
           date2 = request.POST.get('date2')
           ediccs=request.POST.get('ediccs')
           date1 = datetime.strptime(date1,'%d-%m-%Y').strftime('%Y-%m-%d')
           date2 = datetime.strptime(date2,'%d-%m-%Y').strftime('%Y-%m-%d')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("eng",eng)
           print("blo",blo)
           print("wo",wo)
           print("insp",insp)
           print("date1",date1)
           print("date2",date2)
           print("ediccs",ediccs)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
        #    if ediccs!=null:
   
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
                print("EEEEEEEE",u)
   
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
               ediccc=l
               print("ediccc",ediccc)
               id = list(block_division_crankcase_16cyl_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               asmno=eng+","+wo+","+blo+","+insp
               if block_division_crankcase_16cyl_trx.objects.filter(edicc_id=ediccc, eng = eng,blo=blo,wo=wo, changes_by=change_by).exists():
                   block_division_crankcase_16cyl_trx.objects.filter(edicc_id=ediccc,eng = eng,blo=blo,wo=wo, changes_by=change_by).update(CHECK=j,RMK1=k,date=date1,date2=date2,insp=insp)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
               else:
                   block_division_crankcase_16cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,eng = eng,blo=blo,wo=wo,insp=insp,date=date1,date2=date2 ,edidesc=i,edicc_id=ediccc,changes_by=change_by)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
         
           return JsonResponse({'status': 200})
 





def Block_Newchecksheet_crankcase_16cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheet_crankcase_16cyl.html',context)



def forwardws_block_crankcase_16cyl(request):  
    from datetime import datetime
    cuser=request.user
    empno=request.GET.get("empno")
    eng=request.GET.get("eng")
    wo=request.GET.get("wo")
    blo=request.GET.get("blo")
    insp=request.GET.get("insp")
    date1=request.GET.get("date1")
    date2=request.GET.get("date2")
    date1 = datetime.strptime(date1,'%d-%m-%Y')
    date2 = datetime.strptime(date2,'%d-%m-%Y')
    asmno=eng+","+wo+","+blo+","+insp

    if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection',engine_url="Block_Newchecksheetsec_crankcase_16cyl").exists():
        print("jiiii")
        forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending")
        print("hai")
    else:
        forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,engine_url="Block_Newchecksheetsec_crankcase_16cyl",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
        print("ho gaya")
    return JsonResponse({'status': 200})
 


def fetchemp_block_crankcase_16cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)


def forward_block_crankcase_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_crankcase_16cyl.html',context)


def forwardws_blocksec_crankcase_16cyl(request):  
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        date1 = datetime.strptime(date1,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        asmno=eng+","+wo+","+blo+","+insp
        print(asmno,date1,date2)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser,engine_url="Block_Newchecksheetthird_crankcase_16cyl").exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,
                engine_url="Block_Newchecksheetthird_crankcase_16cyl",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})


 



def fetchemp_blocksec_crankcase_16cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def forward_blocksec_crankcase_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_crankcase_16cyl.html',context)


def Block_Newchecksheetfourth_crankcase_16cyl(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Block_Division/Block_Newchecksheetfourth_crankcase_16cyl.html')


def Block_Newchecksheetthird_crankcase_16cyl( request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Block_Division/Block_Newchecksheetthird_crankcase_16cyl.html',context)

def return_to_user_by_wm_crankcase_16cyl(request):
    if request.method=="GET" and request.is_ajax():
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        asmno=eng+","+wo+","+blo+","+insp
        cuser=request.user
        send_by=request.GET.get("send_by")
       
       
        print("*********",cuser)
        if asmno!=None:
            print("dflsdfj")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Returned',engine_url="Block_Newchecksheetfourth_crankcase_16cyl")
            return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

##Block Division crankcase_12cyl
##Block Division crankcase_12cyl
 
def Block_Checksheet_crankcase_12cyl(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #     #    code=obj['Engine_Division_Inspection_code']
        #        print("code")
        #        #empname=obj['empname']
       return render(request,'Block_Division/Block_Checksheet_crankcase_12cyl.html',context)
 
 
 
 
 
 
def fetch_block_checksheet_crankcase_12cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
def fetch_block_newchecksheet_crankcase_12cyl(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           eng = request.GET.get('eng')
           blo = request.GET.get('blo')
           wo = request.GET.get('wo')
           print("-----------------------------------------------------------")
           print("eng",eng)
           print("blo",blo)
           print("wo",wo)
           obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(block_division_crankcase_12cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo,).distinct().values())
           saved_data_wm=list(block_division_crankcase_12cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo, changes_by="sse_block_shopinspection").values())
           saved_data_cqam=list(block_division_crankcase_12cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo, changes_by="sse_block_shopinspection(G)").values())
           
        #    print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
@csrf_exempt
def save_block_newcheksheet_crankcase_12cyl(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           from datetime import datetime
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           eng = request.POST.get('eng')
           blo = request.POST.get('blo')
           wo = request.POST.get('wo')
           insp = request.POST.get('insp')
           date1 = request.POST.get('date1')
           date2 = request.POST.get('date2')
           ediccs=request.POST.get('ediccs')
           date1 = datetime.strptime(date1,'%d-%m-%Y').strftime('%Y-%m-%d')
           date2 = datetime.strptime(date2,'%d-%m-%Y').strftime('%Y-%m-%d')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("eng",eng)
           print("blo",blo)
           print("wo",wo)
           print("insp",insp)
           print("date1",date1)
           print("date2",date2)
           print("ediccs",ediccs)
        #    if eng == "":
        #        return JsonResponse({'status': 400})
        #    if blo == "":
        #        return JsonResponse({'status': 400})
        #    if wo == "":
        #        return JsonResponse({'status': 400})
        #    if insp == "":
        #        return JsonResponse({'status': 400})
        #    print("data1",date1)
        #    print("data2",date2)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)
           print("vlist_check",vlist_check)
           counter=0  
           count=0
           edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
        #    if ediccs!=null:
   
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
                print("EEEEEEEE",u)
   
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
               ediccc=l
               print("ediccc",ediccc)
               id = list(block_division_crankcase_12cyl_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               asmno=eng+","+wo+","+blo+","+insp
               if block_division_crankcase_12cyl_trx.objects.filter(edicc_id=ediccc, eng = eng,blo=blo,wo=wo, changes_by=change_by).exists():
                   block_division_crankcase_12cyl_trx.objects.filter(edicc_id=ediccc,eng = eng,blo=blo,wo=wo, changes_by=change_by).update(CHECK=j,RMK1=k,date=date1,date2=date2,insp=insp)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
               else:
                   block_division_crankcase_12cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,eng = eng,blo=blo,wo=wo,insp=insp,date=date1,date2=date2 ,edidesc=i,edicc_id=ediccc,changes_by=change_by)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
         
           return JsonResponse({'status': 200})
 
 
 
 
 
def Block_Newchecksheet_crankcase_12cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    # print("object",obj)
    context={
        "obj":obj,  
    }
    if request.method =="POST":
        # print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        # print("***",submitvalue)
        # print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            # print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheet_crankcase_12cyl.html',context)
 
 
 
 
def forwardws_block_crankcase_12cyl(request):  
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        empno=request.GET.get("empno")
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        date1 = datetime.strptime(date1,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        asmno=eng+","+wo+","+blo+","+insp
 
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection',engine_url="Block_Newchecksheetsec_crankcase_12cyl").exists():
            print("jiiii")
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending")
            print("hai")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,engine_url="Block_Newchecksheetsec_crankcase_12cyl",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
            print("ho gaya")
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
def fetchemp_block_crankcase_12cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def forward_block_crankcase_12cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_crankcase_12cyl.html',context)
 
 
def forwardws_blocksec_crankcase_12cyl(request):  
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        date1 = datetime.strptime(date1,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        asmno=eng+","+wo+","+blo+","+insp
        print(asmno,date1,date2)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser,engine_url="Block_Newchecksheetthird_crankcase_12cyl").exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,
                engine_url="Block_Newchecksheetthird_crankcase_12cyl",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetchemp_blocksec_crankcase_12cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
def forward_blocksec_crankcase_12cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_crankcase_12cyl.html',context)
 
 
def Block_Newchecksheetfourth_crankcase_12cyl(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Block_division/BLock_Newchecksheetfourth_crankcase_12cyl.html')
 
 
 
 
 
 
 
 
def return_to_user_by_wm_crankcase_12cyl(request):
    if request.method=="GET" and request.is_ajax():
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        asmno=eng+","+wo+","+blo+","+insp
        cuser=request.user
        send_by=request.GET.get("send_by")
       
       
        print("*********",cuser)
        if asmno!=None:
            print("dflsdfj")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Returned',engine_url="Block_Newchecksheetfourth_crankcase_12cyl")
            return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
def Block_Newchecksheetthird_crankcase_12cyl( request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Block_Division/Block_Newchecksheetthird_crankcase_12cyl.html',context)
 
def Block_Newchecksheetsec_crankcase_12cyl( request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Block_Division/Block_Newchecksheetsec_crankcase_12cyl.html',context)
 
 
def Block1_select1(request):
        return render(request,"Block_Division/Block_select.html")

##Block Division Alco_16cyl
def Block_Newchecksheetsec_Alco_16cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    # print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheetsec_Alco_16cyl.html',context)


def Block_Newchecksheetthird_Alco_16cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    # print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheetthird_Alco_16cyl.html',context)




def Block_Checksheet_Alco_16cyl(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #     #    code=obj['Engine_Division_Inspection_code']
        #        print("code")
        #        #empname=obj['empname']
       return render(request,'Block_Division/Block_Checksheet_Alco_16cyl.html',context)
 
 
 
 
 
 
def fetch_block_checksheet_Alco_16cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)



def fetch_block_newchecksheet_Alco_16cyl(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asm')

           print("-----------------------------------------------------------")
           print(asm_no)
 
        #    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           cursor=connection.cursor()
           cursor.execute('''SELECT sno, "Block_Division_Inspection_code", "Block_Division_Heading", "Block_division_Para", "Block_division_SubPara"
           FROM public.dlw_block_welding_mst where replace("Block_Division_Inspection_code",'EDICC','')::int>=301 
           AND replace("Block_Division_Inspection_code",'EDICC','')::int<=466
           ORDER BY replace("Block_Division_Inspection_code",'EDICC','')::int;''')
           obj = cursor.fetchall()
           print(obj,"EDICC_NUMBER")


           saved_data=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           print(saved_data_wm)
        #    print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)


@csrf_exempt
def save_block_newcheksheet_Alco_16cyl(request):
       if request.method == "POST" and request.is_ajax():
           from datetime import datetime
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           asn=cc+","+aa+","+bb
           ediccs=request.POST.get('ediccs')
           date=request.POST.get('date')
           date2=request.POST.get('date2')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
           date2 = datetime.strptime(date2,'%d-%m-%Y').strftime('%Y-%m-%d')
           print(asn)
           if asn == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("data",date2)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
        #    if ediccs!=null:
   
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
                print("EEEEEEEE",u)
   
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
               ediccc=l
               print("ediccc",ediccc)
               id = list(block_division_Alco_16cyl_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if block_division_Alco_16cyl_trx.objects.filter(edicc_id=ediccc, ASN=asn, changes_by=change_by).exists():
                   block_division_Alco_16cyl_trx.objects.filter(edicc_id=ediccc, ASN=asn, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date,date2=date2)
                   forwarded_applications_block.objects.filter(boogy_no=asn,changes_by='cqam',empno=cuser).update(status="Forwarded")
               else:
                   block_division_Alco_16cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,date2=date2,ASN=cc+","+aa+","+bb,edidesc=i,edicc_id=ediccc,changes_by=change_by)
                   forwarded_applications_block.objects.filter(boogy_no=asn,changes_by='cqam',empno=cuser).update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
 





def Block_Newchecksheet_Alco_16cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheet_Alco_16cyl.html',context)



def forwardws_block_Alco_16cyl(request):  
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        empno=request.GET.get("empno")
        asm=request.GET.get("asmno")
        print("asn=",asm)
        date=request.GET.get("date")
        print(date)
        date2=request.GET.get("date2")
        print(date2)
        date = datetime.strptime(date,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        if forwarded_applications_block.objects.filter(boogy_no=asm,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications_block.objects.filter(boogy_no=asm,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asm,date=date,date2=date2,
                engine_url="Block_Newchecksheetsec_Alco_16cyl",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 


def fetchemp_block_Alco_16cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)

def return_to_user_by_wm_alco_16cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        bgno=request.GET.get("asmb")
        send_by=request.GET.get("send_by")
        
       
        print("*********",send_by)
        if bgno!=None:
            print("aaaaaaaaaaaa")
            print(cuser)
            forwarded_applications_block.objects.filter(boogy_no=bgno,empno=cuser,changes_by='wm').update(status = 'Returned',engine_url="Block_Newchecksheetfourth_Alco_16cyl")
            print("aa")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def forward_block_Alco_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_Alco_16cyl.html',context)


def forwardws_blocksec_Alco_16cyl(request):  
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cqam_empno=request.GET.get("cqam_empno")
        cuser=request.user
        asmno=request.GET.get("asmno")
        date=request.GET.get("date")
        date2=request.GET.get("date2")
        date = datetime.strptime(date,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date,date2=date2,status="Pending")
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,date2=date2,
                engine_url="Block_Newchecksheetthird_Alco_16cyl",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
    #     forwarded_applications_block.objects.create(boogy_no=asmno,date=date,date2=date2,
    #         engine_url="Block_Newchecksheetthird_Alco_16cyl",status="Pending",empno=cqam_empno)
 
       
    # return JsonResponse({'status': 200})


 



def fetchemp_blocksec_Alco_16cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def forward_blocksec_Alco_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_Alco_16cyl.html',context)


def Block_Newchecksheetfourth_Alco_16cyl(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'BLOCK_DIVISION/Block_Newchecksheetfourth_Alco_16cyl.html')
 
 
 
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(wm_forwarded_applications.objects.filter(status='Returned',user_emp=cuser).values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

 
def return_to_user_by_wm(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        wm_forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser).update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})



def save_rej_block_newcheksheet_Alco_16cyl(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if block_division_Alco_16cyl_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   block_division_Alco_16cyl_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   block_division_Alco_16cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})


def fetch_block_newchecksheet_rej_Alco_16cyl(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")

#block MST
def block_division_mst2(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue) 
        if  submitvalue=='submit':   
            print("yessssss")           
            bdic=request.POST.get('bdic')
            print(bdic)
            bdid=request.POST.get('bdid')  
            bdidg=request.POST.get('bdidg')
            print("yeesss")
            print(bdid)
            id = list(block_division_mst.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = block_division_mst(bdic=bdic,bdid=bdid,bdidg=bdidg,sno=id)
            sav.save()
    return render(request,"BLOCK_DIVISION/Block_MST.html")




def fetchMSTblock(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=block_division_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdic=i['bdic']
            bdid=i['bdid']
            bdidg=i['bdidg']
            temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)   


def updateMST(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        #print("***",RH)
        bdic=request.GET.get('bdic')
        print(bdic)
        #print("***",LH)
        bdid=request.GET.get('bdid')
        print(bdid)
        #print("***",Remark)
        bdidg=request.GET.get('bdidg')
        print(bdidg)
        #print("*",boggy)
        #print("***************id")   
        if block_division_mst.objects.filter(bdic=bdic).exists():
            block_division_mst.objects.filter(bdic=bdic).update(bdid=bdid,bdidg=bdidg)
        else :
            block_division_mst.objects.create(sno=sno,bdic=bdic,bdid=bdid,bdidg=bdidg)
        return JsonResponse({'status': 200})  


def deleteMST(request):
    if request.method == "GET" and request.is_ajax():
        bdic=request.GET.get('bdic')  
        sav = block_division_mst.objects.get(bdic=bdic)
        sav.delete()
        return JsonResponse({'status': 200}) 

def block_division_para_mst(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue) 
        if  submitvalue=='submit':   
            print("yessssss")           
            bdipc=request.POST.get('bdipc')
            print(bdipc)
            bdic=request.POST.get('bdic')  
            print(bdic)
            bdid=request.POST.get('bdid')
            print(bdid)
            bdipmn=request.POST.get('bdipmn')
            print(bdipmn)
            bdipmm=request.POST.get('bdipmm')
            print(bdipmm)
            bdipdesc=request.POST.get('bdipdesc')
            print(bdipdesc)
            Longmin=request.POST.get('limn')
            print(Longmin)
            Longmax=request.POST.get('limx')
            print(Longmax)
            Transmin=request.POST.get('timn')
            print(Transmin)
            Transmax=request.POST.get('timx')
            print(Transmax)
            Vertimin=request.POST.get('vimn')
            print(Vertimin)
            Vertimax=request.POST.get('vimx')
            print(Vertimax)
            print("yeesss")
            id = list(BLOCK_DIV_INSP_PARA_MST.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_MST(bdipc=bdipc,bdic_id=bdic,bdid=bdid,bdipmn=bdipmn,bdipmm=bdipmm,bdipdesc=bdipdesc,Longmin=Longmin,Longmax=Longmax,Transmin=Transmin,Transmax=Transmax,Vertimin=Vertimin,Vertimax=Vertimax,sno=id)
            print("save",sav)
            sav.save()
    return render(request,"BLOCK_DIVISION/BLOCK_DIV_INSP_PARA_MST.html")    

def update_para_mst(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        slno=request.GET.get('slno')
        print(slno)
        bdipc=request.GET.get('bdipc')
        print(bdipc)
        bdic=request.GET.get('bdic')
        print(bdic)
        bdid=request.GET.get('bdid')
        print(bdid)
        bdipmn=request.GET.get('bdipmn')
        print(bdipmn)
        bdipmm=request.GET.get('bdipmm')
        print(bdipmm)
        bdipdesc=request.GET.get('bdipdesc')
        print(bdipdesc)
        Longmin=request.GET.get('limn')
        print(Longmin)
        Longmax=request.GET.get('limx')
        print(Longmax)
        Transmin=request.GET.get('timn')
        print(Transmin)
        Transmax=request.GET.get('timx')
        print(Transmax)
        Vertimin=request.GET.get('vimn')
        print(Vertimin)
        Vertimax=request.GET.get('vimx')
        print(Vertimax)
 
        #print("*",boggy)
        code=0
        if block_division_mst.objects.filter(bdic=bdic).exists():
            if BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipc=bdipc,bdic=bdic).exists():
                BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipc=bdipc,bdic=bdic).update(slno=slno,bdid=bdid,bdipmn=bdipmn,bdipmm=bdipmm,bdipdesc=bdipdesc,Longmin=Longmin,Longmax=Longmax,Transmin=Transmin,Transmax=Transmax,Vertimin=Vertimin,Vertimax=Vertimax)
            else :
                BLOCK_DIV_INSP_PARA_MST.objects.create(slno=slno,bdipc=bdipc,bdic_id=bdic,bdid=bdid,bdipmn=bdipmn,bdipmm=bdipmm,bdipdesc=bdipdesc,Longmin=Longmin,Longmax=Longmax,Transmin=Transmin,Transmax=Transmax,Vertimin=Vertimin,Vertimax=Vertimax)
        else:
            code=1
       
       
        return JsonResponse({'status': 200,'code':code})



def delete_para_mst(request):
     if request.method == "GET" and request.is_ajax():
        bdipc=request.GET.get('bdipc')  
        bdic=request.GET.get('bdic')
        sav = BLOCK_DIV_INSP_PARA_MST.objects.get(bdipc=bdipc,bdic=bdic)
        sav.delete()
        return JsonResponse({'status': 200}) 

def fetch_para_mst(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=BLOCK_DIV_INSP_PARA_MST.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            slno =i['slno']
            bdic=i['bdic_id']
            bdipc=i['bdipc']
            bdid=i['bdid']
            bdipmn=i['bdipmn']
            bdipmm=i['bdipmm']
            bdipdesc=i['bdipdesc']
            Longmin=i['Longmin']
            Longmax=i['Longmax']
            Transmin=i['Transmin']
            Transmax=i['Transmax']
            Vertimin=i['Vertimin']
            Vertimax=i['Vertimax']
            temp={'sno':sno,'slno':slno,'bdic':bdic,'bdipc':bdipc,'bdid':bdid,'bdipmn':bdipmn,'bdipmm':bdipmm,'bdipdesc':bdipdesc,'Longmin':Longmin,'Longmax':Longmax,'Transmin':Transmin,'Transmax':Transmax,'Vertimin':Vertimin,'Vertimax':Vertimax}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)   


#keshav
# def getPrevdata_block(request):
#     try:
#         if request.method=="GET" and request.is_ajax():
#             bgno = request.GET.get('bgno')
#             bdic = request.GET.get('bdic')
#             role = request.GET.get('role')
            
#             sumlist =[]
#             if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic,boggy=bgno).exists():
#                 obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic,boggy=bgno).values();
#                 for i in obj:
#                     bdipc=i['bdipc']

#                     Longspeci1=i['Longspeci1']
#                     Transspeci1=i['Transspeci1']
#                     Vertispeci1=i['Vertispeci1']  

#                     bdiptvnr=i['bdiptvnr']
#                     bdiptvnl=i['bdiptvnl']
#                     bdiptvr=i['bdiptvr']
                                     
#                     temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}   
#                     sumlist.append(temp) 
#                 context = {
#                     'sumlist': sumlist
#                 }
#                 print("sumlist",sumlist)
                
#             else:
#                 context = {
#                     'sumlist': sumlist
#                 }
#             return JsonResponse({'data':context})

                
#     except Exception as e:
#         print("&&&&&&&&&&&&&",e)

def getPrevdata_block(request):
    try:
        if request.method=="GET" and request.is_ajax():
            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
            
            sumlist =[]
            if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic,boggy=bgno).exists():
                obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic,boggy=bgno).values()
                for i in obj:
                    bdipc=i['bdipc']

                    Longspeci1=i['Longspeci1']
                    Transspeci1=i['Transspeci1']
                    Vertispeci1=i['Vertispeci1']  

                    bdiptvnr=i['bdiptvnr']
                    bdiptvnrt2=i['bdiptvnrt2']
                    bdiptvnrt3=i['bdiptvnrt3']
                    bdiptvnl=i['bdiptvnl']
                    bdiptvnlt2=i['bdiptvnlt2']
                    bdiptvnlt3=i['bdiptvnlt3']
                    bdiptvr=i['bdiptvr']
                                     
                    temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr,'bdiptvnrt2':bdiptvnrt2,'bdiptvnrt3':bdiptvnrt3,'bdiptvnlt2':bdiptvnlt2,'bdiptvnlt3':bdiptvnlt3}   
                    sumlist.append(temp) 
                context = {
                    'sumlist': sumlist
                }
                print("sumlist11111",sumlist)
                
            else:
                context = {
                    'sumlist': sumlist
                }
            return JsonResponse({'data':context})

                
    except Exception as e:
        print("&&&&&&&&&&&&&",e)
def fetch_rej_list_block(request):
    cuser=request.user
    print(cuser)
    obj2=list(forwarded_applications_block.objects.filter(status='Returned',user_emp=cuser,changes_by='sse_block_shopinspection').values().order_by('sno'))
    
    pending_appl=[]
    for i in obj2:
        bgno=i['boogy_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'bgno':bgno,'eng_url':url,"date":date,}
        print(temp,"rajrajaraj")
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
   











#new Changes from here 8-12-2021 Prakhar Negi
#**********************************************************************************************************************
#changesfor 8-12-2021 Prakhar
def block_inspection1newview(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count
        #'bdmsd':bdmsd,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection1.html",context)



def block_inspection1sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
        }
    if request.method =="POST":
        # print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        # print("***",submitvalue)
        # print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            # print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            # print("***",LH)
            Remark=request.POST.get('Remark')
            # print("***",Remark)
            date = request.POST.get('date')
            # print("***date***",date)
            boggyno = request.POST.get('boggyno')
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection1.1.html",context)    

def block_inspection1third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="cqam").values('boggy').distinct())
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
        }
    if request.method =="POST":
        # print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        # print("***",submitvalue)
        # print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            # print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            # print("***",LH)
            Remark=request.POST.get('Remark')
            # print("***",Remark)
            date = request.POST.get('date')
            # print("***date***",date)
            boggyno = request.POST.get('boggyno')
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection1.2.html",context) 

# Karan_Kumar-11/04/2023

@csrf_exempt
def SAVEINSP77(request):
    try:
        if request.method == "POST" or request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.POST.get("newdata")
            print('newdata11111',list1)
            list2 = request.POST.get("newdata1")
            # print('karan',list1[0][2])
            role=request.POST.get('role')
            cuser=request.user
            
            bgno=request.POST.get('bogno')
            date=request.POST.get('date')
            bdic=request.POST.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_rh=[]
            vlist_rht2=[]
            vlist_rht3=[]
            vlist_lh=[]
            vlist_lht2=[]
            vlist_lht3=[]
            vlist_remark=[]
            
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                    
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
                print('kkr',list5)
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_rh.append(list5[k])
                    elif k==3:
                        vlist_rht2.append(list5[k])
                    elif k==4:
                        vlist_rht3.append(list5[k])
                    elif k==5:
                        vlist_lh.append(list5[k])
                    elif k==6:
                        vlist_lht2.append(list5[k])
                    elif k==7:
                        vlist_lht3.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        # if list5[k]=="" 
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_remark.append(list5[k])
                    print("j=",list5[k])

            print("vlist_lht2",vlist_lht2)
            print("vlist_rht2",vlist_rht2)  
            
         
            for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_rh,vlist_lh,vlist_remark,vlist_rht2,vlist_rht3,vlist_lht2,vlist_lht3):
                print(i,j,k,l,role,"dfgsdhsh")
                print('mmmmm',m)
                
                print("yes")
                if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).exists():
                    # BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno).update(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date)
                    BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).update(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,bdiptvnrt2=m,bdiptvnrt3=n,bdiptvnlt2=o,bdiptvnlt3=p)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection',empno=cuser).update(status="Forwarded")

                else:
                    # BLOCK_DIV_INSP_PARA_TRX.objects.create(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,boggy=bgno,bdipc=i,bdic_id=bdic)
                    BLOCK_DIV_INSP_PARA_TRX.objects.create(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,boggy=bgno,bdipc=i,bdic_id=bdic,bdiptvnrt2=m,bdiptvnrt3=n,bdiptvnlt2=o,bdiptvnlt3=p,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection',empno=cuser).update(status="Forwarded")
                  
        
                
            return JsonResponse({'status': 200})

    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)

@csrf_exempt
def SAVEINSP88(request):
    try:
        if request.method == "POST" or request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.POST.get("newdata")
            print('newdata11111',list1)
            list2 = request.POST.get("newdata1")
            # print('karan',list1[0][2])
            role=request.POST.get('role')
            cuser=request.user
            
            bgno=request.POST.get('bogno')
            date=request.POST.get('date')
            bdic=request.POST.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_rh=[]
            vlist_rht2=[]
            vlist_rht3=[]
            vlist_lh=[]
            vlist_lht2=[]
            vlist_lht3=[]
            vlist_remark=[]
            
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                    
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
                print('kkr',list5)
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_rh.append(list5[k])
                    elif k==3:
                        vlist_rht2.append(list5[k])
                    elif k==4:
                        vlist_rht3.append(list5[k])
                    elif k==5:
                        vlist_lh.append(list5[k])
                    elif k==6:
                        vlist_lht2.append(list5[k])
                    elif k==7:
                        vlist_lht3.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        # if list5[k]=="" 
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_remark.append(list5[k])
                    print("j=",list5[k])

            print("vlist_lht2",vlist_lht2)
            print("vlist_rht2",vlist_rht2)  
            
         
            for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_rh,vlist_lh,vlist_remark,vlist_rht2,vlist_rht3,vlist_lht2,vlist_lht3):
                print(i,j,k,l,role,"dfgsdhsh")
                print('mmmmm',m)
                
                print("yes")
                if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).exists():
                    # BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno).update(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date)
                    BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).update(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,bdiptvnrt2=m,bdiptvnrt3=n,bdiptvnlt2=o,bdiptvnlt3=p)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")

                else:
                    # BLOCK_DIV_INSP_PARA_TRX.objects.create(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,boggy=bgno,bdipc=i,bdic_id=bdic)
                    BLOCK_DIV_INSP_PARA_TRX.objects.create(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,boggy=bgno,bdipc=i,bdic_id=bdic,bdiptvnrt2=m,bdiptvnrt3=n,bdiptvnlt2=o,bdiptvnlt3=p,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                  
        
                
            return JsonResponse({'status': 200})

    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)


@csrf_exempt
def SAVEINSP11(request):
    try:
        if request.method == "POST" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.POST.get("newdata")
            list2 = request.POST.get("newdata1")
            
            role=request.POST.get('role')
            cuser=request.user

            bgno=request.POST.get('bogno')
            date=request.POST.get('date')
            bdic=request.POST.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            print(type(list4))
            
            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_rh=[]
            vlist_lh=[]
            vlist_remark=[]
            
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                    
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
    
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_rh.append(list5[k])
                    elif k==3:
                        vlist_lh.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        # if list5[k]=="" 
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_remark.append(list5[k])
                    print("j=#",list5[k])
    
            print("vlist_remark",vlist_remark)
            print("vlist_sno",vlist_sno)  
            
            for i,j,k,l in zip(vlist_desc,vlist_rh,vlist_lh,vlist_remark):
                print(i,j,k,l,role,"jhshjhsdfjkh")
                
                print("yes")
                if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).exists():
                    BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=bgno,TICK=role).update(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,boggy=bgno,TICK=role)
                    # forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")

                else:
                    BLOCK_DIV_INSP_PARA_TRX.objects.create(bdiptvnr=j,bdiptvnl=k,bdiptvr=l,dateblock=date,bdipc=i,bdic_id=bdic,TICK=role,boggy=bgno)
                    # forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")

                    # BLOCK_DIV_INSP_PARA_TRX.objects.create(Longspeci1=j,Transspeci1=k,Vertispeci1=l,bdiptvr=m,dateblock=date,boggy=boggy,bdipc=i,bdic_id=bdic,TICK=role)

        
                
            return JsonResponse({'status': 200})

    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)





@csrf_exempt
def SAVEINSP55(request):
    try:
        if request.method == "POST" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.POST.get("newdata")
            list2 = request.POST.get("newdata1")
            
            role=request.POST.get('role')

            boggy=request.POST.get('bogno')
            date=request.POST.get('date')
            bdic=request.POST.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_Lrh=[]
            vlist_Trh=[]
            vlist_Vrh=[]
            vlist_remark=[]
            
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                    
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
    
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_Lrh.append(list5[k])
                    elif k==3:
                        vlist_Trh.append(list5[k])
                    elif k==4:
                        vlist_Vrh.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        vlist_remark.append(list5[k])
                    print("j=",list5[k])
    
            print("vlist_remark",vlist_remark)
            print("vlist_sno",vlist_sno)  
            
            for i,j,k,l,m in zip(vlist_desc,vlist_Lrh,vlist_Trh,vlist_Vrh,vlist_remark):
                print(i,j,k,l,bdic,role)
                print("yes")

                print("yes")
                if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=boggy,TICK=role).exists():
                    BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i,bdic_id=bdic,boggy=boggy,TICK=role).update(Longspeci1=j,Transspeci1=k,Vertispeci1=l,bdiptvr=m,dateblock=date,boggy=boggy,TICK=role)
                    print('sahi h')
                else:
                    print('hi to sahi')
                    BLOCK_DIV_INSP_PARA_TRX.objects.create(Longspeci1=j,Transspeci1=k,Vertispeci1=l,bdiptvr=m,dateblock=date,boggy=boggy,bdipc=i,bdic_id=bdic,TICK=role)
                 
            return JsonResponse({'status': 200})
    except Exception as e:
       print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)


def SAVEINSP1(request):
    if request.method == "GET" and request.is_ajax():
        boggy=request.GET.get('boggy')
        obj123=list(models.BLOCK_DIV_INSP_PARA_TRX.objects.all().values())
        print("obj1",obj123)
        for i in obj123:
            bdipc = i['bdipc']
            print("bdipc",bdipc)
            save=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc,boggy=boggy).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200})

    
def EDITINSP1(request):
    if request.method == "GET" and request.is_ajax():
        RH=request.GET.get('rh')
        #print("***",RH)
        LH=request.GET.get('lh')
        #print("***",LH)
        Remark=request.GET.get('remark')
        #print("***",Remark)
        boggy=request.GET.get('bogno')
        #print("*",boggy)
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipdesc=desc).values('bdipc','bdic').distinct())[0]
        bdipc=obj1['bdipc']
        print("bdipc",bdipc)
        bdic=obj1['bdic']
        print("bdic",bdic)
        #print("***************id")    
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).exists():
            sav = BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).update(bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggy,bdiptd=desc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})    

def forward1(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'BLOCK_DIVISION/forward1.html',context)  

def forward1sec(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    # empname=obj['empname']
    # empno=obj['empno']
    # print("empname=",empname)
    # print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        # "empname":empname,
        # "empno":empno,
    }  
    return render(request,'BLOCK_DIVISION/forward1sec.html',context)    


    ##block_inspection2

def block_inspection2(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
    } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection2.html',context)          
  

def block_inspection2sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct()
    count=1
    #a=BTCT1
    boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(TICK="WM").values('boggy').distinct()) 
    print("boggy",boggyobj)
        # print("**",obj)
    context={
        "obj":obj,
        "obj1":obj1,
        "boggyobj":boggyobj
    } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection2.1.html',context)

def block_inspection2third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct()
    count=1
    #a=BTCT1
    boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(TICK="cqam").values('boggy').distinct()) 
    print("boggy",boggyobj)
        # print("**",obj)
    context={
        "obj":obj,
        "obj1":obj1,
        "boggyobj":boggyobj
    } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection2.2.html',context)   

def SAVEINSP2(request):
    if request.method == "GET" and request.is_ajax():
        boggy=request.GET.get('boggy')
        obj123=list(models.BLOCK_DIV_INSP_PARA_TRX.objects.all().values())
        print("obj1",obj123)
        for i in obj123:
            bdipc = i['bdipc']
            print("bdipc",bdipc)
            save=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc,boggy=boggy).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200})   

def EDITINSP2(request):
    if request.method == "GET" and request.is_ajax():
        LRH=request.GET.get('LRH')   
        print("LRHHH",LRH)  
        LLH=request.GET.get('LLH') 
        TRH=request.GET.get('TRH')     
        TLH=request.GET.get('TLH')
        VRH=request.GET.get('VRH')     
        VLH=request.GET.get('VLH') 
        Remark=request.GET.get('remark')      
        boggy=request.GET.get('bogno')
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipdesc=desc).values('bdipc','bdic').distinct())[0]
        bdipc=obj1['bdipc']
        print("***********ibjj",bdipc)    
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).exists(): 
            print("___yes_____")   
            sav = BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).update(Longspeci1=LRH,Longspeci2=LLH,Transspeci1=TRH,Transspeci2=TLH,Vertispeci1=VRH,Vertispeci2=VLH,bdiptvr=Remark,dateblock=date,boggy=boggy,bdiptd=desc)      
            F=0
        else :
            F=1
        return JsonResponse({'data':F})    

def SAVEINSP22(request):
    if request.method == "GET" and request.is_ajax():
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        boggy=request.GET.get('bogno')
        date=request.GET.get('date')
        print("newdata=",list1)
        print(type(list1))
        print("newdata1=",list2)
        print(type(list2))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=3
        c2=4
        c3=6
        c4=7
        c5=9
        c6=10
        c7=11
        vlist=[]
        vlist_desc=[]
        vlist_Lrh=[]
        vlist_Llh=[]
        vlist_Trh=[]
        vlist_Tlh=[]
        vlist_Vrh=[]
        vlist_Vlh=[]
        vlist_re=[]
        
        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist)   
        
        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+11
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0     
        
        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_Lrh.append(j)
                c1=c1+11
            counter=counter+1   
        print("Lrh",vlist_Lrh) 
        counter=0
        
        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlist_Llh.append(k)
                c2=c2+11
            counter=counter+1   
        print("Llh",vlist_Llh) 
        counter=0

        for l in vlist:
            if l=='':
                break
            if counter==c3:
                vlist_Trh.append(l)
                c3=c3+11
            counter=counter+1   
        print("Trh",vlist_Trh) 
        counter=0
        
        for m in vlist:
            if m=='':
                break
            if counter==c4:
                vlist_Tlh.append(m)
                c4=c4+11
            counter=counter+1   
        print("Tlh",vlist_Tlh) 
        counter=0

        for n in vlist:
            if n=='':
                break
            if counter==c5:
                vlist_Vrh.append(n)
                c5=c5+11
            counter=counter+1   
        print("Vrh",vlist_Vrh) 
        counter=0
        
        for o in vlist:
            if o=='':
                break
            if counter==c6:
                vlist_Vlh.append(o)
                c6=c6+11
            counter=counter+1   
        print("Vlh",vlist_Vlh) 
        counter=0



        for p in vlist:
            if p=='':
                break
            if counter==c7:
                #k=k.split()
                ch = '"'
                N = p.index(ch)
                p=p[ 0 : N ]
                print("p",p) 
                vlist_re.append(p)
                c7=c7+11
                x=x+1
            counter=counter+1   
        print("VLIST",vlist_re) 
        print(len(vlist_re))
        print("YES")
        for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_Lrh,vlist_Llh,vlist_Trh,vlist_Tlh,vlist_Vrh,vlist_Vlh,vlist_re):
            print(i,j,k,l,m,n,o,p)
            obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipdesc=i).values('bdipc'))[0]
            bdipc=obj1['bdipc']
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=j,Longspeci2=k,Transspeci1=l,Transspeci2=m,Vertispeci1=n,Vertispeci2=o,bdiptvr=p,dateblock=date,boggy=boggy,bdiptd=i,bdipc=bdipc)
            sav.save()
        obj123=list(models.BLOCK_DIV_INSP_PARA_TRX.objects.all().values())
        print("obj1",obj123)
        for i in obj123:
            bdipc = i['bdipc']
            print("bdipc",bdipc)
            save=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc,boggy=boggy).update(TICK="WM")
            print("save",save)    
        return JsonResponse({'status': 200})    

def forwardBLOCK2(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK2.html',context) 
    
def forwardBLOCK3(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK3.html',context)    

def forwardBLOCK4(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK4.html',context) 

def forwardBLOCK5(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK5.html',context) 

def forwardBLOCK6(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK6.html',context) 

def forwardBLOCK7(request):
    obj=list(empmast.objects.filter(role='WM/LAS').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forwardBLOCK7.html',context)

def forward2sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward2sec.html',context) 

def forward3sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward3sec.html',context) 

def forward4sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward4sec.html',context) 

def forward5sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward5sec.html',context) 
def forward6sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward6sec.html',context) 

def forward7sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward7sec.html',context)      

def fetchemp(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empno'))[0]
    empno=obj['empno']
    print("empno888888888888",empno)
    context={
        "empno":empno,
    }
    return JsonResponse({'data':context},safe=False)  

def fetchemp1(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
    empno=obj['empno']
    print("empno888888888888",empno)
    context={
        "empno":empno,
    }
    return JsonResponse({'data':context},safe=False)  

def forwardws1(request):
    if request.method == "GET" or request.is_ajax():
        from datetime import datetime
        cuser=request.user
        btct1=request.GET.get("btct1")
        btct2=request.GET.get("btct2")
        btct3=request.GET.get("btct3")
        btct4=request.GET.get("btct4")
        btct5=request.GET.get("btct5")
        btct6=request.GET.get("btct6")
        btct7=request.GET.get("btct7")
        empno=request.GET.get("empno")
        bgno=request.GET.get("bgno")
        datee=request.GET.get("datee")
        print(datee,"vikashkumar")
        date=datetime.strptime(datee,'%d-%m-%Y')
        print(date,"&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&")

        if forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            print("exists**************************************")
            forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending",date=date,empno=empno)
        else:
            forwarded_applications_block.objects.create(boogy_no=bgno,date=date,
                engine_url="block_inspection1sec",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        
        return JsonResponse({'status': 200})         


#vashuu
def fetchblockcrankmst1(request): 
    if request.method == "GET" and request.is_ajax():
        obj=list(Block_Crank_Mst1.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                bdicc= i['bdicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'bdicc':bdicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  

    

def fetchlink(request):
    from datetime import datetime
    print(request.user)
    print("ashcgayigscyiagiy")
    role=request.GET.get('role')
    print(role)
    obj2=list(forwarded_applications_block.objects.filter(status="Pending",changes_by=role,empno=request.user).values().order_by('sno'))
    obj=list(forwarded_applications_block.objects.filter(status="Forwarded",changes_by=role,empno=request.user).values().order_by('sno'))
    print(obj2,"5555555555555555555555555555555555")
    print(obj,"ssssssssssssssssssssss")
    pending_appl=[]
    for i in obj2:
        boogy_no=i['boogy_no']
        url=i['engine_url']
        date=i['date']
        useremp=i['user_emp']
        empno=i['empno']
        if date:
            date = datetime.strftime(date,'%d-%m-%Y')
        else:
            date =''
        temp={'boogy_no':boogy_no,'eng_url':url,"date":date,'send_by':useremp}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        boogy_no=i['boogy_no']
        url=i['engine_url']
        date=i['date']
        if date:
            date = datetime.strftime(date,'%d-%m-%Y')
        else:
            date =''
        temp={'boogy_no':boogy_no,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 





def fetchlink2(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)


def fetchemp_engine2(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
    empno=obj['empno']
    print("empno888888888888",empno)
    context={
        "empno":empno,
    }
    return JsonResponse({'data':context},safe=False)    
        

def fetch_engine1sec(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400) 


def forwardcqam1(request):
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        bgno=request.GET.get("bgno")
        datee=request.GET.get("date")
        send_by=request.GET.get("send_by")
        date=datetime.strptime(datee,'%d-%m-%Y').strftime('%Y-%m-%d')
        if forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=cuser,changes_by='sse_block_shopinspection(G)').exists():
            forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=cuser,changes_by='sse_block_shopinspection(G)',date=date).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=bgno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:
            forwarded_applications_block.objects.create(boogy_no=bgno,date=date,
                engine_url="block_inspection1third",status="Pending",empno=cqam_empno,user_emp=cuser,changes_by='sse_block_shopinspection(G)')
        
        forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=send_by,changes_by='sse_block_shopinspection').update(status="Forwarded")
        forwarded_applications_block.objects.filter(boogy_no=bgno,empno=cuser,changes_by='sse_block_shopinspection(G)').update(status = 'Forwarded')
        
 
        return JsonResponse({'status': 200})

def forwardcqam(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct",btct)
    obj=list(models.BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.all().values())
    print("obj1",obj)
    for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="cqam")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200})     

#blockinspection 3-7    

def block_inspection6(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count
        #'bdmsd':bdmsd,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            # obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            # obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipmn','bdipmm').distinct())[0]
            # bdipmn=float(obj1['bdipmn'])
            # bdipmm=float(obj1['bdipmm'])
            # if((RH>bdipmm)and(RH<bidpmn)):
            #     f1=1
            #     print("yes")
            # if((LH>bdipmm)and(RH<bidpmn)):
            #     f2=1          
            #     print("yes1")

            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc)+1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection6.html",context)

def return_to_user_by_wm_boggy(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        bgno=request.GET.get("bgno")
        send_by=request.GET.get("send_by")
        
       
        print("*********",send_by)
        if bgno!=None:
            print("dflsdfj")
            print(cuser)
            forwarded_applications_block.objects.filter(boogy_no=bgno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Returned',engine_url="block_inspection1fourth")
            # forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=empno,changes_by='wm').update(status = 'Returned')
            print("aa")
        # if esn!=None:
        #     print("dekh")
        #     cc=esn+","+typee+","+odn+","+btn
        #     forwarded_applications_block.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

def block_inspection7(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count
        #'bdmsd':bdmsd,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            # obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            # obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipmn','bdipmm').distinct())[0]
            # bdipmn=float(obj1['bdipmn'])
            # bdipmm=float(obj1['bdipmm'])
            # if((RH>bdipmm)and(RH<bidpmn)):
            #     f1=1
            #     print("yes")
            # if((LH>bdipmm)and(RH<bidpmn)):
            #     f2=1          
            #     print("yes1")

            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc)+1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection7.html",context)

def block_inspection4(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count
        #'bdmsd':bdmsd,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            # obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            # obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipmn','bdipmm').distinct())[0]
            # bdipmn=float(obj1['bdipmn'])
            # bdipmm=float(obj1['bdipmm'])
            # if((RH>bdipmm)and(RH<bidpmn)):
            #     f1=1
            #     print("yes")
            # if((LH>bdipmm)and(RH<bidpmn)):
            #     f2=1          
            #     print("yes1")

            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc)+1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection4.html",context)



   
def block_inspection6sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT6').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
            # 'bdmsd':bdmsd,
        }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection6.1.html",context)   
def block_inspection7sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT7').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
        }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            # obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            # obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipmn','bdipmm').distinct())[0]
            # bdipmn=float(obj1['bdipmn'])
            # bdipmm=float(obj1['bdipmm'])
            # if((RH>bdipmm)and(RH<bidpmn)):
            #     f1=1
            #     print("yes")
            # if((LH>bdipmm)and(RH<bidpmn)):
            #     f2=1          
            #     print("yes1")

            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc)+1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection7.1.html",context)    



def block_inspection6third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT6').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="cqam").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
            # 'bdmsd':bdmsd,
        } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)    
        if submitvalue=='PDF':  
            print("YESYES")
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')     
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection6.2.html",context)      
def block_inspection7third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT7').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
        } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)    
        if submitvalue=='PDF':  
            print("YESYES")
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')     
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection7.2.html",context)         
            
   
def block_inspection4sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT4').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
            # 'bdmsd':bdmsd,
        }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            # obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            # obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipmn','bdipmm').distinct())[0]
            # bdipmn=float(obj1['bdipmn'])
            # bdipmm=float(obj1['bdipmm'])
            # if((RH>bdipmm)and(RH<bidpmn)):
            #     f1=1
            #     print("yes")
            # if((LH>bdipmm)and(RH<bidpmn)):
            #     f2=1          
            #     print("yes1")

            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc)+1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection4.1.html",context)   

def block_inspection4third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT4').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="cqam").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
            # 'bdmsd':bdmsd,
        } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)    
        if submitvalue=='PDF':  
            print("YESYES")
            pdf = render_to_pdf('block_inspection1pdf.html') 
            return HttpResponse(pdf,content_type='application/pdf')     
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            print("***************id")    
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date,boggy=boggyno)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection4.2.html",context)        
       

    

def fetchblock(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        print("drgno***********",drgno)
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
        bdic="BTCT1"
        if len(obj)>0:
            bdic=obj[0]['bdic']
            # obj=obj[0]
        print("*************",bdic)
        # bdid=obj['bdid']
        # bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('slno','bdipc','bdipdesc','bdipmn','bdipmm').order_by('sno'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
            print(i['bdipmn'],"***********************")
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
            # bdipmm=float(i['bdipmm'])
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc).values('bdiptvnr','bdiptvnl','bdiptvr'))  
            # print("object",obj2) 
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''                    
            temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'fin':fin,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}   
            sumlist.append(temp) 
            # print("sumlist",sumlist)
                
        # sno =  (block_division_mst.objects.filter(bdidg=drgno).values('sno').distinct())[0] 
        # sno = sno['sno']
        # if(sno is None):
        #     sno = 1
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  


def fetchblocksec(request):
    if request.method=="GET" and request.is_ajax():
        #vashu
        drgno = request.GET.get('drgno')
        boggyno = request.GET.get('boggyno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipdesc','bdipmn','bdipmm').order_by('sno'))
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc,boggy=boggyno).values('bdiptvnr','bdiptvnl','bdiptvr'))  
            # print("object",obj2) 
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''                    
            temp={'bdipdesc':bdipdesc,'fin':fin,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}   
            sumlist.append(temp) 
            # print("sumlist",sumlist)
                
            # sno =  (block_division_mst.objects.filter(bdidg=drgno).values('sno').distinct())[0] 
            # sno = sno['sno']
            # if(sno is None):
            #     sno = 1
        context = {
                'sumlist': sumlist
            }
        return JsonResponse({'data':context},safe=False)    
    return JsonResponse({"success":False}, status=400)    
    


#changesdef
def fetchblock2(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        #print("drgno***********",drgno)
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('bdidg'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            Longmin=float(i['Longmin'])
            Longmax=float(i['Longmax'])
            Transmin=float(i['Transmin'])
            Transmax=float(i['Transmax'])
            Vertimin=float(i['Vertimin'])
            Vertimax=float(i['Vertimax'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=sum1-Longmin
            rem1=round(rem1, 1)
            rem2=sum2-Transmin
            rem2=round(rem2, 1)
            rem3=sum3-Vertimin
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
            print("all rem",rem1,rem2,rem3)
            print("**********all sum",sum1,sum2,sum3)
            print("all fin",fin1,fin2,fin3)
            print("check1") 
            print("check1")
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc).values('Longspeci1','Longspeci2','Transspeci1','Transspeci2','Vertispeci1','Vertispeci2','bdiptvr'))  
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Longspeci2=j['Longspeci2']
                Transspeci1=j['Transspeci1']
                Transspeci2=j['Transspeci2']
                Vertispeci1=j['Vertispeci1']
                Vertispeci2=j['Vertispeci2']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                Longspeci1 = ''
                Longspeci2 = ''
                Transspeci1 = ''
                Transspeci2 = ''
                Vertispeci1 = ''
                Vertispeci2 = ''
                bdiptvr=''
            #till here
            temp={'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'Longspeci1':Longspeci1,'Longspeci2':Longspeci2,'Transspeci1':Transspeci1,'Transspeci2':Transspeci2,'Vertispeci1':Vertispeci1,'Vertispeci2':Vertispeci2,'bdiptvr':bdiptvr}   
            sumlist.append(temp) 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def fetchblock2sec(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        boggyno = request.GET.get('boggyno')
        #print("drgno***********",drgno)
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            Longmin=float(i['Longmin'])
            Longmax=float(i['Longmax'])
            Transmin=float(i['Transmin'])
            Transmax=float(i['Transmax'])
            Vertimin=float(i['Vertimin'])
            Vertimax=float(i['Vertimax'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=sum1-Longmin
            rem1=round(rem1, 1)
            rem2=sum2-Transmin
            rem2=round(rem2, 1)
            rem3=sum3-Vertimin
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
            print("all rem",rem1,rem2,rem3)
            print("**********all sum",sum1,sum2,sum3)
            print("all fin",fin1,fin2,fin3)
            print("check1") 
            print("check1")
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc,boggy=boggyno).values('Longspeci1','Longspeci2','Transspeci1','Transspeci2','Vertispeci1','Vertispeci2','bdiptvr'))  
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Longspeci2=j['Longspeci2']
                Transspeci1=j['Transspeci1']
                Transspeci2=j['Transspeci2']
                Vertispeci1=j['Vertispeci1']
                Vertispeci2=j['Vertispeci2']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                Longspeci1 = ''
                Longspeci2 = ''
                Transspeci1 = ''
                Transspeci2 = ''
                Vertispeci1 = ''
                Vertispeci2 = ''
                bdiptvr=''
            #till here
            temp={'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'Longspeci1':Longspeci1,'Longspeci2':Longspeci2,'Transspeci1':Transspeci1,'Transspeci2':Transspeci2,'Vertispeci1':Vertispeci1,'Vertispeci2':Vertispeci2,'bdiptvr':bdiptvr}   
            sumlist.append(temp) 
        context = {
                'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)    



def fetchblock3(request):
    if request.method=="GET" and request.is_ajax():
        print("hellow")
        #drgno = request.GET.get('drgno')
        boggy = request.GET.get('boggyno')
        print("*****boggy no *********",boggy)
        obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0] 
        print("*******OBJ*******",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdips', 'Longspeci','Transspeci','Vertispeci').distinct())[0]
        bdips=obj1['bdips']
        Longspeci=obj1['Longspeci']
        Transspeci=obj1['Transspeci']
        Vertispeci=obj1['Vertispeci']
        print("**********bdips",obj1)
        context = {
            'bdid' :  bdid,
            'bdic' :  bdic,
            'bdips':  bdips,
            'Longspeci': Longspeci,
            'Transspeci': Transspeci,
            'Vertispeci': Vertispeci
        }
        # myval1= list(block_division_mst.objects.filter(axle_no=mysno).values('bo_no').distinct())
        # myval2 = list(block_division_mst.objects.filter(bo_no=myval1[0]['bo_no']).values('ep_type').distinct())
        # myval3 = list(block_division_mst.objects.filter(code=myval2[0]['ep_type'],cd_type='11').values('alpha_1').distinct())
        # myval4 = list(block_division_mst.objects.filter(bo_no=myval3[0]['bo_no']).values('ep_type').distinct())
        # myval5 = list(block_division_mst.objects.filter(code=myval4[0]['ep_type'],cd_type='11').values('alpha_1').distinct())

        #return JsonResponse({'obj':obj}, safe = False)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def fetch_block_welding_master(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=block_welding_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edicc=i['edicc']
            print("edicc",edicc)
            edidh=i['edidh'] 
            print(edidh)
            edidm=i['edidm']
            print(edidm)
            edids=i['edids']
            print(edids)
            temp={'sno':sno,'edicc':edicc,'edidh':edidh,'edidm':edidm,'edids':edids}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def update_block_welding_mst(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        #print("***",RH)
        edicc=request.GET.get('edicc')
        print(edicc)
        #print("***",LH)
        edidh=request.GET.get('edidh')
        print(edidh)
        #print("***",Remark)
        edidm=request.GET.get('edidm')
        print(edidm)
        edids=request.GET.get('edids')
        print(edids)
        #print("*",boggy)
        #print("***************id")  
        if block_welding_mst.objects.filter(edicc=edicc).exists():
            block_welding_mst.objects.filter(edicc=edicc).update(sno=sno,edidh=edidh,edidm=edidm,edids=edids).order_by('sno')
        else :
            block_welding_mst.objects.create(sno=sno,edicc=edicc,edidh=edidh,edidm=edidm,edids=edids).order_by('sno')
 
        return JsonResponse({'status': 200})    
 
 
def delete_block_welding_mst(request):
    if request.method == "GET" and request.is_ajax():
        edicc=request.GET.get('edicc')  
        sav = block_welding_mst.objects.get(edicc=edicc)
        sav.delete()
        return JsonResponse({'status': 200})   

def block_welding_mst_view(request):
        return render(request,"BLOCK_DIVISION/block_welding_mst.html")   

def block_inspection1fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection1.3.html",context)

def block_inspection2fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection2.3.html",context)

def block_inspection3fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection3.3.html",context)
def block_inspection4fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection4.3.html",context)
def block_inspection5fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection5.3.html",context)
def block_inspection6fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection6.3.html",context)
def block_inspection7fourth(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
     
    context={
        "obj":obj,
    }
    return render(request,"BLOCK_DIVISION/block_inspection7.3.html",context)



def fetchblock5(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        print("drgno***********",drgno)
        bdic="BTCT5"
        if drgno == "2.Bogie Frame Drawing No- 1209-01.112-180":
            bdic="BTCT2"

        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('slno','bdipc','bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax').order_by('sno'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']

            if i['Longmin']!='':
                Longmin=float(i['Longmin'])
            else:
                Longmin=0

            if i['Longmax']!='':
                Longmax=float(i['Longmax'])
            else:
                Longmax=0

            if i['Transmin']!='':
                Transmin=float(i['Transmin'])
            else:
                Transmin=0
            if i['Transmax']!='':
                Transmax=float(i['Transmax'])
            else:
                Transmax=0

            if i['Vertimin']!='':
                Vertimin=float(i['Vertimin'])
            else:
                Vertimin=0
            if i['Vertimax']!='':
                Vertimax=float(i['Vertimax'])
            else:
                Vertimax=0

            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=abs(sum1-Longmin)
            rem1=round(rem1, 1)
            rem2=abs(sum2-Transmin)
            rem2=round(rem2, 1)
            rem3=abs(sum3-Vertimin)
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
        
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc).values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
            Longspeci1 = ''
            Transspeci1 = ''
            Vertispeci1 = ''
            bdiptvr=''
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Transspeci1=j['Transspeci1']
                Vertispeci1=j['Vertispeci1']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
              
                Longspeci1 = ''
                Transspeci1 = ''
                Vertispeci1 = ''
                bdiptvr=''

            temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvr':bdiptvr}  
            sumlist.append(temp)
        print("sumlistvikash",sumlist)
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 

# def fetchblock5(request):
#     if request.method=="GET" and request.is_ajax():
#         drgno = request.GET.get('drgno')
#         print("drgno***********",drgno)
#         bdic="BTCT5"
#         if drgno == "2.Bogie Frame Drawing No- 1209-01.112-180":
#             bdic="BTCT2"

#         obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('slno','bdipc','bdipdesc').order_by('sno'))
#         print("***obj1**",obj1)
#         sumlist =[]
#         for i in obj1:
#             slno=i['slno']
#             bdipc=i['bdipc']
#             bdipdesc=i['bdipdesc']
#             obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc).values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
 
#             print("obj2",obj2)
#             Longspeci1 = ''
#             Transspeci1 = ''
#             Vertispeci1 = ''
#             bdiptvr=''
#             for j in obj2:
#                 Longspeci1=j['Longspeci1']
#                 Transspeci1=j['Transspeci1']
#                 Vertispeci1=j['Vertispeci1']
#                 bdiptvr=j['bdiptvr']
#             if obj2==[]:
#                 print("ififififiif-----------------------------------------")
#                 Longspeci1 = ''
#                 Transspeci1 = ''
#                 Vertispeci1 = ''
#                 bdiptvr=''
#             #till here
#             temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvr':bdiptvr}  
#             sumlist.append(temp)
#         print("sumlist",sumlist)
#         context = {
#             'sumlist': sumlist
#         }
#         return JsonResponse({'data':context},safe=False)
#     return JsonResponse({"success":False}, status=400)

def fetchblock5sec(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        boggyno = request.GET.get('boggyno')
        #print("drgno***********",drgno)
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('bdidg'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            Longmin=float(i['Longmin'])
            Longmax=float(i['Longmax'])
            Transmin=float(i['Transmin'])
            Transmax=float(i['Transmax'])
            Vertimin=float(i['Vertimin'])
            Vertimax=float(i['Vertimax'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=sum1-Longmin
            rem1=round(rem1, 1)
            rem2=sum2-Transmin
            rem2=round(rem2, 1)
            rem3=sum3-Vertimin
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
            print("all rem",rem1,rem2,rem3)
            print("**********all sum",sum1,sum2,sum3)
            print("all fin",fin1,fin2,fin3)
            print("check1") 
            print("check1")
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc,boggy=boggyno).values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
            print("obj2",obj2)
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Transspeci1=j['Transspeci1']
                Vertispeci1=j['Vertispeci1']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                Longspeci1 = ''
                Transspeci1 = ''
                Vertispeci1 = ''
                bdiptvr=''
            #till here
            temp={'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvr':bdiptvr}   
            sumlist.append(temp) 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def fetchblock5third(request):
    if request.method=="GET" and request.is_ajax():
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(TICK="cqam").exists():
            drgno = request.GET.get('drgno')
            boggyno = request.GET.get('boggyno')
            #print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('bdidg'))[0]
            print("**",obj)
            bdid=obj['bdid']
            bdic=obj['bdic']
            obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax'))
            print("***obj1**",obj1)
            sumlist =[]
            for i in obj1:
                bdipdesc=i['bdipdesc']
                Longmin=float(i['Longmin'])
                Longmax=float(i['Longmax'])
                Transmin=float(i['Transmin'])
                Transmax=float(i['Transmax'])
                Vertimin=float(i['Vertimin'])
                Vertimax=float(i['Vertimax'])
                print("***obj1**",obj1)
                print("desc**************",bdipdesc)
                sum1=((Longmax+Longmin)/2)
                sum2=((Transmax+Transmin)/2)
                sum3=((Vertimax+Vertimin)/2)
                rem1=sum1-Longmin
                rem1=round(rem1, 1)
                rem2=sum2-Transmin
                rem2=round(rem2, 1)
                rem3=sum3-Vertimin
                rem3=round(rem3, 1)
                sum1=str(sum1)
                rem1=str(rem1)
                sum2=str(sum2)
                rem2=str(rem2)
                sum3=str(sum3)
                rem3=str(rem3)
                fin1=str(sum1 +'+-'+ rem1)
                fin2=str(sum2 +'+-'+ rem2)
                fin3=str(sum3 +'+-'+ rem3)
                print("all rem",rem1,rem2,rem3)
                print("**********all sum",sum1,sum2,sum3)
                print("all fin",fin1,fin2,fin3)
                print("check1") 
                print("check1")
                obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc,boggy=boggyno,TICK="cqam").values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
                print("obj2",obj2)
                for j in obj2:
                    Longspeci1=j['Longspeci1']
                    Transspeci1=j['Transspeci1']
                    Vertispeci1=j['Vertispeci1']
                    bdiptvr=j['bdiptvr']
                if obj2==[]:
                    print("ififififiif-----------------------------------------")
                    Longspeci1 = ''
                    Transspeci1 = ''
                    Vertispeci1 = ''
                    bdiptvr=''
                #till here
                temp={'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvr':bdiptvr}   
                sumlist.append(temp) 
            context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)         

def blockselect2(request):
        return render(request,"BLOCK_DIVISION/blockselect2.html")      

def blockselect3(request):
        return render(request,"BLOCK_DIVISION/blockselect3.html") 
def block_inspection5(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
    } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection5.html',context)
          

def block_inspection5sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct()
    count=1
    #a=BTCT1
    boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(TICK="WM").values('boggy').distinct()) 
    print("boggy",boggyobj)
        # print("**",obj)
    context={
        "obj":obj,
        "obj1":obj1,
        "boggyobj":boggyobj
    }   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection5.1.html',context)
          

def block_inspection5third(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct()
    count=1
    #a=BTCT1
    boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(TICK="cqam").values('boggy').distinct()) 
    print("boggy",boggyobj)
        # print("**",obj)
    context={
        "obj":obj,
        "obj1":obj1,
        "boggyobj":boggyobj
    }  
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            lrh=request.POST.get('longititudnal Observation in (MM) (R.H.)')
            llh=request.POST.get('longititudnal Observation in (MM) (L.H.)')
            trh=request.POST.get('Transverse Observation in (MM) (R.H.)')
            tlh=request.POST.get('Transverse Observation in (MM) (L.H.)')
            vrh=request.POST.get('Vertical Observation in (MM) (R.H.)')
            vlh=request.POST.get('Vertical Observation in (MM) (L.H.)')
           
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            # bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            # bdiptc = bdiptc['bdiptc__max']
            # print("#####",bdiptc)
            # if( bdiptc is None):
            #     bdiptc = '1'
            # else:
            #     #bdiptc = bdiptc + 1
            #     bdiptc = str(int(bdiptc) +1)
            #     print("#####",bdiptc)
            id = list(models.BLOCK_DIV_INSP_PARA_TRX.objects.values('bdiptc').order_by('-bdiptc'))
            if len(id):
                id=id[0]['bdiptc']+1
            else:
                id=1
            sav = BLOCK_DIV_INSP_PARA_TRX(bdiptc=id,Longspeci1=lrh,Longspeci2=llh,Transspeci1=trh,Transspeci2=tlh,Vertispeci1=vrh,Vertispeci2=vlh,bdiptvr=Remark,dateblock=date)
            sav.save()    
    return render(request, 'BLOCK_DIVISION/block_inspection5.2.html',context)
                    

def block_inspection3(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    ##boggy=request.POST.get('bdidg')  
    context={
        "obj":obj,
        "obj1":obj1,
        # 'bdmsd':bdmsd,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            bdiptc = bdiptc['bdiptc__max']
            print("#####",bdiptc)
            if( bdiptc is None):
                bdiptc = '1'
            else:
                #bdiptc = bdiptc + 1
                bdiptc = str(int(bdiptc)+1)
                print("#####",bdiptc)
            sav = BLOCK_DIV_INSP_PARA_TRX.objects(bdiptc=bdiptc,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection3.html",context)

def block_inspection3sec(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT3').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="WM").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
            # 'bdmsd':bdmsd,
        }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            bdiptc = bdiptc['bdiptc__max']
            print("#####",bdiptc)
            if( bdiptc is None):
                bdiptc = '1'
            else:
                #bdiptc = bdiptc + 1
                bdiptc = str(int(bdiptc)+1)
                print("#####",bdiptc)
            sav = BLOCK_DIV_INSP_PARA_TRX.objects(bdiptc=bdiptc,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection3.1.html",context)

def block_inspection3third(request):    
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    count=1
    #a=BTCT1
    obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT3').values('bdipc').order_by('sno'))
    print('obj11',obj11)
    for i in obj11:
        print("i",i['bdipc'])
        boggyobj=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=i['bdipc'],TICK="cqam").values('boggy').distinct())
        # print("**",obj)
    context={
            "obj":obj,
            "obj1":obj1,
            "count":count,
            "boggyobj":boggyobj,
        } 
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)        
        if submitvalue =='submit':
            RH=request.POST.get('As Measured(R.H.)')
            print("***",RH)
            LH=request.POST.get('As Measured(L.H.)')
            print("***",LH)
            Remark=request.POST.get('Remark')
            print("***",Remark)
            date = request.POST.get('date')
            print("***date***",date)
            boggyno = request.POST.get('boggyno')
            print("bogggggggggie number",boggyno)
            bdiptc =  BLOCK_DIV_INSP_PARA_TRX.objects.all().aggregate(Max('bdiptc'))
            bdiptc = bdiptc['bdiptc__max']
            print("#####",bdiptc)
            if( bdiptc is None):
                bdiptc = '1'
            else:
                #bdiptc = bdiptc + 1
                bdiptc = str(int(bdiptc)+1)
                print("#####",bdiptc)
            sav = BLOCK_DIV_INSP_PARA_TRX.objects(bdiptc=bdiptc,bdiptvnr=RH,bdiptvnl=LH,bdiptvr=Remark,dateblock=date)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_inspection3.2.html",context)

def fetchblock4(request):
    if request.method=="GET" and request.is_ajax():
        print("hellow")
        #drgno = request.GET.get('drgno')
        boggy = request.GET.get('boggyno')
        print("*****boggy no *********",boggy)
        obj=list(block_division_mst.objects.filter(boggy=boggy).values('bdid','bdic').distinct())[0] 
        print("*******OBJ*******",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic).values('bdips', 'Longspeci','Transspeci','Vertispeci').distinct())[0]
        bdips=obj1['bdips']
        Longspeci=obj1['Longspeci']
        Transspeci=obj1['Transspeci']
        Vertispeci=obj1['Vertispeci']
        print("**********bdips",obj1)
        context = {
            'bdid' :  bdid,
            'bdic' :  bdic,
            'bdips':  bdips,
            'Longspeci': Longspeci,
            'Transspeci': Transspeci,
            'Vertispeci': Vertispeci
        }
        # myval1= list(block_division_mst.objects.filter(axle_no=mysno).values('bo_no').distinct())
        # myval2 = list(block_division_mst.objects.filter(bo_no=myval1[0]['bo_no']).values('ep_type').distinct())
        # myval3 = list(block_division_mst.objects.filter(code=myval2[0]['ep_type'],cd_type='11').values('alpha_1').distinct())
        # myval4 = list(block_division_mst.objects.filter(bo_no=myval3[0]['bo_no']).values('ep_type').distinct())
        # myval5 = list(block_division_mst.objects.filter(code=myval4[0]['ep_type'],cd_type='11').values('alpha_1').distinct())

        #return JsonResponse({'obj':obj}, safe = False)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)   

@csrf_exempt

def SAVEINSP5(request):
    if request.method == "GET" and request.is_ajax():
        boggy=request.GET.get('boggy')
        obj123=list(models.BLOCK_DIV_INSP_PARA_TRX.objects.all().values())
        print("obj1",obj123)
        for i in obj123:
            bdipc = i['bdipc']
            print("bdipc",bdipc)
            save=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc,boggy=boggy).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200})           

def EDITINSP5(request):
    if request.method == "GET" and request.is_ajax():
        LRH=request.GET.get('LRH')   
        print("LRHHH",LRH)   
        TRH=request.GET.get('TRH')     
        VRH=request.GET.get('VRH')     
        Remark=request.GET.get('remark')      
        boggy=request.GET.get('bogno')
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdipdesc=desc).values('bdipc','bdic').distinct())[0]
        bdipc=obj1['bdipc']
        print("***********ibjj",bdipc)    
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).exists(): 
            print("___yes_____")   
            sav = BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdipc=bdipc).update(Longspeci1=LRH,Transspeci1=TRH,Vertispeci1=VRH,bdiptvr=Remark,dateblock=date,boggy=boggy,bdiptd=desc)      
            F=0
        else :
            F=1
        return JsonResponse({'data':F})    

#checksheet changes
def checksheet1(request):
    #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
    obj=list(Block_Crank_Mst1.objects.all().values())[0]
    ROA=obj['ROA']
    print(ROA)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/CHECKSHEET1pdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['BLOCK_DIVISION_CRANK_INSPECTION_CODE']
            print("code",code)
            #empname=obj['empname']
    return render(request,'BLOCK_DIVISION/checksheet1.html',context)
    
def checksheet1sec(request):
    #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
    obj=list(Block_CRANK_1Mst.objects.all().values())[0]
    ROA=obj['ROA']
    print(ROA)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/CHECKSHEET1pdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['BLOCK_DIVISION_CRANK_INSPECTION_CODE']
            print("code",code)
            #empname=obj['empname']
    return render(request,'BLOCK_DIVISION/checksheet1sec.html',context)


def checksheet1third(request):
    #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
    obj=list(Block_CRANK_1Mst.objects.all().values())[0]
    ROA=obj['ROA']
    print(ROA)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/CHECKSHEET1pdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['BLOCK_DIVISION_CRANK_INSPECTION_CODE']
            print("code",code)
            #empname=obj['empname']
    return render(request,'BLOCK_DIVISION/checksheet1third.html',context)        

def newchecksheet1(request):
    print("yes1")
    obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)
        
    return render(request,'BLOCK_DIVISION/newchecksheet1.html',context)

def newchecksheet1sec(request):
    print("yes1")
    obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    obj11=list(block_division_crank_mst.objects.all().values().order_by('sno'))
    print('obj11',obj11)
    for i in obj11 :
        x=i['bdicc']
        X=x.split("BDICC")
        if(int(X[1])<200):
            print(X[1])
            CCNobj=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=i['bdicc'],TICK="WM").values('CCN').distinct())
            #print("i=",i['bdicc'])
    print("ccn",CCNobj)
        # print("**",obj)
    context={
        "obj":obj,
        "CCNobj":CCNobj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)  

    return render(request,'BLOCK_DIVISION/newchecksheet1sec.html',context)

def newchecksheet1third(request):
    print("yes1")
    obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    obj11=list(block_division_crank_mst.objects.all().values().order_by('sno'))
    print('obj11',obj11)
    for i in obj11 :
        x=i['bdicc']
        X=x.split("BDICC")
        if(int(X[1])<200):
            print(X[1])
            CCNobj=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=i['bdicc'],TICK="cqam").values('CCN').distinct())
            #print("i=",i['bdicc'])
    print("ccn",CCNobj)
        # print("**",obj)
    context={
        "obj":obj,
        "CCNobj":CCNobj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)  

    return render(request,'BLOCK_DIVISION/newchecksheet1third.html',context)              


def fetchcrank1(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
        context={"obj":obj}
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)    

def fetchcrank1sec(request):
    if request.method=="GET" and request.is_ajax():
        CCN = request.GET.get('CCN')
        print("aagya",CCN)
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdidh =i['bdidh']
            print("bdidh",bdidh)
            bdidm =i['bdidm']
            bdids =i['bdids']
            print("bdids",bdids)
            bdicc =i['bdicc']
            obj1=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdidesc=bdids,CCN=CCN).values('RMK1','CHECK').order_by('bdipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

    
def fetchcrank1third(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        obj2=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.values('TICK').order_by('bdipctc'))[0]
        t=obj2['TICK']
        print("t",t)
        if t=='WS':
            for i in obj:
                sno =i['sno']
                bdidh =i['bdidh']
                print("bdidh",bdidh)
                bdidm =i['bdidm']
                bdids =i['bdids']
                print("bdids",bdids)
                bdicc =i['bdicc']
                obj1=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdidesc=bdids).values('RMK1','CHECK','TICK').order_by('bdipctc'))
                print("obj1",obj1)
                for j in obj1:
                    tick=j['TICK']
                    if tick=="WS":
                        RMK1 = j['RMK1']
                        CHECK = j['CHECK']
                if obj1==[]:
                    print("ififififiif-----------------------------------------")  
                    RMK1 = ''
                    CHECK = '' 
                temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
                sumlist.append(temp)      
            print("sumlist",sumlist)    
            context={'sumlist': sumlist}    
        else:
            flag=1
            return JsonResponse({"success":False}, status=400)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)           
           

def savecrank11(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlistRemark=[]
        final=[]
        
        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                vlist_remark.append(final)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)  
        counter=0  

        for i,j,k in zip(vlist_desc,vlist_check,vlist_remark):
            print(i,j,k)
            # if BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdidesc=i).exists():
            #      flag=1
            # else :
            obj1=list(block_division_crank_mst.objects.filter(bdids=i).values('bdicc').distinct())[0]
            bdicc=obj1['bdicc']
            print("***********************",bdicc)
            id = list(models.BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.values('bdipctc').order_by('-bdipctc'))
            if len(id):
                id=id[0]['bdipctc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
        obj123=list(models.BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.all().values())
        print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=bdicc,CCN=cc).update(TICK="WM")
            print("save",save)    
        return JsonResponse({'status': 200})  


def fetch123(request):
    if request.method=="GET" and request.is_ajax():
        
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        context={
            "obj":obj,
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)      

def forward2crank(request):
    #vashu
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }

    # obj11=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic='BTCT1').values('bdipc').order_by('sno'))[0]
    # bdipc=obj11['bdipc']
    return render(request,'BLOCK_DIVISION/forward2crank.html',context)  


def forward2cranksec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }
    return render(request,'BLOCK_DIVISION/forward2cranksec.html',context)     

def forwardws(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct",btct)
    obj=list(models.BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.all().values())
    print("obj1",obj)
    for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200})     

def forward1cranksec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }  
    return render(request,'BLOCK_DIVISION/forward1cranksec.html',context) 

def SAVECRANK1(request):
    if request.method == "GET" and request.is_ajax():
        CCN=request.GET.get('CCN')
        print("CCN",CCN)
        obj123=list(models.BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=bdicc,CCN=CCN).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200})                 

def EDITINSPCRANK1(request):
    if request.method == "GET" and request.is_ajax():
        print("idhrhiche")
        Remark=request.GET.get('remark')
      
        cc=request.GET.get('cc')
       
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(block_division_crank_mst.objects.filter(bdids=desc).values('bdicc').distinct())[0]
        bdicc=obj1['bdicc']
        print("bdicc",bdicc)
      
        if BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=bdicc).exists():
            sav = BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc=bdicc).update(RMK1=Remark,dateblock=date,CCN=cc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})

#new changes 16-12-2021 Prakhar negi

     

# def fetchlink(request):
#     print("ashcgayigscyiagiy")
#     obj=list(block_division_mst.objects.all().values().order_by('sno'))
#     print("obj",obj)
#     sumlist=[]
#     for i in obj:
#         sno=i['sno']
#         bdic=i['bdic']
#         bdid=i['bdid']
#         bdidg=i['bdidg']
#         TICK=i['TICK']
#         temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
#         sumlist.append(temp)
#     context={
#         "sumlist":sumlist,
#     }
#     return JsonResponse({'data':context},safe=False)

           



#till here***************************************vashu*********************************************
#dheeraj 7/feb/22
# 3Feb2022 added by Dheeraj bg6

def fetch_bg6(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
        context={"obj":obj}
        print(obj)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def savecrank1_bg6(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        c4=0
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlistRemark=[]
        final=[]
        sn=[]
        my=[]
        sno=[]

        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                vlist_remark.append(final)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)  
        count=counter
        print("count",count)
        counter=0  
        for l in vlist:
            if l=='' or counter==count-1:
                break
            if counter==c4:
                my=l.split('["')
                sn=my[1]
                sno.append(sn)
                print(my[1])
                c4=c4+3
            counter=counter+1 
            print("counter",counter)
            print("sno",sno)
        for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,sno):
            print(i,j,k)
            obj1=list(block_division_crank_mst.objects.filter(sno=l).values('bdicc').distinct())[0]
            bdicc=obj1['bdicc']
            id = list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.values('bdipctc').order_by('-bdipctc'))
            if len(id):
                id=id[0]['bdipctc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
        obj123=list(models.BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=cc).update(TICK="WM")
            print("save",save)    
        return JsonResponse({'status': 200})  



    
def checksheetfetch_bg6(request):
    
    if request.method == "GET" and request.is_ajax():
        obj=list(Block_Crank_Mst1.objects.all().values().order_by('sno'))
        sumlist=[]
        for i in obj:
            sno = i['sno']
            bdicc= i['bdicc']
            DOA= i['DOA']
            ROA= i['ROA']
            PAGENO= i['PAGENO']
            VERSIONNO= i['VERSIONNO']
            temp={'sno':sno,'bdicc':bdicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
            sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        
        return JsonResponse({'data':context},safe=False)
    
    return JsonResponse({"success":False}, status=400)  

def checksheet1_bg6(request):
    #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
    obj=list(block_division_crank_mst.objects.all().values())
    #ROA=obj['ROA']
    #print(ROA)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/CHECKSHEET1pdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['BLOCK_DIVISION_CRANK_INSPECTION_CODE']
            print("code",code)
            #empname=obj['empname']
    return render(request,'BLOCK_DIVISION/checksheet1_bg6.html',context)

def newchecksheet1_bg6(request):
    print("yes1")
    obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)
        
    return render(request,'BLOCK_DIVISION/newchecksheet1_bg6.html',context)


def fetchemp_bg6(request):
    
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    emp=empno
    print("emp",emp)
    context={
        "emp":emp,
    }
    
    return JsonResponse({'data':context},safe=False)


def forward1_bg6(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    
    return render(request,'BLOCK_DIVISION/forward1_bg6.html',context)  


def savecrank2_bg6(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlistRemark=[]
        final=[]
        
        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                vlist_remark.append(final)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)  
        counter=0  

        for i,j,k in zip(vlist_desc,vlist_check,vlist_remark):
            print(i,j,k)
            # if BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdidesc=i).exists():
            #      flag=1
            # else :
            obj1=list(block_division_crank_mst.objects.filter(bdids=i).values('bdicc').distinct())[0]
            bdicc=obj1['bdicc']
            print("***********************",bdicc)
            id = list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.values('bdipctc').order_by('-bdipctc'))
            if len(id):
                id=id[0]['bdipctc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
        return JsonResponse({'status': 200})
    


def forward2_bg6(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    return render(request,'BLOCK_DIVISION/forward2_bg6.html',context) 


def EDITINSPCRANK1_bg6(request):
    if request.method == "GET" and request.is_ajax():
        print("idhrhiche")
        Remark=request.GET.get('remark')
      
        cc=request.GET.get('cc')
       
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(block_division_crank_mst.objects.filter(bdids=desc).values('bdicc').distinct())[0]
        bdicc=obj1['bdicc']
        print("bdicc",bdicc)
      
        if BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc).exists():
            sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc).update(RMK1=Remark,dateblock=date,CCN=cc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})
    
def newchecksheet1sec_bg6(request):
    obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
    print("dehradoooon____________________________________________-")
    #print("object",obj)
    obj11=list(block_division_crank_mst.objects.all().values().order_by('sno'))
    print('obj11',obj11)
    CCNobj=[]
    for i in obj11 :
        x=i['bdicc']
        X=x.split("BDICC")
        if(int(X[1])>=600) and (int(X[1])<800):
            print(X[1])
            CCNobj=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=i['bdicc'],TICK="WM").values('CCN').distinct())
            print("i=",i['bdicc'])
            print("ccn**************************",CCNobj)
            #print("**",obj)
    context={
        "obj":obj,
        "CCNobj":CCNobj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)    
    return render(request,'BLOCK_DIVISION/newchecksheet1sec_bg6.html',context)




def fetchempsec_bg6(request):
    
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    
    return JsonResponse({'data':empno},safe=False)
 
def forwardws_bg6(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update (TICK="cqam")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200}) 

def fetchcrank1third_bg6(request):
    if request.method=="GET" and request.is_ajax():
        CCN = request.GET.get('CCN')
        print("aagya",CCN)
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdidh =i['bdidh']
            print("bdidh",bdidh)
            bdidm =i['bdidm']
            bdids =i['bdids']
            print("bdids",bdids)
            bdicc =i['bdicc']
            obj1=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdidesc=bdids,CCN=CCN).values('RMK1','CHECK').order_by('bdipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def savecrankthird_bg6(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlistRemark=[]
        final=[]
        
        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                vlist_remark.append(final)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)  
        counter=0  

        for i,j,k in zip(vlist_desc,vlist_check,vlist_remark):
            print(i,j,k)
            # if BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdidesc=i).exists():
            #      flag=1
            # else :
            obj1=list(block_division_crank_mst.objects.filter(bdids=i).values('bdicc').distinct())[0]
            bdicc=obj1['bdicc']
            print("***********************",bdicc)
            id = list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.values('bdipctc').order_by('-bdipctc'))
            if len(id):
                id=id[0]['bdipctc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
        return JsonResponse({'status': 200})
    
def EDITINSPCRANKthird_bg6(request):
    if request.method == "GET" and request.is_ajax():
        print("idhrhiche")
        Remark=request.GET.get('remark')
      
        cc=request.GET.get('cc')
       
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(block_division_crank_mst.objects.filter(bdids=desc).values('bdicc').distinct())[0]
        bdicc=obj1['bdicc']
        print("bdicc",bdicc)
      
        if BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc).exists():
            sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc).update(RMK1=Remark,dateblock=date,CCN=cc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})
    
# def newchecksheet1third_bg6(request):
#     print("yes1")
#     obj=list(block_division_crank_mst.objects.all().values().distinct().order_by('sno'))
#     print("object",obj)
#     obj11=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc='BDICC1').values('CCN'))[0]
#     CCN=obj11['CCN']
#     print("ccn",CCN)
#         # print("**",obj)
#     context={
#         "obj":obj,
#         "CCN":CCN
#     }
#     if request.method =="POST":
#         print("tool sin submit------------------------------------------------")
#         submitvalue = request.POST.get('submit')
#         print("***",submitvalue)
#         print("yesyes")  
#         if submitvalue =='submit':
#             print("aagya2")
#             #empname=obj['empname']    
#             Remark=request.POST.get('r1')
#             print("r1",Remark)  

#     return render(request,'BLOCK_DIVISION/newchecksheetthird.html',context)  

def newchecksheetthird_bg6(request):
    print("yes1")
    
    
    obj=block_division_crank_mst.objects.all().values().distinct()
    CCNobj=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.values('CCN').distinct())
    print("ccn",CCNobj)
        # print("**",obj)
    context={
        "obj":obj,
        "CCNobj":CCNobj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)    

    return render(request,'BLOCK_DIVISION/newchecksheetthird_bg6.html',context)

#Added by Dheeraj 4FEB2022
def forwardws_bg6(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update (TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200})  

def fetchcrank1sec_bg6(request):
    if request.method=="GET" and request.is_ajax():
        CCN = request.GET.get('CCN')
        print("aagya",CCN)
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdidh =i['bdidh']
            print("bdidh",bdidh)
            bdidm =i['bdidm']
            bdids =i['bdids']
            print("bdids",bdids)
            bdicc =i['bdicc']
            obj1=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=CCN).values('RMK1','CHECK').order_by('bdipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def SAVECRANK_crank_bg6sec(request):
    if request.method == "GET" and request.is_ajax():
        CCN=request.GET.get('CCN')
        print("CCN",CCN)
        obj123=list(models.BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=CCN).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200}) 

# def savecrank1sec_bg6(request):
#     if request.method == "GET" and request.is_ajax():
#         print("ahaan")
#         list1 = request.GET.get("newdata")
#         list2 = request.GET.get("newdata1")
#         cc=request.GET.get('cc')
#         date=request.GET.get('date')
#         print("cc",cc)
#         print("data",date)
#         print("newdata=",list1)
#         print(type(list1))
#         list4=list1.split('","')
#         print("list4",list4)
#         print(type(list4))
#         counter=0
#         x=0
#         c=1
#         c1=2
#         c2=3
#         c3=5
#         c4=0
#         vlist=[]
#         vlist_desc=[]
#         vlist_check=[]
#         vlist_remark=[]
#         vlistRemark=[]
#         final=[]
#         sn=[]
#         my=[]
#         sno=[]

#         for i in list4:
#             print("i=",i)
#             vlist.append(i)    
#             #value_list.append(list4[count])
#         print("v",vlist) 

#         for i in vlist:
#             print("i=",i)
#             if i=='':
#                 break
#             if counter==c:
#                vlist_desc.append(i)
#                c=c+3
#             counter=counter+1   
#         print("desc",vlist_desc)   
#         counter=0   

#         for j in vlist:
#             if j=='':
#                 break
#             if counter==c1:
#                 vlist_check.append(j)
#                 c1=c1+3
#             counter=counter+1
#         print("vlist_check",vlist_check)  
#         counter=0      

#         for k in vlist:
#             if k=='':
#                 break
#             if counter==c2:
#                 vlistRemark=k.split('"]')
#                 final=vlistRemark[0]
#                 vlist_remark.append(final)
#                 c2=c2+3
#             counter=counter+1
#         print("vlist_remark",vlist_remark)  
#         count=counter
#         print("count",count)
#         counter=0  
#         for l in vlist:
#             if l=='' or counter==count-1:
#                 break
#             if counter==c4:
#                 my=l.split('["')
#                 sn=my[1]
#                 sno.append(sn)
#                 print(my[1])
#                 c4=c4+3
#             counter=counter+1 
#             print("counter",counter)
#             print("sno",sno)
#         for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,sno):
#             print(i,j,k)
#             obj1=list(block_division_crank_mst.objects.filter(sno=l).values('bdicc').distinct())[0]
#             bdicc=obj1['bdicc']
#             id = list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.values('bdipctc').order_by('-bdipctc'))
#             if len(id):
#                 id=id[0]['bdipctc']+1
#             else:
#                 id=1
#             print("yes")
#             sav = BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
#         obj123=list(models.BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
#         #print("obj1",obj123)
#         for i in obj123:
#             bdicc = i['bdicc_id']
#             print("bdicc",bdicc)
#             save=BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=cc).update(TICK="WM")
#             print("save",save)    
#         return JsonResponse({'status': 200})  

def savecrank1sec_bg6(request):
    if request.method == "GET" and request.is_ajax():
        CCN=request.GET.get('CCN')
        print("CCN",CCN)
        obj123=list(models.BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=CCN).update(TICK="WM")
            print("save",save)
        return JsonResponse({'status': 200})  
 
 

def fetchcrank1third_bg6(request):
    if request.method=="GET" and request.is_ajax():
        CCN = request.GET.get('CCN')
        print("aagya",CCN)
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdidh =i['bdidh']
            print("bdidh",bdidh)
            bdidm =i['bdidm']
            bdids =i['bdids']
            print("bdids",bdids)
            bdicc =i['bdicc']
            obj1=list(BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=CCN).values('RMK1','CHECK').order_by('bdipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def savecrank1third_bg6(request):
    if request.method == "GET" and request.is_ajax():
        CCN=request.GET.get('CCN')
        print("CCN",CCN)
        obj123=list(models.BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_BG6_TRX1.objects.filter(bdicc=bdicc,CCN=CCN).update(TICK="WM")
            print("save",save)
        return JsonResponse({'status': 200})
#till here

#block crank 16 ************************PRAKHAR NEGI*****************************************31-12-2021
def fetchemp_crank16(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(role='WM/Inspection-1').values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    emp=empno
    print("emp",emp)
    context={
        "emp":emp,
    }
    return JsonResponse({'data':context},safe=False) 


def checksheet1_crank16(request):
    #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
    obj=list(Block_CRANK_Cylinder_16_Mst.objects.all().values())
    #ROA=obj['ROA']
    #print(ROA)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('BLOCK_DIVISION/CHECKSHEET1pdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['BLOCK_DIVISION_CRANK_INSPECTION_CODE']
            print("code",code)
            #empname=obj['empname']
    return render(request,'BLOCK_DIVISION/checksheet1_crank16.html',context)

def newchecksheet1_crank16(request):
    print("yes1")
    obj=list(block_division_crank16_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)
        
    return render(request,'BLOCK_DIVISION/newchecksheet1_crank16.html',context)

def SAVECRANK1_crank16sec(request):
    if request.method == "GET" and request.is_ajax():
        CCN=request.GET.get('CCN')
        print("CCN",CCN)
        obj123=list(models.BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.filter(bdicc=bdicc,CCN=CCN).update(TICK="cqam")
            print("save",save)
        return JsonResponse({'status': 200})    

def newchecksheet1sec_crank16(request):
    print("yes1")
    obj=list(block_division_crank16_mst.objects.all().values().distinct())
    print("object",obj)
    obj1=block_division_crank_mst.objects.all().values().distinct()
    CCNobj=list(BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.values('CCN').distinct())
    print("ccn",CCNobj)
        # print("**",obj)
    context={
        "obj":obj,
        "CCNobj":CCNobj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)  

    return render(request,'BLOCK_DIVISION/newchecksheet1sec_crank16.html',context)

def forwardwscrank16(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct",btct)
    obj=list(models.BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.all().values())
    print("obj1",obj)
    for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200})      

def forwardcqamcrank16(request):
    #vashuu
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct",btct)
        #obj11=list(BLOCK_DIV_INSP_PARA_CRANK_TRX.objects.filter(bdicc='BDICC1').values('CCN'))[0]
        print("its here")
        bdicc=list(block_division_crank_mst.objects.filter(bdic=btct).values('bdicc'))
        obj=list(models.BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.all().values())
        print("obj1",obj)
        obj1=list(block_division_mst.objects.all().values().order_by('sno'))
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="cqam")  
        return JsonResponse({'status': 200})     

def fetchcrank1_crank16(request):#vashuvashu
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_crank16_mst.objects.all().values().distinct().order_by('sno'))
        context={"obj":obj}
        print(obj)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  

def savecrank1_crank16(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan_________________________________________________________________________")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        c4=0
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlistRemark=[]
        final=[]
        sn=[]
        my=[]
        sno=[]

        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                vlist_remark.append(final)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)  
        count=counter
        print("count",count)
        counter=0  
        for l in vlist:
            if l=='' or counter==count-1:
                break
            if counter==c4:
                my=l.split('["')
                sn=my[1]
                sno.append(sn)
                print(my[1])
                c4=c4+3
            counter=counter+1 
            print("counter",counter)
        print("sno",sno)  
        for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,sno):
            print(i,j,k)
            obj1=list(block_division_crank_mst.objects.filter(sno=l).values('bdicc').distinct())[0]
            bdicc=obj1['bdicc']
            id = list(BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.values('bdipctc').order_by('-bdipctc'))
            if len(id):
                id=id[0]['bdipctc']+1
            else:
                id=1
            print("yes")
            sav = BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.create(bdipctc=id,CHECK=j,RMK1=k,dateblock=date,CCN=cc,bdidesc=i,bdicc_id=bdicc)  
        obj123=list(models.BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.all().values())
        #print("obj1",obj123)
        for i in obj123:
            bdicc = i['bdicc_id']
            print("bdicc",bdicc)
            save=BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.filter(bdicc=bdicc,CCN=cc).update(TICK="WM")
            print("save",save)    
        return JsonResponse({'status': 200})

def fetch123_crank16(request):
    if request.method=="GET" and request.is_ajax():
        
        obj=list(block_division_crank16_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        context={
            "obj":obj,
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400) 

def forward2_crank16(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    return render(request,'BLOCK_DIVISION/forward2_crank16.html',context)  

def forward2_crank16sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    return render(request,'BLOCK_DIVISION/forward2_crank16sec.html',context) 


def fetchcrank1sec_crank16(request):
    if request.method=="GET" and request.is_ajax():
        CCN = request.GET.get('CCN')
        print("aagya",CCN)
        obj=list(block_division_crank_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            print("a",sno)
            bdidh =i['bdidh']
            print("bdidh",bdidh)
            bdidm =i['bdidm']
            bdids =i['bdids']
            print("bdids",bdids)
            bdicc =i['bdicc']
            obj1=list(BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.filter(bdicc=bdicc,CCN=CCN).values('RMK1','CHECK').order_by('bdipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                print("RMK*****************************************8",RMK1)
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = '' 
            temp={'sno':sno,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids,'bdicc':bdicc,'RMK1':RMK1,'CHECK':CHECK}   
            sumlist.append(temp)          
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def forwardws_crank16(request):
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(engine_division_trx.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200}) 

def EDITINSPCRANK1_crank16(request):
    if request.method == "GET" and request.is_ajax():
        print("idhrhiche")
        Remark=request.GET.get('remark')
      
        cc=request.GET.get('cc')
       
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(block_division_crank_mst.objects.filter(bdids=desc).values('bdicc').distinct())[0]
        bdicc=obj1['bdicc']
        print("bdicc",bdicc)
      
        if BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.filter(bdicc=bdicc).exists():
            sav = BLOCK_DIV_INSP_PARA_CRANK16_TRX.objects.filter(bdicc=bdicc).update(RMK1=Remark,dateblock=date,CCN=cc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})


def forward2_crank16sec(request):
    obj=list(empmast.objects.filter(role='Dy.CQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    return render(request,'BLOCK_DIVISION/forward2_crank16sec.html',context)         



#***********************************update_para_mst_crank1************************

def update_para_mst_crank1(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        #print("***",RH)
        bdipc=request.GET.get('bdicc')
        print(bdicc)
        #print("***",LH)
        DOA=request.GET.get('DOA')
        print(DOA)
        #print("***",Remark)
        ROA=request.GET.get('ROA')
        print(ROA)
        PAGENO=request.GET.get('PAGENO')
        print(PAGENO)
        VERSIONNO=request.GET.get('VERSIONNO')
        print(VERSIONNO)
        sav = Block_Crank_Mst1.objects.filter(sno=sno).update(bdicc=bdicc,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO)

        return JsonResponse({'status': 200})  



def delete_para_mst_crank1(request):
    if request.method == "GET" and request.is_ajax():
        bdicc=request.GET.get('bdicc')  
        sav = Block_Crank_Mst1.objects.get(bdicc=bdicc)
        sav.delete()
        return JsonResponse({'status': 200})    


def fetch_para_mst_crank1(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=Block_Crank_Mst1.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdicc=i['bdicc']
            DOA=i['DOA']
            ROA=i['ROA']
            PAGENO=i['PAGENO']
            VERSIONNO=i['VERSIONNO']
            temp={'sno':sno,'bdicc':bdicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)     


def block_division_para_mst_crank1(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue) 
        if  submitvalue=='submit':   
            print("yessssss")           
            bdicc=request.POST.get('bdicc')
            print(bdicc)
            DOA=request.POST.get('DOA')  
            ROA=request.POST.get('ROA')
            PAGENO=request.POST.get('PAGENO')
            VERSIONNO=request.POST.get('VERSIONNO')
            print("yeesss")
            print(VERSIONNO)
            id = list(Block_Crank_Mst1.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = Block_Crank_Mst1(bdicc=bdicc,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO,sno=id)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_crank_mst.html")     

def update_para_mst_crank(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        #print("***",RH)
        bdipc=request.GET.get('bdicc')
        print(bdicc)
        #print("***",LH)
        bdic=request.GET.get('bdidh')
        print(bdidh)
        #print("***",Remark)
        bdid=request.GET.get('bdidm')
        print(bdidm)
        bdipt=request.GET.get('bdids')
        print(bdids)
        #print("*",boggy)
        #print("***************id")   
        sav = block_division_crank_mst.objects.filter(sno=sno).update(bdicc=bdicc,bdidh=bdidh,bdidm=bdidm,bdids=bdids)

        return JsonResponse({'status': 200})    

def delete_para_mst_crank(request):
    if request.method == "GET" and request.is_ajax():
        bdicc=request.GET.get('bdicc')  
        sav = block_division_crank_mst.objects.get(bdicc=bdcic)
        sav.delete()
        return JsonResponse({'status': 200})  

def fetch_para_mst_crank(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=block_division_crank_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdicc=i['bdicc']
            bdidh=i['bdidh']
            bdidm=i['bdidm']
            bdids=i['bdids']
            temp={'sno':sno,'bdicc':bdicc,'bdidh':bdidh,'bdidm':bdidm,'bdids':bdids}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)     


def block_division_para_mst_crank(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue) 
        if  submitvalue=='submit':   
            print("yessssss")           
            bdicc=request.POST.get('bdicc')
            print(bdicc)
            bdidh=request.POST.get('bdidh')  
            bdidm=request.POST.get('bdidm')
            bdids=request.POST.get('bdids')
            print("yeesss")
            print(bdids)
            id = list(block_division_crank_mst.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = block_division_crank_mst(bdicc=bdicc,bdidh=bdidh,bdidm=bdidm,bdids=bdids,sno=id)
            sav.save()
    return render(request,"BLOCK_DIVISION/block_crank_division_mst.html")


# engine 14.03.22

#engine GE150D1350
def Engine_Checksheet_GE150D1350(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context) 
               return HttpResponse(pdf,content_type='application/pdf')  
           
       return render(request,'Engine_Division/Engine_Checksheet_GE150D1350.html',context)


def fetch_engine_checksheet_GE150D1350(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def save_engine_newcheksheet_GE150D1350(request):
       if request.method == "GET" and request.is_ajax():
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc1=request.GET.get('cc1')
           cc2=request.GET.get('cc2')
           cc3=request.GET.get('cc3')
           cc4=request.GET.get('cc4')
           date=request.GET.get('date')

           date1=request.GET.get('date1')
           print("cc1",cc1)
           print("cc2",cc2)
         
           print("newdata=",list1)
           print(type(list1))
           list4=list1.split('","')
           print("list4",list4)
           print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               print("i=",i)
               vlist.append(i)    
               #value_list.append(list4[count])
           print("v",vlist) 
   
           for i in vlist:
               print("i=",i)
               if i=='':
                   break
               if counter==c:
                  vlist_desc.append(i)
                  c=c+3
               counter=counter+1   
           print("desc",vlist_desc)   
           counter=0   
   
           for j in vlist:
               if j=='':
                   break
               if counter==c1:
                   vlist_check.append(j)
                   c1=c1+3
               counter=counter+1
           print("vlist_check",vlist_check)  
           counter=0      
   
           for k in vlist:
               if k=='':
                   break
               if counter==c2:
                   vlistRemark=k.split('"]')
                   final=vlistRemark[0]
                   vlist_remark.append(final)
                   c2=c2+3
               counter=counter+1
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_GE150D1350_trx.objects.values('edipctc').order_by('-edipctc'))
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               sav = engine_division_GE150D1350_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,DateCompleted=date1,ODN=cc1,BTN=cc2,TYPE=cc3,EGN=cc4,edidesc=i,edicc_id=ediccc)  
           return JsonResponse({'status': 200})

def Engine_Newchecksheet_GE150D1350(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_GE150D1350.html',context)

def forward_engine_GE150D1350(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}   
        sumlist.append(temp)    
    print("sumlist",sumlist)    

    context={
        "sumlist":sumlist,
      
    }
    return render(request,'Engine_Division/forward_engine_GE150D1350.html',context) 
        

def fetchemp_engine_GE150D1350(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)


def forwardws_engine_GE150D1350(request):  
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(engine_division_GE150D1350_trx.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200})  

def fetchlink_engine_schedule_GE150D1350(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)




def fetchblock_engine_schedule_GE150D1350(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_GE150D1350_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2) 
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}   
            sumlist.append(temp) 
            print("sumlist",sumlist)             
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)   


# def Schedule_forward_engine_GE150D1350(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_GE150D1350.html') 

def fetch_enginesec_GE150D1350(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_GE150D1350_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 TYPE = j['TYPE']
                 EGN = j['EGN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = '' 
                ODN = ''
                BTN = '' 
                TYPE = ''
                EGN = '' 
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ODN':ODN,'BTN':BTN,'TYPE':TYPE,'EGN':EGN}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400) 


def save_enginesec_GE150D1350(request):
       if request.method == "GET" and request.is_ajax():
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc1=request.GET.get('cc1')
           cc2=request.GET.get('cc2')
           cc3=request.GET.get('cc3')
           cc4=request.GET.get('cc4')

           date=request.GET.get('date')
           date1=request.GET.get('date1')

           print("cc1",cc1)
           print("data",date)
           print("newdata=",list1)
           print(type(list1))
           list4=list1.split('","')
           print("list4",list4)
           print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               print("i=",i)
               vlist.append(i)    
           print("v",vlist) 
   
           for i in vlist:
               print("i=",i)
               if i=='':
                   break
               if counter==c:
                  vlist_desc.append(i)
                  c=c+3
               counter=counter+1   
           print("desc",vlist_desc)   
           counter=0   
   
           for j in vlist:
               if j=='':
                   break
               if counter==c1:
                   vlist_check.append(j)
                   c1=c1+3
               counter=counter+1
           print("vlist_check",vlist_check)  
           counter=0      
   
           for k in vlist:
               if k=='':
                   break
               if counter==c2:
                   vlistRemark=k.split('"]')
                   final=vlistRemark[0]
                   vlist_remark.append(final)
                   c2=c2+3
               counter=counter+1
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id1 = list(engine_division_GE150D1350_trx.objects.values('edipctc').order_by('-edipctc'))
               if len(id1):
                   id1=id1[0]['edipctc']+1
                   print("yes", id1)
               else:
                   id1=1
               print("yes")
               sav = engine_division_GE150D1350_trx.objects.create(edipctc=id1,CHECK=j,RMK=k,DateStarted=date,DateCompleted=date1,ODN=cc1,BTN=cc2,TYPE=cc3,EGN=cc4,edidesc=i,edicc_id=ediccc)  
           return JsonResponse({'status': 200})


def Engine_Newchecksheetsec_GE150D1350(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       obj11=list(engine_division_GE150D1350_trx.objects.filter(edicc='EDICC1').values('ODN','BTN','TYPE','EGN'))[0]
       ODN=obj11['ODN']
       BTN=obj11['BTN']
       TYPE=obj11['TYPE']
       EGN=obj11['EGN']

       print("odn",ODN)
           # print("**",obj)
       context={
           "obj":obj,
           "ODN":ODN,
           "BTN":BTN,
           "TYPE":TYPE,
           "EGN":EGN
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")  
           if submitvalue =='submit':
               print("aagya2")
               #empname=obj['empname']    
               Remark=request.POST.get('r1')
               print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_GE150D1350.html',context)



def Engine_forwardssec_GE150D1350(request):  
       if request.method == "GET" and request.is_ajax():
           btct=request.GET.get("btct")
           print("btct******************************************8",btct)
           obj=list(engine_division_GE150D1350_trx.objects.all().values())
           print("obj1",obj)
           for j in obj:
               sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="CQAM")  
               return JsonResponse({'status': 200})     
       return JsonResponse({'status': 200}) 


def forward_enginesec_GE150D1350(request):
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))[0]
       empname=obj['empname']
       empno=obj['empno']
       print("empname=",empname)
       print("empno=",empno)
       print("obj",obj)
       context={
           "obj":obj,
           "empname":empname,
           "empno":empno,
       }
       return render(request,'Engine_Division/forward_enginesec_GE150D1350.html',context)  


def fetchlink_engine_schedule_sec_GE150D1350(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)




def fetchblock_engine_schedule_sec_GE150D1350(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_GE150D1350_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2) 
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}   
            sumlist.append(temp) 
            print("sumlist",sumlist)             
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)   


# def Schedule_forward_engine_sec_GE150D1350(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_sec_GE150D1350.html') 


def fetch_enginethird_GE150D1350(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_GE150D1350_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 TYPE = j['TYPE']
                 EGN = j['EGN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = '' 
                ODN = ''
                BTN = '' 
                TYPE = ''
                EGN = '' 
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ODN':ODN,'BTN':BTN,'TYPE':TYPE,'EGN':EGN}   
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def save_enginethird_GE150D1350(request):
       if request.method == "GET" and request.is_ajax():
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc1=request.GET.get('cc1')
           cc2=request.GET.get('cc2')
           cc3=request.GET.get('cc3')
           cc4=request.GET.get('cc4')

           date=request.GET.get('date')
           date1=request.GET.get('date1')
           print("cc1",cc1)
           print("data",date)
           print("newdata=",list1)
           print(type(list1))
           list4=list1.split('","')
           print("list4",list4)
           print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               print("i=",i)
               vlist.append(i)    
               #value_list.append(list4[count])
           print("v",vlist) 
   
           for i in vlist:
               print("i=",i)
               if i=='':
                   break
               if counter==c:
                  vlist_desc.append(i)
                  c=c+3
               counter=counter+1   
           print("desc",vlist_desc)   
           counter=0   
   
           for j in vlist:
               if j=='':
                   break
               if counter==c1:
                   vlist_check.append(j)
                   c1=c1+3
               counter=counter+1
           print("vlist_check",vlist_check)  
           counter=0      
   
           for k in vlist:
               if k=='':
                   break
               if counter==c2:
                   vlistRemark=k.split('"]')
                   final=vlistRemark[0]
                   vlist_remark.append(final)
                   c2=c2+3
               counter=counter+1
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id2 = list(engine_division_GE150D1350_trx.objects.values('edipctc').order_by('-edipctc'))
               if len(id2):
                   id2=id2[0]['edipctc']+1
               else:
                   id2=1
               print("yes",id2)
               sav = engine_division_GE150D1350_trx.objects.create(edipctc=id2,CHECK=j,RMK=k,DateStarted=date,DateCompleted=date1,ODN=cc1,BTN=cc2,TYPE=cc3,EGN=cc4,edidesc=i,edicc_id=ediccc)  
           return JsonResponse({'status': 200})


def Engine_Newchecksheetthird_GE150D1350( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       obj111=list(engine_division_GE150D1350_trx.objects.filter(edicc='EDICC1').values('ODN','BTN','TYPE','EGN'))[0]
       ODN=obj111['ODN']
       BTN=obj111['BTN']
       TYPE=obj111['TYPE']
       EGN=obj111['EGN']      
       
           # print("**",obj)
       context={
           "obj":obj,
           "ODN":ODN,
           "BTN":BTN,
           "TYPE":TYPE,
           "EGN":EGN
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")  
           if submitvalue =='submit':
               print("aagya2")
               #empname=obj['empname']    
               Remark=request.POST.get('r1')
               print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_GE150D1350.html',context) 


def fetch_engine_newchecksheet_GE150D1350(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           context={"obj":obj}
           print(obj)
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400) 

def fetchemp_enginesec_GE150D1350(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


 

# HHPE150

def Engine_Checksheet_HHPE150(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
           
       return render(request,'Engine_Division/Engine_Checksheet_HHPE150.html',context)



def fetch_engine_checksheet_HHPE150(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)





def Engine_Newchecksheet_HHPE150(request):
    return render(request,'Engine_Division/Engine_Newchecksheet_HHPE150.html')


def save_engine_HHPE150(request):
     
    if request.method == 'POST' or request.is_ajax():
        sno = request.POST.get('sno')
        dat =  request.POST.get('dat')
        Engasm = request.POST.get('Engasm')
        odrno = request.POST.get('odrno')
        bno = request.POST.get('bno')
        rmk0 = request.POST.get('rmk0')
        rmk1 = request.POST.get('rmk1')
        rmk2 = request.POST.get('rmk2')
        rmk3 = request.POST.get('rmk3')
        rmk4 = request.POST.get('rmk4')
        rmk5 = request.POST.get('rmk5')
        rmk6 = request.POST.get('rmk6')
        rmk7 = request.POST.get('rmk7')
        remark = rmk0+', '+rmk1+', '+rmk2+', '+rmk3+', '+rmk4+', '+rmk5+', '+rmk6+', '+rmk7
       
        # remarkss=''
        # for i in range(0, 8):
           
        #     part = request.POST.get('rmk'+ str(i))
        #     remarkss += part+'@ '
        # print(remarkss)

       
        models.engine_divison_trx_HHPE150_certi.objects.create(sno=sno,date=dat,odrno=odrno,bno=bno,asmn=Engasm,rmk=remark)
       
       
    return JsonResponse({'saved':'save'}, safe=False)



# G4E150
def Engine_Checksheet_G4E150(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #        code=obj['Engine_Division_Inspection_code']
        #        print("code",code)
        #        #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_G4E150.html',context)




def fetch_engine_checksheet_G4E150(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheet_G4E150(request):
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E150.html')


def save_engine_newcheksheet_G4E150(request):
     
    if request.method == 'POST' or request.is_ajax():
        sno = request.POST.get('sno')
        dat =  request.POST.get('dat')
        Engasm = request.POST.get('Engasm')
        odrno = request.POST.get('odrno')
        bno = request.POST.get('bno')
        rmk0 = request.POST.get('rmk0')
        rmk1 = request.POST.get('rmk1')
        rmk2 = request.POST.get('rmk2')
        rmk3 = request.POST.get('rmk3')
        rmk4 = request.POST.get('rmk4')
        rmk5 = request.POST.get('rmk5')
        rmk6 = request.POST.get('rmk6')
        rmk7 = request.POST.get('rmk7')
        remark = rmk0+', '+rmk1+', '+rmk2+', '+rmk3+', '+rmk4+', '+rmk5+', '+rmk6+', '+rmk7
       
        # remarkss=''
        # for i in range(0, 8):
           
        #     part = request.POST.get('rmk'+ str(i))
        #     remarkss += part+'@ '
        # print(remarkss)

       
        models.engine_divison_trx_G4E150.objects.create(sno=sno,date=dat,odrno=odrno,bno=bno,asmn=Engasm,rmk=remark)
       
       
    return JsonResponse({'saved':'save'}, safe=False)

 


# G4E146

def Engine_Checksheet_G4E146(request):
     #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
     obj=list(Engine_mst.objects.all().values())[0]
     ROA=obj['ROA']
     print(ROA)
     context={
         "obj":obj,
     }
     if request.method =="POST":
         print("tool sin submit------------------------------------------------")
         submitvalue = request.POST.get('submit')
         print("***",submitvalue)
         print("yesyes")      
         if submitvalue=='PDF':  
             pdf = render_to_pdf('Engine_Division/Engine_Checksheet_G4E146.html',context)
             return HttpResponse(pdf,content_type='application/pdf')  
         if submitvalue =='submit':
             code=obj['Engine_Division_Inspection_code']
             print("code",code)
             #empname=obj['empname']
     return render(request,'Engine_Division/Engine_Checksheet_G4E146.html',context)
 
 
 
def fetch_engine_checksheet_G4E146(request):
   if request.method == "GET" and request.is_ajax():
         obj=list(Engine_mst.objects.all().values().order_by('sno'))
         print("objhere",obj)
         sumlist=[]
         for i in obj:
                 sno = i['sno']
                 edicc= i['edicc']
                 DOA= i['DOA']
                 ROA= i['ROA']
                 PAGENO= i['PAGENO']
                 VERSIONNO= i['VERSIONNO']
                 temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                 sumlist.append(temp)
         context={
             "sumlist":sumlist,
         }
         print("yesyesyeys")
         print("obj",obj)
         print("sumlist",sumlist)
         return JsonResponse({'data':context},safe=False)
         return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetthird_G4E146( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E146_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
           # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_G4E146.html',context)
 
 
 
def fetch_enginethird_G4E146(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E146_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
 
def forward_enginesec_G4E146(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_G4E146.html',context)
 
 
                                                                         
 
def forwardws_enginesec_G4E146(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_G4E146",status="Pending",user_emp=cqam_empno,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
       
       
       
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def Engine_forwardssec_G4E146(request):  
       if request.method == "GET" and request.is_ajax():
           btct=request.GET.get("btct")
           print("btct******************************************8",btct)
           obj=list(engine_division_G4E146_trx.objects.all().values())
           print("obj1",obj)
           for j in obj:
               sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="CQAM")  
               return JsonResponse({'status': 200})    
       return JsonResponse({'status': 200})
 
 
 
def fetchemp_enginesec_G4E146(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetch_enginesec_G4E146(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E146_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_G4E146(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E146_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_G4E146.html',context)
 
 
 
def fetchlink_engine_schedule_sec_G4E146(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetchblock_engine_schedule_sec_G4E146(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
 
 
 
# def Schedule_forward_engine_sec_G4E146(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_sec_G4E146.html')
 
 
 
 
def fetchlink_engine_schedule_G4E146(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
 
 
 
def fetchblock_engine_schedule_G4E146(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
# import matplotlib
# matplotlib.use('Agg')
# import matplotlib.pyplot as plt
# import matplotlib.dates as mdates
# import io, base64
# from django.db.models.functions import TruncDay
# from matplotlib.ticker import LinearLocator
 
 
# def Schedule_forward_engine_G4E146(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_G4E146.html')
 
def forward_engine_G4E146(request):
    obj=list(empmast.objects.filter(role='AQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_G4E146.html',context)
 
 
def forwardws_engine_G4E146(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_G4E146",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_G4E146(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetch_engine_newchecksheet_G4E146(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
@csrf_exempt
def save_engine_newcheksheet_G4E146(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_G4E146_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E146_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E146_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E146_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def save_rej_engine_newcheksheet_G4E146(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_G4E146_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E146_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E146_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E146_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def Engine_Newchecksheet_G4E146(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E146.html',context)
 
def fetch_engine_newchecksheet_rej_G4E146(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_G4E146_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_G4E146_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
           print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
           saved_data_wm=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E146_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetfourth_G4E146(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_G4E146.html')



def Engine_Checksheet_HHPE14152(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context) 
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #        code=obj['Engine_Division_Inspection_code']
        #        print("code",code)
        #        #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_HHPE14152.html',context)

def fetch_engine_checksheet_HHPE14152(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

#ENGINE E145C3300

def save_rej_engine_newcheksheet_E145C3300(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E145C3300_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145C3300_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145C3300_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E145C3300(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E145C3300(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E145C3300.html')
 
 
 
 
 
 
def Engine_Checksheet_E145C3300(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       
       return render(request,'Engine_Division/Engine_Checksheet_E145C3300.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E145C3300(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E145C3300(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145C3300_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E145C3300(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E145C3300_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E145C3300_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145C3300_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145C3300_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E145C3300(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E145C3300(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E145C3300.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E145C3300(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E145C3300",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E145C3300(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E145C3300.html',context)
 
 
def forwardws_engine_E145C3300(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E145C3300",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E145C3300(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E145C3300(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E145C3300.html',context)




def forward_enginesec_E145C3300(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E145C3300.html',context)
 
 
 
def fetchemp_enginesec_E145C3300(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E145C3300(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E145C3300.html',context)

#ENGINE 145D1000

def save_rej_engine_newcheksheet_E145D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E145D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E145D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E145D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E145D1000.html')
 
 
 
 
 
 
def Engine_Checksheet_E145D1000(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E145D1000.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E145D1000(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E145D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E145D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E145D1000_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E145D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E145D1000(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E145D1000(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E145D1000.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E145D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E145D1000",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E145D1000(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E145D1000.html',context)
 
 
def forwardws_engine_E145D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E145D1000",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E145D1000(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E145D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E145D1000.html',context)




def forward_enginesec_E145D1000(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E145D1000.html',context)
 
 
 
def fetchemp_enginesec_E145D1000(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E145D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E145D1000.html',context)
 
#ENGINE 150C3100

def save_rej_engine_newcheksheet_E150C3100(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E150C3100_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150C3100_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150C3100_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E150C3100(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E150C3100(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E150C3100.html')
 
 
 
 
 
 
def Engine_Checksheet_E150C3100(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E150C3100.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E150C3100(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E150C3100(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150C3100_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E150C3100(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E150C3100_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E150C3100_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150C3100_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150C3100_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E150C3100(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E150C3100(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E150C3100.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E150C3100(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E150C3100",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E150C3100(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E150C3100.html',context)
 
 
def forwardws_engine_E150C3100(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E150C3100",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E150C3100(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E150C3100(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E150C3100.html',context)




def forward_enginesec_E150C3100(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E150C3100.html',context)
 
 
 
def fetchemp_enginesec_E150C3100(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E150C3100(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E150C3100.html',context)

#ENGINE 150D1000

def save_rej_engine_newcheksheet_E150D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E150D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E150D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E150D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E150D1000.html')
 
 
 
 
 
 
def Engine_Checksheet_E150D1000(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E150D1000.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E150D1000(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E150D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E150D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E150D1000_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E150D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E150D1000(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E150D1000(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E150D1000.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E150D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E150D1000",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E150D1000(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E150D1000.html',context)
 
 
def forwardws_engine_E150D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E150D1000",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E150D1000(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E150D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E150D1000.html',context)




def forward_enginesec_E150D1000(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E150D1000.html',context)
 
 
 
def fetchemp_enginesec_E150D1000(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E150D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E150D1000.html',context)



#ENGINE 135D


def save_rej_engine_newcheksheet_E135D(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E135D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E135D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E135D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E135D.html')
 
 
 
 
 
 
def Engine_Checksheet_E135D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E135D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E135D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E135D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E135D(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E135D_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E135D_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135D_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E135D(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E135D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E135D.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E135D(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E135D",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E135D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E135D.html',context)
 
 
def forwardws_engine_E135D(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E135D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E135D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 

def fetch_enginesec_E135D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E135D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E135D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E135D.html',context)




def forward_enginesec_E135D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E135D.html',context)
 
 
 
def fetchemp_enginesec_E135D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E135D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E135D.html',context)
 

 
 


def fetch_enginethird_E135D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E135D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)



#ENGINE E135D1000

def fetchemp_enginesec_E135D1000(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 

def save_rej_engine_newcheksheet_E135D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E135D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E135D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E135D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E135D1000.html')
 
 
 
 
 
 
def Engine_Checksheet_E135D1000(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E135D1000.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E135D1000(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E135D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E135D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E135D1000_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E135D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135D1000_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E135D1000(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E135D1000(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E135D1000.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E135D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E135D1000",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E135D1000(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E135D1000.html',context)
 
 
def forwardws_engine_E135D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E135D1000",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E135D1000(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E135D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E135D1000.html',context)




def forward_enginesec_E135D1000(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E135D1000.html',context)

def Engine_Newchecksheetthird_E135D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E135D1000.html',context)

# ENGINE E150B

def save_rej_engine_newcheksheet_E150B(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E150B_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150B_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150B_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E150B(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E150B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E150B.html')
 
 
 
 
 
 
def Engine_Checksheet_E150B(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E150B.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E150B(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E150B(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E150B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E150B(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E150B_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E150B_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E150B_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E150B_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E150B(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E150B(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E150B.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E150B(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E150B",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E150B(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E150B.html',context)
 
 
def forwardws_engine_E150B(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E150B",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E150B(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E150B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E150B.html',context)




def forward_enginesec_E150B(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E150B.html',context)
 
 
 
def fetchemp_enginesec_E150B(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E150B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E150B.html',context)
 


#ENGINE E145B

def save_rej_engine_newcheksheet_E145B(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E145B_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145B_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145B_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E145B(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E145B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E145B.html')
 
 
 
 
 
 
def Engine_Checksheet_E145B(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E145B.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E145B(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E145B(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E145B_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def save_engine_newcheksheet_E145B(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E145B_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E145B_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E145B_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E145B_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E145B(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E145B(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E145B.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E145B(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E145B",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E145B(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E145B.html',context)
 
 
def forwardws_engine_E145B(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E145B",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E145B(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 



def Engine_Newchecksheetsec_E145B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E145B.html',context)




def forward_enginesec_E145B(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E145B.html',context)
 
 
 
def fetchemp_enginesec_E145B(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E145B(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E145B.html',context)
 

 
 


 
 
 

 






#ENGINE HHPE14151

 
def Engine_Newchecksheetthird_HHPE14151( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14151_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
           # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_HHPE14151.html',context)
 
 
 
def fetch_enginethird_HHPE14151(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_HHPE14151_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
 
def forward_enginesec_HHPE14151(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_HHPE14151.html',context)
 
 
                                                                         
 
def forwardws_enginesec_HHPE14151(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_HHPE14151",status="Pending",user_emp=cqam_empno,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
       
       
       
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def Engine_forwardssec_HHPE14151(request):  
       if request.method == "GET" and request.is_ajax():
           btct=request.GET.get("btct")
           print("btct******************************************8",btct)
           obj=list(engine_division_HHPE14151_trx.objects.all().values())
           print("obj1",obj)
           for j in obj:
               sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="CQAM")  
               return JsonResponse({'status': 200})    
       return JsonResponse({'status': 200})
 
 
 
def fetchemp_enginesec_HHPE14151(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetch_enginesec_HHPE14151(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_HHPE14151_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_HHPE14151(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14151_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_HHPE14151.html',context)
 
 
 
def fetchlink_engine_schedule_sec_HHPE14151(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetchblock_engine_schedule_sec_HHPE14151(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
 
 
 
# def Schedule_forward_engine_sec_HHPE14151(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_sec_HHPE14151.html')
 
 
 
 
def fetchlink_engine_schedule_HHPE14151(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
 
 
 
def fetchblock_engine_schedule_HHPE14151(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
# import matplotlib
# matplotlib.use('Agg')
# import matplotlib.pyplot as plt
# import matplotlib.dates as mdates
# import io, base64
# from django.db.models.functions import TruncDay
# from matplotlib.ticker import LinearLocator
 
 
def forward_engine_HHPE14151(request):
    obj=list(empmast.objects.filter(role='AQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_HHPE14151.html',context)
 
 
def forwardws_engine_HHPE14151(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_HHPE14151",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_HHPE14151(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetch_engine_newchecksheet_HHPE14151(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
@csrf_exempt
def save_engine_newcheksheet_HHPE14151(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_HHPE14151_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_HHPE14151_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).exists():
                   engine_division_HHPE14151_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_HHPE14151_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def save_rej_engine_newcheksheet_HHPE14151(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14151_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_HHPE14151_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   engine_division_HHPE14151_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_HHPE14151_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def Engine_Newchecksheet_HHPE14151(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_HHPE14151.html',context)
 
def fetch_engine_newchecksheet_rej_HHPE14151(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14151_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_HHPE14151_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
           print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
           saved_data_wm=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_HHPE14151_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetfourth_HHPE14151(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_HHPE14151.html')
 



def Engine_Checksheet_HHPE14151(request):
     #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
     obj=list(Engine_mst.objects.all().values())[0]
     ROA=obj['ROA']
     print(ROA)
     context={
         "obj":obj,
     }
     if request.method =="POST":
         print("tool sin submit------------------------------------------------")
         submitvalue = request.POST.get('submit')
         print("***",submitvalue)
         print("yesyes")      
         if submitvalue=='PDF':  
             pdf = render_to_pdf('Engine_Division/Engine_Checksheet_HHPE14151.html',context)
             return HttpResponse(pdf,content_type='application/pdf')  
        #  if submitvalue =='submit':
        #      code=obj['Engine_Division_Inspection_code']
        #      print("code",code)
        #      #empname=obj['empname']
     return render(request,'Engine_Division/Engine_Checksheet_HHPE14151.html',context)
 

def fetch_engine_checksheet_HHPE14151(request):
   if request.method == "GET" and request.is_ajax():
         obj=list(Engine_mst.objects.all().values().order_by('sno'))
         print("objhere",obj)
         sumlist=[]
         for i in obj:
                 sno = i['sno']
                 edicc= i['edicc']
                 DOA= i['DOA']
                 ROA= i['ROA']
                 PAGENO= i['PAGENO']
                 VERSIONNO= i['VERSIONNO']
                 temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                 sumlist.append(temp)
         context={
             "sumlist":sumlist,
         }
         print("yesyesyeys")
         print("obj",obj)
         print("sumlist",sumlist)
         return JsonResponse({'data':context},safe=False)
         return JsonResponse({"success":False}, status=400)
 




#engine G4-E1-4151
def Engine_Checksheet_G4E14151(request):
     #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
     obj=list(Engine_mst.objects.all().values())[0]
     ROA=obj['ROA']
     print(ROA)
     context={
         "obj":obj,
     }
     if request.method =="POST":
         print("tool sin submit------------------------------------------------")
         submitvalue = request.POST.get('submit')
         print("***",submitvalue)
         print("yesyes")      
         if submitvalue=='PDF':  
             pdf = render_to_pdf('Engine_Division/Engine_Checksheet_G4E14151.html',context)
             return HttpResponse(pdf,content_type='application/pdf')  
         if submitvalue =='submit':
             code=obj['Engine_Division_Inspection_code']
             print("code",code)
             #empname=obj['empname']
     return render(request,'Engine_Division/Engine_Checksheet_G4E14151.html',context)
 
 
 
def fetch_engine_checksheet_G4E14151(request):
   if request.method == "GET" and request.is_ajax():
         obj=list(Engine_mst.objects.all().values().order_by('sno'))
         print("objhere",obj)
         sumlist=[]
         for i in obj:
                 sno = i['sno']
                 edicc= i['edicc']
                 DOA= i['DOA']
                 ROA= i['ROA']
                 PAGENO= i['PAGENO']
                 VERSIONNO= i['VERSIONNO']
                 temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                 sumlist.append(temp)
         context={
             "sumlist":sumlist,
         }
         print("yesyesyeys")
         print("obj",obj)
         print("sumlist",sumlist)
         return JsonResponse({'data':context},safe=False)
         return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetthird_G4E14151( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E14151_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
           # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_G4E14151.html',context)
 
 
 
def fetch_enginethird_G4E14151(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E14151_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
 
def forward_enginesec_G4E14151(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_G4E14151.html',context)
 
 
                                                                         
 
def forwardws_enginesec_G4E14151(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_G4E14151",status="Pending",user_emp=cqam_empno,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
       
       
       
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def Engine_forwardssec_G4E14151(request):  
       if request.method == "GET" and request.is_ajax():
           
           obj=list(engine_division_G4E14151_trx.objects.all().values())
           print("obj1",obj)
   
           return JsonResponse({'status': 200})    
       return JsonResponse({'status': 200})
 
 
 
def fetchemp_enginesec_G4E14151(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetch_enginesec_G4E14151(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E14151_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_G4E14151(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E14151_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_G4E14151.html',context)
 
 
 
def fetchlink_engine_schedule_sec_G4E14151(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetchblock_engine_schedule_sec_G4E14151(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
 
 
 
# def Schedule_forward_engine_sec_G4E14151(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_sec_G4E14151.html')
 
 
 
 
def fetchlink_engine_schedule_G4E14151(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
 
 
 
def fetchblock_engine_schedule_G4E14151(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
# import matplotlib
# matplotlib.use('Agg')
# import matplotlib.pyplot as plt
# import matplotlib.dates as mdates
# import io, base64
# from django.db.models.functions import TruncDay
# from matplotlib.ticker import LinearLocator
 
 
# def Schedule_forward_engine_G4E14151(request):
 
#     return render(request,'Engine_Division/Schedule_forward_engine_G4E14151.html')
 
def forward_engine_G4E14151(request):
    obj=list(empmast.objects.filter(role='AQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_G4E14151.html',context)
 
 
def forwardws_engine_G4E14151(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_G4E14151",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_G4E14151(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetch_engine_newchecksheet_G4E14151(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
@csrf_exempt
def save_engine_newcheksheet_G4E14151(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_G4E14151_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E14151_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E14151_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E14151_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def save_rej_engine_newcheksheet_G4E14151(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_G4E14151_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E14151_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E14151_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E14151_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def Engine_Newchecksheet_G4E14151(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E14151.html',context)
 
def fetch_engine_newchecksheet_rej_G4E14151(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_G4E14151_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_G4E14151_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
           print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
           saved_data_wm=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E14151_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetfourth_G4E14151(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_G4E14151.html')
 
 



#engine G4E14152

def Engine_Checksheet_G4E14152(request):
     #obj=list(Block_CRANK_1Mst.objects.values('BLOCK_DIVISION_CRANK_INSPECTION_CODE','ROA','PAGENO','VERSIONNO','bdidg1','bdidg2'))[0]
     obj=list(Engine_mst.objects.all().values())[0]
     ROA=obj['ROA']
     print(ROA)
     context={
         "obj":obj,
     }
     if request.method =="POST":
         print("tool sin submit------------------------------------------------")
         submitvalue = request.POST.get('submit')
         print("***",submitvalue)
         print("yesyes")      
         if submitvalue=='PDF':  
             pdf = render_to_pdf('Engine_Division/Engine_Checksheet_G4E14152.html',context)
             return HttpResponse(pdf,content_type='application/pdf')  
         if submitvalue =='submit':
             code=obj['Engine_Division_Inspection_code']
             print("code",code)
             #empname=obj['empname']
     return render(request,'Engine_Division/Engine_Checksheet_G4E14152.html',context)
 
 
 
def fetch_engine_checksheet_G4E14152(request):
   if request.method == "GET" and request.is_ajax():
         obj=list(Engine_mst.objects.all().values().order_by('sno'))
         print("objhere",obj)
         sumlist=[]
         for i in obj:
                 sno = i['sno']
                 edicc= i['edicc']
                 DOA= i['DOA']
                 ROA= i['ROA']
                 PAGENO= i['PAGENO']
                 VERSIONNO= i['VERSIONNO']
                 temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                 sumlist.append(temp)
         context={
             "sumlist":sumlist,
         }
         print("yesyesyeys")
         print("obj",obj)
         print("sumlist",sumlist)
         return JsonResponse({'data':context},safe=False)
         return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetthird_G4E14152( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
           # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_G4E14152.html',context)
 
 
 
def fetch_enginethird_G4E14152(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E14152_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
 
def forward_enginesec_G4E14152(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_G4E14152.html',context)
 
 
                                                                         
 
def forwardws_enginesec_G4E14152(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_G4E14152",status="Pending",user_emp=cqam_empno,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
       
       
       
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def Engine_forwardssec_G4E14152(request):  
       if request.method == "GET" and request.is_ajax():
           btct=request.GET.get("btct")
           print("btct******************************************8",btct)
           obj=list(engine_division_G4E14152_trx.objects.all().values())
           print("obj1",obj)
           for j in obj:
               sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="CQAM")  
               return JsonResponse({'status': 200})    
       return JsonResponse({'status': 200})
 
 
 
def fetchemp_enginesec_G4E14152(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetch_enginesec_G4E14152(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E14152_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_G4E14152(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_G4E14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_G4E14152.html',context)
 
 
 
def fetchlink_engine_schedule_sec_G4E14152(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetchblock_engine_schedule_sec_G4E14152(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
 
 
 
# def Schedule_forward_engine_sec_G4E14152(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_sec_G4E14152.html')
 
 
 
 
def fetchlink_engine_schedule_G4E14152(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
 
 
 
def fetchblock_engine_schedule_G4E14152(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
# import matplotlib
# matplotlib.use('Agg')
# import matplotlib.pyplot as plt
# import matplotlib.dates as mdates
# import io, base64
# from django.db.models.functions import TruncDay
# from matplotlib.ticker import LinearLocator
 
 
# def Schedule_forward_engine_G4E14152(request):
#     return render(request,'Engine_Division/Schedule_forward_engine_G4E14152.html')
 
def forward_engine_G4E14152(request):
    obj=list(empmast.objects.filter(role='AQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_G4E14152.html',context)
 
 
def forwardws_engine_G4E14152(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_G4E14152",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_G4E14152(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetch_engine_newchecksheet_G4E14152(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
@csrf_exempt
def save_engine_newcheksheet_G4E14152(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_G4E14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E14152_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E14152_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E14152_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def save_rej_engine_newcheksheet_G4E14152(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_G4E14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4E14152_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   engine_division_G4E14152_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_G4E14152_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def Engine_Newchecksheet_G4E14152(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E14152.html',context)
 
def fetch_engine_newchecksheet_rej_G4E14152(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_G4E14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_G4E14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
           print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
           saved_data_wm=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E14152_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetfourth_G4E14152(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_G4E14152.html')
 
 
 
 
 
 
 




def fetchlink_engine_schedule(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)




def fetchblock_engine_schedule(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_G4E14152_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2) 
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}   
            sumlist.append(temp) 
            print("sumlist",sumlist)             
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400) 


# engine E130D1000

def save_rej_engine_newcheksheet_E130D1000(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           ee=request.GET.get('ee')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E130D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).exists():
                   engine_division_E130D1000_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_E130D1000_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E130D1000(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           fni = request.GET.get('ee')
           print("*****",esn_no,typee,odn,btn,fni)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E130D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E130D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E130D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E130D1000_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E130D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E130D1000.html')
 
 
 
 
 
 
def Engine_Checksheet_E130D1000(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("*",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E130D1000.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E130D1000(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_E130D1000(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            fni = request.GET.get('fni')
            print("file exist")
            obj=list(engine_division_E130D1000_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn,FNI=fni).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E130D1000(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           ee=request.POST.get('ee')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                   
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                   
                   elif k==5:

                        leng=len(list5[k])
                        list5[k]=list5[k][:leng-1]

                        vlist_col5.append(list5[k])
                   print("j=",list5[k])
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               
               print("yes")
               if engine_division_E130D1000_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).exists():
                   engine_division_E130D1000_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
               else:
                   engine_division_E130D1000_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by)  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E130D1000(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    ee=request.GET.get('ee')
    asmno = cc+","+aa+","+bb+","+dd+","+ee
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E130D1000(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("*",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E130D1000.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E130D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
 
        asmno=esn+","+typee+","+odn+","+btn+","+fni
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E130D1000",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E130D1000(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E130D1000.html',context)
 
 
def forwardws_engine_E130D1000(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        asmno=esn+","+typee+","+odn+","+btn+","+fni
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E130D1000",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E130D1000(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 

def fetch_enginesec_E130D1000(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E130D1000_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E130D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E130D1000.html',context)

def return_to_user_by_wm_E130D1000(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn+","+fni
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)


def forward_enginesec_E130D1000(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E130D1000.html',context)
 
 
 
def fetchemp_enginesec_E130D1000(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E130D1000(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E130D1000.html',context)
 

 
 


def fetch_enginethird_E130D1000(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E130D1000_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)






#Engine 130

def save_rej_engine_newcheksheet_E130(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_E130_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E130(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E130.html')
 
 
 
 
 
 
def Engine_Checksheet_E130(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E130.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E130(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_E130(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            print("file exist")
            obj=list(engine_division_E130_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E130(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                   
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                   
                   elif k==5:
                       
                       leng=len(list5[k])
                       list5[k]=list5[k][:leng-1]
                    #    vlist_sno.append(list5[k])
                       vlist_col5.append(list5[k])
                   print("j=",list5[k])
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               
               print("yes")
               if engine_division_E130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
               else:
                   engine_division_E130_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E130(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E130(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E130.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E130",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E130(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E130.html',context)
 
 
def forwardws_engine_E130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E130",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E130(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 

def fetch_enginesec_E130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E130.html',context)




def forward_enginesec_E130(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E130.html',context)
 
 
 
def fetchemp_enginesec_E130(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E130.html',context)
 

 
 


def fetch_enginethird_E130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)





# engine E130D

def save_rej_engine_newcheksheet_E130D(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           ee=request.GET.get('ee')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E130D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).exists():
                   engine_division_E130D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_E130D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E130D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           fni = request.GET.get('ee')
           print("*****",esn_no,typee,odn,btn,fni)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E130D.html')
 
 
 
 
 
 
def Engine_Checksheet_E130D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("*",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E130D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E130D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_E130D(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            fni = request.GET.get('fni')
            print("file exist")
            obj=list(engine_division_E130D_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn,FNI=fni).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E130D(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           ee=request.POST.get('ee')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                    
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                    
                   elif k==5:

                        leng=len(list5[k])
                        list5[k]=list5[k][:leng-1]

                        vlist_col5.append(list5[k]) 
                   print("j=",list5[k])
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               
               print("yes")
               if engine_division_E130D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).exists():
                   engine_division_E130D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
               else:
                   engine_division_E130D_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by)  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E130D(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    ee=request.GET.get('ee')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E130D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("*",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E130D.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E130D(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
 
        asmno=esn+","+typee+","+odn+","+btn+","+fni
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E130D",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E130D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E130D.html',context)
 
 
def forwardws_engine_E130D(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        asmno=esn+","+typee+","+odn+","+btn+","+fni
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E130D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E130D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

 

def fetch_enginesec_E130D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E130D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E130D.html',context)

def return_to_user_by_wm_e130d(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn+","+fni
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)


def forward_enginesec_E130D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E130D.html',context)
 
 
 
def fetchemp_enginesec_E130D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E130D.html',context)
 

 
 


def fetch_enginethird_E130D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E130D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)







# E135


def save_rej_engine_newcheksheet_E135(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E135_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E135(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E135(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E135.html')
 
 
 
 
 
 
def Engine_Checksheet_E135(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #     #    code=obj['Engine_Division_Inspection_code']
        #        print("code")
        #        #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E135.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E135(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
 
 
def fetch_engine_newchecksheet_E135(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           esn_no = request.GET.get('esn')
           typee = request.GET.get('type')
           odn = request.GET.get('odn')
           btn = request.GET.get('btn')
           print("-----------------------------------------------------------")
        #    print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
           saved_data=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="user").values())
           saved_data_wm=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="wm").values())
           saved_data_cqam=list(engine_division_E135_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
@csrf_exempt
def save_engine_newcheksheet_E135(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date=request.POST.get('date')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_E135_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               
               print("yes",id)
               if engine_division_E135_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E135_trx.objects.filter(edicc_id=l, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date)
               else:
                   engine_division_E135_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
def change_status_cqam_E135(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E135(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E135.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E135(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
 
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
 
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_E135",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E135(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E135.html',context)
 
 
def forwardws_engine_E135(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E135",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E135(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetchlink_engine_schedule_E135(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
def fetchblock_engine_schedule_E135(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_E135_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 

def fetch_enginesec_E135(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E135_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E135(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E135.html',context)




def forward_enginesec_E135(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E135.html',context)
 
 
 
def fetchemp_enginesec_E135(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 

def fetchblock_engine_schedule_sec_E135(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_E135_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
def fetchlink_engine_schedule_E135(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)



def Engine_Newchecksheetthird_E135(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E135.html',context)
 

 
 


def fetch_enginethird_E135(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E135_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

##Block Division Alco_06cyl
 
def Block_Checksheet_Alco_06cyl(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       if request.method =="POST":
           print("tool sin submit------------------------------------------------")
           submitvalue = request.POST.get('submit')
           print("***",submitvalue)
           print("yesyes")      
           if submitvalue=='PDF':  
               pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
               return HttpResponse(pdf,content_type='application/pdf')  
        #    if submitvalue =='submit':
        #     #    code=obj['Engine_Division_Inspection_code']
        #        print("code")
        #        #empname=obj['empname']
       return render(request,'Block_Division/Block_Checksheet_Alco_06cyl.html',context)
 
 
 
 
 
 
def fetch_block_checksheet_Alco_06cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_block_newchecksheet_Alco_06cyl(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           eng = request.GET.get('eng')
           blo = request.GET.get('blo')
           wo = request.GET.get('wo')
           print("-----------------------------------------------------------")
           print("eng",eng)
           print("blo",blo)
           print("wo",wo)
        #    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno')
            #keshav
            # print(asm_no)
        
           cursor=connection.cursor()
           cursor.execute('''SELECT sno, "Block_Division_Inspection_code", "Block_Division_Heading", "Block_division_Para", "Block_division_SubPara"
           FROM public.dlw_block_welding_mst where replace("Block_Division_Inspection_code",'EDICC','')::int>700 
           AND replace("Block_Division_Inspection_code",'EDICC','')::int<825
           ORDER BY replace("Block_Division_Inspection_code",'EDICC','')::int;''')
           obj = cursor.fetchall()
           print(obj,"EDICC_NUMBER")

           saved_data=list(block_division_Alco_06cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo).values())
           saved_data_wm=list(block_division_Alco_06cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo).values())
           saved_data_cqam=list(block_division_Alco_06cyl_trx.objects.filter(eng = eng,blo=blo,wo=wo).values())
            
            #    print(obj)
    
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
            
           return JsonResponse({'data':context},safe=False)
           return JsonResponse({"success":False}, status=400) 
@csrf_exempt
def save_block_newcheksheet_Alco_06cyl(request):
    if request.method == "POST" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        print("ahaan")
        list1 = request.POST.get("newdata")
        list2 = request.POST.get("newdata1")
        eng = request.POST.get('eng')
        blo = request.POST.get('blo')
        wo = request.POST.get('wo')
        insp = request.POST.get('insp')
        date1 = request.POST.get('date1')
        date2 = request.POST.get('date2')
        ediccs=request.POST.get('ediccs')
        date1 = datetime.strptime(date1,'%d-%m-%Y').strftime('%Y-%m-%d')
        date2 = datetime.strptime(date2,'%d-%m-%Y').strftime('%Y-%m-%d')
        change_by=request.POST.get('change_by')
        type=request.POST.get('type')
        print("eng",eng)
        print("blo",blo)
        print("wo",wo)
        print("insp",insp)
        print("date1",date1)
        print("date2",date2)
        print("ediccsss",ediccs)
        print("newdata=",list1)
        #    print(type(list1))
        list4=list1.split('],[')
        print("list4",list4)
        #    print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlist_sno=[]
        vlistRemark=[]
        vlistRemark2=[]
        final=[]
 
        for i in list4:
            vlist.append(i)
        l=len(vlist)
        for i in range(0,l):
            if i == 0:
                vlist[i]=vlist[i][2:]
            if i==l-1:
                le = len(vlist[i])
                vlist[i]=vlist[i][:le-2]
               
            print("i=",vlist[i])
            list5 =vlist[i].split('","')
 
            le = len(list5)
            for k in range(0,le):
                if k == 0:
                    list5[k]=list5[k][1:]
                    vlist_sno.append(list5[k])
                elif k==1:
                    vlist_desc.append(list5[k])
                elif k==2:
                    if k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        vlist_remark.append("Remark")
                    vlist_check.append(list5[k])
                elif k==le-1:
                    lex = len(list5[k])
                    list5[k]=list5[k][:lex-1]
                    if list5[k]=="" :
                        vlist_remark.append("Remark")
                    else:
                        vlist_remark.append(list5[k])
                print("j=",list5[k])
 
        print("vlist_remark",vlist_remark)
        print("vlist_sno",vlist_sno)  
        counter=0  
        count=0
        edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
        #    if ediccs!=null:
        print("ediccs",edicc)
        var_edicc = ediccs.split('","')
        print("ediccs",ediccs)
        le = len(var_edicc)
        eddd = []
        for u in range(0,le):
            if u==0:
                var_edicc[u]=var_edicc[u][2:]
            if u==le-1:
                lex = len(var_edicc[u])
                var_edicc[u]=var_edicc[u][:lex-2]
            eddd.append(var_edicc[u])
        for u in eddd:
            print("EEEEEEEE",u)
        for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
            print(i,j,k,l)
            count=count+1
            ediccc=l
            print("ediccc",ediccc)
            id = list(block_division_Alco_06cyl_trx.objects.values('edipctc').order_by('-edipctc'))
            #keshav
            if len(id):
                id=id[0]['edipctc']+1
            else:
                id=1
            print("yes")
            asmno=eng+","+wo+","+blo+","+insp
            print(asmno)
            if block_division_Alco_06cyl_trx.objects.filter(edicc_id=ediccc, eng = eng,blo=blo,wo=wo, changes_by=change_by).exists():
                block_division_Alco_06cyl_trx.objects.filter(edicc_id=ediccc,eng = eng,blo=blo,wo=wo, changes_by=change_by).update(CHECK=j,RMK1=k,date=date1,date2=date2,insp=insp)
                forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection',empno=cuser).update(status="Forwarded")
            else:
                block_division_Alco_06cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,eng = eng,blo=blo,wo=wo,insp=insp,date=date1,date2=date2 ,edidesc=i,edicc_id=ediccc,changes_by=change_by)
                forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection',empno=cuser).update(status="Forwarded")
         
    return JsonResponse({'status': 200})
 
 
 
 
 
def Block_Newchecksheet_Alco_06cyl(request):
    print("yes1")
    obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
    # print("object",obj)
    context={
        "obj":obj,  
    }
    if request.method =="POST":
        # print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        # print("***",submitvalue)
        # print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            # print("r1",Remark)        
    return render(request,'Block_Division/Block_Newchecksheet_Alco_06cyl.html',context)
 
 
 
 
def forwardws_block_Alco_06cyl(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        from datetime import datetime
        empno=request.GET.get("empno")
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        date1 = datetime.strptime(date1,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        asmno=eng+","+wo+","+blo+","+insp
 
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending",engine_url="Block_Newchecksheetsec_Alco_06cyl")
           
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,
                engine_url="Block_Newchecksheetsec_Alco_06cyl",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
def fetchemp_block_Alco_06cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def forward_block_Alco_06cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_Alco_06cyl.html',context)
 
 
def forwardws_blocksec_Alco_06cyl(request):  
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        empno=request.GET.get("empno")
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        date1 = datetime.strptime(date1,'%d-%m-%Y')
        date2 = datetime.strptime(date2,'%d-%m-%Y')
        asmno=eng+","+wo+","+blo+","+insp
        print(asmno)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,date2=date2,
                engine_url="Block_Newchecksheetthird_Alco_06cyl",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetchemp_blocksec_Alco_06cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
def forward_blocksec_Alco_06cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_Alco_06cyl.html',context)
 
 
def Block_Newchecksheetfourth_Alco_06cyl(request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
       return render(request,'Block_Division/Block_Newchecksheetfourth_Alco_06cyl.html')
 
 
 
 
 
# def fetch_rej_list(request):
#     cuser=request.user
#     obj2=list(forwarded_applications_block.objects.filter(status='Returned',user_emp=cuser).values().order_by('sno'))
   
#     pending_appl=[]
#     for i in obj2:
#         eng=i['eng']
#         wo=i['wo']
#         blo=i['blo']
#         date1=i['date']
#         url=i['engine_url']
#         date2=i['date2']
#         asmno=eng+","+wo+","+blo+","+insp
#         temp={'asm_no':asm,'eng_url':url,"date":date,}
#         pending_appl.append(temp)
   
#     print("-------------------------",pending_appl)
#     context={
#         "pending_appl": pending_appl,
#     }
#     return JsonResponse({'data':context},safe=False)
 
 
def return_to_user_by_wm_alco_06(request):
    if request.method=="GET" and request.is_ajax():
        eng=request.GET.get("eng")
        wo=request.GET.get("wo")
        blo=request.GET.get("blo")
        insp=request.GET.get("insp")
        date1=request.GET.get("date1")
        date2=request.GET.get("date2")
        asmno=eng+","+wo+","+blo+","+insp
        cuser=request.user
        send_by=request.GET.get("send_by")
       
       
        print("*********",cuser)
        if asmno!=None:
            print("dflsdfj")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Returned',engine_url="Block_Newchecksheetfourth_Alco_06cyl")
            return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
 
 
# def save_rej_block_newcheksheet_Alco_06cyl(request):
#        if request.method == "GET" and request.is_ajax():
#            cuser=request.user
#            print("ahaan")
#            list1 = request.GET.get("newdata")
#            list2 = request.GET.get("newdata1")
#            cc=request.GET.get('cc')
#            date=request.GET.get('date')
#            ediccs=request.GET.get('ediccs')
#            print("ediccs",ediccs)
#            change_by=request.GET.get('change_by')
#            type=request.GET.get('type')
#            print("cc",cc)
#            if cc == "":
#                return JsonResponse({'status': 400})
#            print("data",date)
#            print("newdata=",list1)
#         #    print(type(list1))
#            list4=list1.split('],[')
#            print("list4",list4)
#         #    print(type(list4))
#            counter=0
#            x=0
#            c=1
#            c1=2
#            c2=3
#            c3=5
#            vlist=[]
#            vlist_desc=[]
#            vlist_check=[]
#            vlist_remark=[]
#            vlist_sno=[]
#            vlistRemark=[]
#            vlistRemark2=[]
#            final=[]
           
#            for i in list4:
#                vlist.append(i)
#            l = len(vlist)
#            for i in range(0,l):
#                if i == 0:
#                    vlist[i]=vlist[i][2:]
#                if i==l-1:
#                    le = len(vlist[i])
#                    vlist[i]=vlist[i][:le-2]
                   
#                print("i=",vlist[i])
#                list5 =vlist[i].split('","')
 
#                le = len(list5)
#                for k in range(0,le):
#                    if k == 0:
#                        list5[k]=list5[k][1:]
#                        vlist_sno.append(list5[k])
#                    elif k==1:
#                        vlist_desc.append(list5[k])
#                    elif k==2:
#                        if k==le-1:
#                            lex = len(list5[k])
#                            list5[k]=list5[k][:lex-1]
#                            vlist_remark.append("Remark")
#                        vlist_check.append(list5[k])
#                    elif k==le-1:
#                        lex = len(list5[k])
#                        list5[k]=list5[k][:lex-1]
#                        if list5[k]=="" :
#                            vlist_remark.append("Remark")
#                        else:
#                         vlist_remark.append(list5[k])
#                    print("j=",list5[k])
 
#            print("vlist_remark",vlist_remark)
#            print("vlist_sno",vlist_sno)  
#            counter=0  
#            count=0
#            edicc=list(block_welding_mst.objects.values('edicc').order_by('sno'))
           
#            var_edicc = ediccs.split('","')
#            print("ediccs",ediccs)
#            le = len(var_edicc)
#            eddd = []
#            for u in range(0,le):
#                 if u==0:
#                     var_edicc[u]=var_edicc[u][2:]
#                 if u==le-1:
#                     lex = len(var_edicc[u])
#                     var_edicc[u]=var_edicc[u][:lex-2]
#                 eddd.append(var_edicc[u])
#            for u in eddd:
#                print("EEEEEEEE",u)
 
#            for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
#                print(i,j,k,l)
#                count=count+1
#             #    ediccc=l['edicc']
#             #    print("ediccc",ediccc)
#                id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
#                #keshav
#                if len(id):
#                    id=id[0]['edipctc']+1
#                else:
#                    id=1
#                print("yes")
#                if block_division_Alco_06cyl_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
#                    block_division_Alco_06cyl_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
#                else:
#                    block_division_Alco_06cyl_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
#            return JsonResponse({'status': 200})
 
 
# def fetch_block_newchecksheet_rej_Alco_06cyl(request):
#        if request.method=="GET" and request.is_ajax():
#            print("aagya")
#            asm_no = request.GET.get('asn')
           
#            objx=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
#            obj=[]
#            for u in objx:
#                print(u['edicc'])
#             #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
#                if block_division_Alco_06cyl_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
#                    obj.append(u)
#            print("-----------------------------------------------------------",asm_no)
#            print(")))))))))))))))))))))))))))))))",obj)
#            saved_data=list(block_division_Alco_06cyl_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
#            saved_data_wm=list(block_division_Alco_06cyl_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
#            saved_data_cqam=list(block_division_Alco_06cyl_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
#            context={
#             "obj":obj,
#             "saved_data":saved_data,
#             "saved_data_wm":saved_data_wm,
#             "saved_data_cqam":saved_data_cqam,
#             }
           
#            return JsonResponse({'data':context},safe=False)
#        return JsonResponse({"success":False}, status=400)
 
 
 
def Block_Newchecksheetthird_Alco_06cyl( request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Block_Division/Block_Newchecksheetthird_Alco_06cyl.html',context)
 
def Block_Newchecksheetsec_Alco_06cyl( request):
       print("yes1")
       obj=list(block_welding_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
       }
 
   
       return render(request,'Block_Division/Block_Newchecksheetsec_Alco_06cyl.html',context)
 
 
def Block1_select1(request):
        return render(request,"Block_Division/Block_select.html")
 
 
 

def warrantynew(request):
    context={
                'ip':get_client_ip(request),
            }

    

    return render(request,'warrantynew.html',context)



#engine select

def fetch_select_mst_engine(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=engine_select_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            eng_type=i['engine_type']
            eng_name=i['engine_name']
            eng_url=i['eng_url']
           
            temp={'edicc':'EDICC' + str(sno),'eng_type':eng_type,'eng_name':eng_name,'eng_url':eng_url}  
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  

def update_select_mst_engine(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('edicc')
        print(sno)
        sno=sno.split("CC")[1]
        sno=int(sno)
        eng_type=request.GET.get('eng_type')
        eng_name=request.GET.get('eng_name')
        eng_url=request.GET.get('eng_url')
        print(eng_name)
        if engine_select_mst.objects.filter(sno=sno).exists():
            engine_select_mst.objects.filter(sno=sno).update(engine_type=eng_type,engine_name=eng_name,eng_url=eng_url)
        else :
            engine_select_mst.objects.create(sno=sno,engine_type=eng_type,engine_name=eng_name,eng_url=eng_url)
 
        return JsonResponse({'status': 200})  

def delete_select_mst_engine(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
       
        save = engine_select_mst.objects.get(sno=sno)
        save.delete()
        return JsonResponse({'status': 200})

  


def fetch_engines_types(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=engine_select_mst.objects.all().values().distinct('engine_type')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            eng_type=i['engine_type']
            eng_sno=i['sno']
            temp={'eng_type':eng_type,'eng_sno':eng_sno}
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  

def fetch_engines_names(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        eng_type=request.GET.get('eng_type')
        obj=engine_select_mst.objects.filter(engine_type=eng_type).values().distinct('engine_name')
        print("obj",obj)
        print(eng_type)
        sumlist =[]
        for i in obj:
            eng_name=i['engine_name']
            eng_url=i['eng_url']
           
            temp={'eng_name':eng_name,'eng_url':eng_url,}  
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  

def Engine_select_master(request):
    return render(request,'Engine_Division/Engine_select_master.html')



#engine E150 certificate

def Engine_Checksheet_E150_certi(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
   
       return render(request,'Engine_Division/Engine_Checksheet_E150_certi.html',context)
 
 
 
 
 
 
def fetch_engine_Checksheet_E150_certi(request):
   if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)


def save_engine_newcheksheet_E150_certi(request):
     
    if request.method == 'POST' or request.is_ajax():
        mln = request.POST.get('mln')
        sln = request.POST.get('sln')
        noc = request.POST.get('noc')
        tab = request.POST.get('tab')


       
        models.engine_division_E150_certi_trx.objects.create(MLN=mln,SLN=sln,NOC=noc,TAB=tab,)
       
       
    return JsonResponse({'saved':'save'}, safe=False)

def export3_pdf(request):
   
   

   
    slno = request.GET.get('sln')
    rows = engine_division_E150_certi_trx.objects.filter(SLN = slno).values('MLN','SLN','NOC','TAB',)
    date1 = datetime.datetime.now()
    date1 = date1.strftime("%d %B, %Y")
    print(date1)
   

   
   
    context = {
        'rows':rows,
        'date1':date1,
       
    }
   
    print(context)                
    pdf=render_to_pdf('Engine_Division/E150_certi_pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')
    # return FileResponse(buffer, as_attachment=True, filename='pdf.pdf')


def Engine_Newchecksheet_E150_certi(request):
    return render(request,'Engine_Division/Engine_Newchecksheet_E150_certi.html')

#engine G4E150 certificate

def Engine_Checksheet_G4E150_certi(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
   
       return render(request,'Engine_Division/Engine_Checksheet_G4E150_certi.html',context)
 
 
 
 
 
 
def fetch_engine_Checksheet_G4E150_certi(request):
   if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)


def save_engine_newcheksheet_G4E150_certi(request):
     
    if request.method == 'POST' or request.is_ajax():
        sln = request.POST.get('sln')
        esn = request.POST.get('esn')
        odn = request.POST.get('odn')
        btn = request.POST.get('btn')
        r1 = request.POST.get('r1')
        r2 = request.POST.get('r2')
        r3 = request.POST.get('r3')
        r4 = request.POST.get('r4')
        r5 = request.POST.get('r5')
        r6 = request.POST.get('r6')
        r7 = request.POST.get('r7')
        r8 = request.POST.get('r8')
        r9 = request.POST.get('r9')
        remark = r1+', '+r2+', '+r3+', '+r4+', '+r5+', '+r6+', '+r7+', '+r8+', '+r9
        print(remark)
       

       
        models.engine_division_G4E150_certi_trx.objects.create(SLN=sln,ESN=esn,ODN=odn,BTN=btn,col1=remark)
        #  if submitvS
       
    return JsonResponse({'saved':'save'}, safe=False)

def export2_pdf(request):
    slno = request.GET.get('sln')  
    rows = engine_division_G4E150_certi_trx.objects.filter(SLN = slno).values('SLN','ESN','ODN','BTN','col1')
    print(rows)
    column1=rows[0]['col1'].split(',')[0]
    column2=rows[0]['col1'].split(',')[1]
    column3=rows[0]['col1'].split(',')[2]
    column4=rows[0]['col1'].split(',')[3]
    column5=rows[0]['col1'].split(',')[4]
    column6=rows[0]['col1'].split(',')[5]
    column7=rows[0]['col1'].split(',')[6]
    column8=rows[0]['col1'].split(',')[7]
    column9=rows[0]['col1'].split(',')[8]
   
    context = {
       
         'rows':rows,
         'column1':column1,
         'column2':column2,
         'column3':column3,
         'column4':column4,
         'column5':column5,
         'column6':column6,
         'column7':column7,
         'column8':column8,
         'column9':column9,
   
    }
   
     
    print(context)                
    pdf=render_to_pdf('Engine_Division/G4E150_certi_pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')  
    # return FileResponse(buffer, as_attachment=True, filename='pdf.pdf')


def Engine_Newchecksheet_G4E150_certi(request):
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E150_certi.html')

#engine HHPE150 certificate
 
def Engine_checksheet_HHPE150_certi(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
   
       return render(request,'Engine_Division/Engine_checksheet_HHPE150_certi.html',context)
 
def fetch_engine_checksheet_HHPE150_certi(request):
   if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)


def save_engine_newcheksheet_HHPE150_certi(request):
     
    if request.method == 'POST' or request.is_ajax():
        sln = request.POST.get('sln')
        esn = request.POST.get('esn')
        odn = request.POST.get('odn')
        btn = request.POST.get('btn')
        r1 = request.POST.get('r1')
        r2 = request.POST.get('r2')
        r3 = request.POST.get('r3')
        r4 = request.POST.get('r4')
        r5 = request.POST.get('r5')
        r6 = request.POST.get('r6')
        r7 = request.POST.get('r7')
        r8 = request.POST.get('r8')
        r9 = request.POST.get('r9')
        remark = r1+', '+r2+', '+r3+', '+r4+', '+r5+', '+r6+', '+r7+', '+r8+', '+r9
        print(remark)
       

       
        models.engine_division_HHPE150_certi_trx.objects.create(SLN=sln,ESN=esn,ODN=odn,BTN=btn,col1=remark)
       
       
    return JsonResponse({'saved':'save'}, safe=False)

def export1_pdf(request):
    slno = request.GET.get('sln')
   
   
   

   
   
    rows = engine_division_HHPE150_certi_trx.objects.filter(SLN = slno).values('SLN','ESN','ODN','BTN','col1')
    column1=rows[0]['col1'].split(',')[0]
    column2=rows[0]['col1'].split(',')[1]
    column3=rows[0]['col1'].split(',')[2]
    column4=rows[0]['col1'].split(',')[3]
    column5=rows[0]['col1'].split(',')[4]
    column6=rows[0]['col1'].split(',')[5]
    column7=rows[0]['col1'].split(',')[6]
    column8=rows[0]['col1'].split(',')[7]
    column9=rows[0]['col1'].split(',')[8]

    context = {
       
         'rows':rows,
         'column1':column1,
         'column2':column2,
         'column3':column3,
         'column4':column4,
         'column5':column5,
         'column6':column6,
         'column7':column7,
         'column8':column8,
         'column9':column9,
   
    }
   
    print(context)                
    pdf=render_to_pdf('Engine_Division/HHPE150_certi_pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')  
   


def Engine_Newchecksheet_HHPE150_certi(request):
    return render(request,'Engine_Division/Engine_Newchecksheet_HHPE150_certi.html')






# Engine E146C



def forwardws_engine_E146C(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E146C",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
def save_rej_engine_newcheksheet_E146C(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E146C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E146C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E146C_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E146C(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E146C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E146C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E146C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E146C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E146C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E146C.html')
 
 
 
 
 
 
def Engine_Checksheet_E146C(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
   
       return render(request,'Engine_Division/Engine_Checksheet_E146C.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E146C(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt
def fetch_engine_newchecksheet_E146C(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E146C_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 
 
@csrf_exempt
def save_engine_newcheksheet_E146C(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]
 
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   
 
               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               
               print("yes")
               if engine_division_E146C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E146C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
               else:
                   engine_division_E146C_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E146C(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E146C(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E146C.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
def forwardws_enginesec_E146C(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
       
 
        date1=request.GET.get("date1")
        print(date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        else:    
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E146C",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
 
 
def forward_engine_E146C(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E146C.html',context)
 
 
 
 
 
 
 
def fetchemp_engine_E146C(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
 
 
def fetch_enginesec_E146C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E146C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_E146C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E146C.html',context)




def forward_enginesec_E146C(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E146C.html',context)
 
 
 
def fetchemp_enginesec_E146C(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 




def Engine_Newchecksheetthird_E146C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E146C.html',context)
 
 
 
 
 
def fetch_enginethird_E146C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E146C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def return_to_user_by_wm(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
def return_to_user_by_cqam(request):
    if request.method=="POST" and request.is_ajax():
        cc = request.POST.get('asmb')
        cuser=request.user
        empno=request.POST.get("empno")
        esn=request.POST.get("esn")
        typee=request.POST.get("type")
        odn=request.POST.get("odn")
        btn=request.POST.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='cqam').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})




#view of engine division 13/09/2020

# hhpe14152
 
def Engine_Newchecksheetthird_HHPE14152( request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
           # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_HHPE14152.html',context)
 
 
 
def fetch_enginethird_HHPE14152(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_HHPE14152_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
 
def forward_enginesec_HHPE14152(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_HHPE14152.html',context)
 
 
                                                                         
 
def forwardws_enginesec_HHPE14152(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_HHPE14152",status="Pending",user_emp=cqam_empno,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
       
       
       
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def Engine_forwardssec_HHPE14152(request):  
       if request.method == "GET" and request.is_ajax():
           btct=request.GET.get("btct")
           print("btct******************************************8",btct)
           obj=list(engine_division_HHPE14152_trx.objects.all().values())
           print("obj1",obj)
           for j in obj:
               sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="CQAM")  
               return JsonResponse({'status': 200})    
       return JsonResponse({'status': 200})
 
 
 
def fetchemp_enginesec_HHPE14152(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
 
 
 
def fetch_enginesec_HHPE14152(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_HHPE14152_trx.objects.filter(edidesc=edids).values('RMK1','CHECK').order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                RMK1 = j['RMK1']
                CHECK = j['CHECK']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK1 = ''
                CHECK = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK1':RMK1,'CHECK':CHECK}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def Engine_Newchecksheetsec_HHPE14152(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
    #    obj11=list(engine_division_HHPE14152_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    #    ASN=obj11['ASN']
    #    print("asn",ASN)
    #        # print("**",obj)
       context={
           "obj":obj,
        #    "ASN":ASN
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")  
    #        if submitvalue =='submit':
    #            print("aagya2")
    #            #empname=obj['empname']    
    #            Remark=request.POST.get('r1')
    #            print("r1",Remark)  
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_HHPE14152.html',context)
 
 
 
def fetchlink_engine_schedule_sec_HHPE14152(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Closed",changes_by='cqam').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
 
 
 
def fetchblock_engine_schedule_sec_HHPE14152(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
def Schedule_forward_engine_sec_HHPE14152(request):
    obj=forwarded_applications.objects.filter(status="Pending",changes_by='cqam').values().count()
    obj2=forwarded_applications.objects.filter(status="Closed",changes_by='cqam').values().count()
    print(obj,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    print(obj2,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    y_cor=[obj,obj2]
    x_cor=['Pending Applications','Closed Applications']
   
    fig, ax = plt.subplots(figsize=(10,4))
 
    labels = 'Pending Applications', 'Closed Applications'
   
    explode = (0.1, 0)
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor, explode=explode, labels=labels, autopct='%1.1f%%',
            shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of Number of Pending and Closed Applications')
 
 
    ax.plot(x_cor, y_cor, '--bo')
 
    # fig.autofmt_xdate()
    # ax.fmt_xdata = mdates.DateFormatter('%Y-%m-%d')
    ax.set_title('Number of Pending and Closed Applications')
 
    ax.set_ylabel("Count")
 
    # ax.set_xlabel("pending or closed")
    # ax.grid(linestyle="--", linewidth=0.5, color='.25', zorder=-10)
    # ax.yaxis.set_minor_locator(LinearLocator(25))
 
    flike = io.BytesIO()
    fig.savefig(flike)
    b64 = base64.b64encode(flike.getvalue()).decode()
 
    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    context={}
    context['chart'] = b64
    print(b64,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    context['piechart'] = b641
    return render(request,'Engine_Division/Schedule_forward_engine_sec_HHPE14152.html',context)
 
 
 
 
def fetchlink_engine_schedule_HHPE14152(request):
    print("ashcgayigscyiagiy")
    obj2=list(forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().order_by('sno'))
    obj=list(forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
 
    closed_appl=[]
    for i in obj:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        closed_appl.append(temp)
       
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
        "closed_appl": closed_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
def fetchblock_engine_schedule_HHPE14152(request):
    if request.method=="GET" and request.is_ajax():
        drgno = request.GET.get('drgno')
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))[0]
        print("**",obj)
        bdid=obj['bdid']
        bdic=obj['bdic']
        obj1=list(engine_division_mst.objects.filter(bdic=bdic).values('edipdesc','edipmn','edipmm').order_by('sno'))
        print("***obj1**",obj1)
        sumlist =[]
        for i in obj1:
            bdipdesc=i['bdipdesc']
            bdipmn=float(i['bdipmn'])
            bdipmm=float(i['bdipmm'])
            print("***obj1**",obj1)
            print("desc**************",bdipdesc)
            print("**********bdipmn",bdipmn)
            print("**********bdipmm",bdipmm)
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            print(" *",rem)
            print("**********bdipp",sum)
            print("fin",fin)
            print("sum",sum)
            obj2=list(engine_division_trx.objects.filter(ediptd=edipdesc).values('ediptvnr','ediptvnl','ediptvr'))  
            print("object",obj2)
            for j in obj2:
                ediptvnr=j['ediptvnr']
                ediptvnl=j['ediptvnl']
                ediptvr=j['ediptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                ediptvnr=''
                ediptvnl=''
                ediptvr=''                    
            temp={'edipdesc':edipdesc,'fin':fin,'ediptvnr':ediptvnr,'ediptvnl':ediptvnl,'ediptvr':ediptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)            
 
        context = {
            'sumlist': sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import io, base64
from django.db.models.functions import TruncDay
from matplotlib.ticker import LinearLocator
 
 
def Schedule_forward_engine_HHPE14152(request):
    obj=forwarded_applications.objects.filter(status="Pending",changes_by='wm').values().count()
    obj2=forwarded_applications.objects.filter(status="Forwarded",changes_by='wm').values().count()
    print(obj,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    print(obj2,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    y_cor=[obj,obj2]
    x_cor=['Pending Applications','Closed Applications']
   
    fig, ax = plt.subplots(figsize=(10,4))
 
    labels = 'Pending Applications', 'Closed Applications'
   
    explode = (0.1, 0)
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor, explode=explode, labels=labels, autopct='%1.1f%%',
            shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of Number of Pending and Closed Applications')
 
 
    ax.plot(x_cor, y_cor, '--bo')
 
    # fig.autofmt_xdate()
    # ax.fmt_xdata = mdates.DateFormatter('%Y-%m-%d')
    ax.set_title('Number of Pending and Closed Applications')
 
    ax.set_ylabel("Count")
 
    # ax.set_xlabel("pending or closed")
    # ax.grid(linestyle="--", linewidth=0.5, color='.25', zorder=-10)
    # ax.yaxis.set_minor_locator(LinearLocator(25))
 
    flike = io.BytesIO()
    fig.savefig(flike)
    b64 = base64.b64encode(flike.getvalue()).decode()
 
    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    context={}
    context['chart'] = b64
    print(b64,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    context['piechart'] = b641
    return render(request,'Engine_Division/Schedule_forward_engine_HHPE14152.html',context)


def schedularforward(request):
    try:
        print(request.user)
        obj=forwarded_applications_block.objects.filter(status="Pending",changes_by='sse_block_shopinspection',empno=request.user).values().count()
        obj2=forwarded_applications_block.objects.filter(status="Forwarded",changes_by='sse_block_shopinspection',empno=request.user).values().count()
        print(obj,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
        print(obj2,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
        y_cor=[obj,obj2]
        x_cor=['Pending Applications','Closed Applications']
   
        fig, ax = plt.subplots(figsize=(10,4))
   
        labels = 'Pending Applications', 'Closed Applications'
   
        explode = (0.1, 0)
        fig1, ax1 = plt.subplots()
        ax1.pie(y_cor, explode=explode, labels=labels, autopct='%1.1f%%',
                shadow=True, startangle=90)
        ax1.axis('equal')
        ax1.set_title('Pie Chart Visualization of Number of Pending and Closed Applications')
   
   
        ax.plot(x_cor, y_cor, '--bo')
   
        # fig.autofmt_xdate()
        # ax.fmt_xdata = mdates.DateFormatter('%Y-%m-%d')
        ax.set_title('Number of Pending and Closed Applications')
   
        ax.set_ylabel("Count")
   
        # ax.set_xlabel("pending or closed")
        # ax.grid(linestyle="--", linewidth=0.5, color='.25', zorder=-10)
        # ax.yaxis.set_minor_locator(LinearLocator(25))
   
        flike = io.BytesIO()
        fig.savefig(flike)
        b64 = base64.b64encode(flike.getvalue()).decode()
   
        flike1 = io.BytesIO()
        fig1.savefig(flike1)
        b641 = base64.b64encode(flike1.getvalue()).decode()
        context={}
        context['chart'] = b64
        print(b64,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
        context['piechart'] = b641
        return render(request,'Block_Division/schedularforward.html',context)
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
def schedularforward2(request):
    print(request.user)
    obj=forwarded_applications_block.objects.filter(status="Pending",changes_by='sse_block_shopinspection(G)',empno=request.user).values().count()
    obj2=forwarded_applications_block.objects.filter(status="Forwarded",changes_by='sse_block_shopinspection(G)',empno=request.user).values().count()
    print(obj,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    print(obj2,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
    y_cor=[obj,obj2]
    x_cor=['Pending Applications','Closed Applications']
   
    fig, ax = plt.subplots(figsize=(10,4))
 
    labels = 'Pending Applications', 'Closed Applications'
   
    explode = (0.1, 0)
    fig1, ax1 = plt.subplots()
    ax1.pie(y_cor, explode=explode, labels=labels, autopct='%1.1f%%',
            shadow=True, startangle=90)
    ax1.axis('equal')
    ax1.set_title('Pie Chart Visualization of Number of Pending and Closed Applications')
 
 
    ax.plot(x_cor, y_cor, '--bo')
 
    # fig.autofmt_xdate()
    # ax.fmt_xdata = mdates.DateFormatter('%Y-%m-%d')
    ax.set_title('Number of Pending and Closed Applications')
 
    ax.set_ylabel("Count")
 
    # ax.set_xlabel("pending or closed")
    # ax.grid(linestyle="--", linewidth=0.5, color='.25', zorder=-10)
    # ax.yaxis.set_minor_locator(LinearLocator(25))
 
    flike = io.BytesIO()
    fig.savefig(flike)
    b64 = base64.b64encode(flike.getvalue()).decode()
 
    flike1 = io.BytesIO()
    fig1.savefig(flike1)
    b641 = base64.b64encode(flike1.getvalue()).decode()
    context={}
    context['chart'] = b64
    print(b64,"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
    context['piechart'] = b641
    return render(request,'Block_Division/schedularforward2.html',context)
 
def forward_engine_HHPE14152(request):
    obj=list(empmast.objects.filter(role='CQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_HHPE14152.html',context)
 
 
def forwardws_engine_HHPE14152(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        asmno=request.GET.get("asmno")
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending",engine_url="Engine_Newchecksheetsec_HHPE14152")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_HHPE14152",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_HHPE14152(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
def fetch_engine_newchecksheet_HHPE14152(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
@csrf_exempt
def save_engine_newcheksheet_HHPE14152(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l=len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
               print(i,j,k,l)
               count=count+1
               ediccc=l['edicc']
               print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_HHPE14152_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).exists():
                   engine_division_HHPE14152_trx.objects.filter(edicc_id=ediccc, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_HHPE14152_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def save_rej_engine_newcheksheet_HHPE14152(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_HHPE14152_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).exists():
                   engine_division_HHPE14152_trx.objects.filter(edicc_id=l, ASN=cc, changes_by=change_by).update(CHECK=j,RMK1=k,dateblock=date)
               else:
                   engine_division_HHPE14152_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
def Engine_Newchecksheet_HHPE14152(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_HHPE14152.html',context)
 
def fetch_engine_newchecksheet_rej_HHPE14152(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
           print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="wm",CHECK = "no").values())
           saved_data_wm=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_HHPE14152_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetfourth_HHPE14152(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_HHPE14152.html')
 
 
 
# def fetch_rej_list(request):
#     cuser=request.user
#     obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
#     pending_appl=[]
#     for i in obj2:
#         asm=i['asmbly_no']
#         url=i['engine_url']
#         date=i['date']
       
#         temp={'asm_no':asm,'eng_url':url,"date":date,}
#         pending_appl.append(temp)
   
#     print("-------------------------",pending_appl)
#     context={
#         "pending_appl": pending_appl,
#     }
#     return JsonResponse({'data':context},safe=False)
 
   
 
 
 
def return_to_user_by_wm(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        bgno=request.GET.get("bgno")
        send_by=request.GET.get("send_by")
       
        print("*********",send_by)
        if bgno!=None:
            forwarded_applications_block.objects.filter(boogy_no=bgno,user_emp=send_by,changes_by='wm').update(status = 'Returned')
       
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
            forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
 
 



#View E130D


# engine E130D
 
def save_rej_engine_newcheksheet_E130D(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           ee=request.GET.get('ee')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E130D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).exists():
                   engine_division_E130D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_E130D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E130D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           fni = request.GET.get('ee')
           print("*****",esn_no,typee,odn,btn,fni)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E130D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn , FNI=fni, changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E130D.html')
 
 
 
 
 
 
def Engine_Checksheet_E130D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("*",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E130D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E130D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_E130D(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            fni = request.GET.get('fni')
            print("file exist")
            obj=list(engine_division_E130D_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn,FNI=fni).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 
 
@csrf_exempt
def save_engine_newcheksheet_E130D(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           ee=request.POST.get('ee')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   
 
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                   
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                   
                   elif k==5:
 
                        leng=len(list5[k])
                        list5[k]=list5[k][:leng-1]
 
                        vlist_col5.append(list5[k])
                   print("j=",list5[k])
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               asmno = cc+","+aa+","+bb+","+dd+","+ee
               print("yes")
               if engine_division_E130D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).exists():
                   engine_division_E130D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
               else:
                   engine_division_E130D_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd, FNI=ee, changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
 
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
 
   
 
 
 
def Engine_Newchecksheet_E130D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("*",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E130D.html',context)
 
 
 
 
 
 
 
def forwardws_enginesec_E130D(request):  
    if request.method == "GET" and request.is_ajax():
            cuser=request.user
            cqam_empno=request.GET.get("cqam_empno")
            empno=request.GET.get("empno")
            print(empno,"empnooooooooooooooooo")
            esn=request.GET.get("esn")
            typee=request.GET.get("type")
            odn=request.GET.get("odn")
            btn=request.GET.get("btn")
            fni=request.GET.get("fni")
   
            asmno=esn+","+typee+","+odn+","+btn+","+fni
           
            datee=request.GET.get("date")
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetthird_E130D",status="Pending",empno=cqam_empno,user_emp=cuser,changes_by='cqam')
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
def forward_engine_E130D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E130D.html',context)
 
 
def forwardws_engine_E130D(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        asmno=esn+","+typee+","+odn+","+btn+","+fni
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_E130D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_E130D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
 
 
def fetch_enginesec_E130D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E130D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetsec_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E130D.html',context)
 
def return_to_user_by_wm_e130d(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        fni=request.GET.get("fni")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn+","+fni
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)
 
 
def forward_enginesec_E130D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E130D.html',context)
 
 
 
def fetchemp_enginesec_E130D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 
 
 
 
 
def Engine_Newchecksheetthird_E130D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_E130D.html',context)
 
 
 
 
 
 
def fetch_enginethird_E130D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E130D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
                 FNI = j['FNI']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
                FNI = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN,'FNI':FNI}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 



#Engine G4E130

#Engine G4E130
 
def save_rej_engine_newcheksheet_G4E130(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4G4E130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_G4G4E130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_G4G4E130_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_G4E130(request):
    #    if request.method=="GET" and request.is_ajax():
    #        print("aagya")
    #     #    asm_no = request.GET.get('asn')
    #        esn_no = request.GET.get('cc')
    #        typee = request.GET.get('aa')
    #        odn = request.GET.get('bb')
    #        btn = request.GET.get('dd')
    #        print("***************",esn_no,typee,odn,btn)
    #        objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    #        obj=[]
    #        for u in objx:
    #            print(u['edicc'])
    #         #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
    #            if engine_division_G4E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
    #                obj.append(u)
    #     #    print("-----------------------------------------------------------",asm_no)
    #        print(")))))))))))))))))))))))))))))))",obj)
    #        saved_data=list(engine_division_G4E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
    #        print(saved_data)
    #        saved_data_wm=list(engine_division_G4E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
    #        saved_data_cqam=list(engine_division_G4E130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
    #        context={
    #         "obj":obj,
    #         "saved_data":saved_data,
    #         "saved_data_wm":saved_data_wm,
    #         "saved_data_cqam":saved_data_cqam,
    #         }
           
    #        return JsonResponse({'data':context},safe=False)
    #    return JsonResponse({"success":False}, status=400)
 
 
 if request.method=="GET" and request.is_ajax():
           print("aagya")
           asm_no = request.GET.get('asn')
           print("-----------------------------------------------------------")
           print(asm_no)
 
           obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
            #keshav
            # print(asm_no)
           saved_data=list(engine_division_G4E130_trx.objects.filter(ASN = asm_no , changes_by="user").values())
           saved_data_wm=list(engine_division_G4E130_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(engine_division_G4E130_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
           
           print(obj)
 
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,}
           
           return JsonResponse({'data':context},safe=False)
           return JsonResponse({"success":False}, status=400)
 
 
 
def Engine_Newchecksheetfourth_G4E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_G4E130.html')
 
 
 
 
 
 
def Engine_Checksheet_G4E130(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_G4E130.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_G4E130(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_G4E130(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            print("file exist")
            obj=list(engine_division_G4E130_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 
 
@csrf_exempt
def save_engine_newcheksheet_G4E130(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   
 
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                   
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                   
                   elif k==5:
                       
                       leng=len(list5[k])
                       list5[k]=list5[k][:leng-1]
                    #    vlist_sno.append(list5[k])
                       vlist_col5.append(list5[k])
                   print("j=",list5[k])
           print(len(vlist_sno))
           print(len(vlist_col1))
           print(len(vlist_col2))
           print(len(vlist_col3))
           print(len(vlist_col4))
           print(len(vlist_col5))
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               
               asmno=cc+","+aa+","+bb+","+dd
               print("yes",asmno)
               if engine_division_G4E130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_G4E130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
               else:
                   engine_division_G4E130_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_G4E130(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})
 
 
 
 
def Engine_Newchecksheet_G4E130(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_G4E130.html',context)
 
 
 
def forward_engine_G4E130(request):
    obj=list(empmast.objects.filter(role='AQAM').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
       
    }
    return render(request,'Engine_Division/forward_engine_G4E130.html',context)
 
 
def forwardws_engine_G4E130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending",engine_url="Engine_Newchecksheetsec_G4E130")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_G4E130",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_G4E130(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
 
 
 
def fetch_enginesec_G4E130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_G4E130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetsec_G4E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_G4E130.html',context)
 
 
 
 
def forward_enginesec_G4E130(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_G4E130.html',context)
 
 
                                                                         
 
def forwardws_enginesec_G4E130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        empno=request.GET.get("empno")
        print(empno,"empnooooooooooooooooo")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_G4E130",status="Pending",empno=cqam_empno,user_emp=cuser,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
    return JsonResponse({'status': 200})
 
 
 
 
 
def fetchemp_enginesec_G4E130(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 
 
 
 
 
def Engine_Newchecksheetthird_G4E130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_G4E130.html',context)
 
 
 
 
 
 
def fetch_enginethird_G4E130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_G4E130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def return_to_user_by_wm_G4E130(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
 



#ENGINE HHPE130

#Engine HHPE130
 
def save_rej_engine_newcheksheet_HHPE130(request):
       if request.method == "GET" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.GET.get("newdata")
           list2 = request.GET.get("newdata1")
           cc=request.GET.get('cc')
           aa=request.GET.get('aa')
           bb=request.GET.get('bb')
           dd=request.GET.get('dd')
           date=request.GET.get('date')
           ediccs=request.GET.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.GET.get('change_by')
           type=request.GET.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                       vlist_sno.append(list5[k])
                   elif k==1:
                       vlist_desc.append(list5[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list5[k])
                           list5[k]=list5[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list5[k])
                   elif k==le-1:
                       lex = len(list5[k])
                       list5[k]=list5[k][:lex-1]
                       if list5[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list5[k])
                   print("j=",list5[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_G4HHPE130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_G4HHPE130_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,Date=date)
               else:
                   engine_division_G4HHPE130_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_HHPE130(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.GET.get('cc')
           typee = request.GET.get('aa')
           odn = request.GET.get('bb')
           btn = request.GET.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_HHPE130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_HHPE130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_HHPE130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_HHPE130_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_HHPE130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_HHPE130.html')
 
 
 
 
 
 
def Engine_Checksheet_HHPE130(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_HHPE130.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_HHPE130(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def fetch_engine_newchecksheet_HHPE130(request):
        if request.method=="GET" and request.is_ajax():
            esn_no = request.GET.get('esn')
            typee = request.GET.get('type')
            odn = request.GET.get('odn')
            btn = request.GET.get('btn')
            print("file exist")
            obj=list(engine_division_HHPE130_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 
 
@csrf_exempt
def save_engine_newcheksheet_HHPE130(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
        #    list2 = request.GET.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date=request.POST.get('date')
           change_by=request.POST.get('change_by')
           print("newdata=",list1)
           list4=list1.split(',"$",')
           print("list4",list4)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           
           for i in list4:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   
 
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list5)
               for k in range(0,le):
                   if k == 0:
                       list5[k]=list5[k][1:]
                    #    leng=len(list5[k])
                    #    list5[k]=list5[k][:leng-1]
                       vlist_sno.append(list5[k])
                   elif k == 1:
                   
                       vlist_col1.append(list5[k])
                   elif k==2:
                       vlist_col2.append(list5[k])
                   elif k==3:
                   
                       vlist_col3.append(list5[k])
                   elif k==4:
                       vlist_col4.append(list5[k])
                   
                   elif k==5:
                       
                       leng=len(list5[k])
                       list5[k]=list5[k][:leng-1]
                    #    vlist_sno.append(list5[k])
                       vlist_col5.append(list5[k])
                   print("j=",list5[k])
           print(len(vlist_sno))
           print(len(vlist_col1))
           print(len(vlist_col2))
           print(len(vlist_col3))
           print(len(vlist_col4))
           print(len(vlist_col5))
 
           for s,i,j,k,l,m in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5):
               print(s,i,j,k,l,m)
               asmno=cc+","+aa+","+bb+","+dd
               print("yes")
               if engine_division_HHPE130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_HHPE130_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(Date=date,col1=i,col2=j,col3=k,col4=l,col5=m)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
               else:
                   engine_division_HHPE130_trx.objects.create(slno=s,Date=date,col1=i,col2=j,col3=k,col4=l,col5=m,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Closed')
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_HHPE130(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})
 
 
 
 
def Engine_Newchecksheet_HHPE130(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_HHPE130.html',context)
 
 
 
 
 
 
 
 
def forwardws_enginesec_HHPE130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        empno=request.GET.get("empno")
        print(empno,"empnooooooooooooooooo")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
            engine_url="Engine_Newchecksheetthird_HHPE130",status="Pending",empno=cqam_empno,user_emp=cuser,changes_by='cqam')
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
       
    return JsonResponse({'status': 200})
 
 
 
 
 
 
 
 
 
def forward_engine_HHPE130(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_HHPE130.html',context)
 
 
def forwardws_engine_HHPE130(request):  
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        datee=request.GET.get("date")
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=datee,
                engine_url="Engine_Newchecksheetsec_HHPE130",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  
 
 
 
 
def fetchemp_engine_HHPE130(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
 
 
 
def fetch_enginesec_HHPE130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_HHPE130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
 
def Engine_Newchecksheetsec_HHPE130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_HHPE130.html',context)
 
 
 
 
def forward_enginesec_HHPE130(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_HHPE130.html',context)
 
 
 
def fetchemp_enginesec_HHPE130(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
 
 
       
 
 
 
 
 
def Engine_Newchecksheetthird_HHPE130(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetthird_HHPE130.html',context)
 
 
 
 
 
 
def fetch_enginethird_HHPE130(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_HHPE130_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def return_to_user_by_wm_HHPE130(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 


# Engine E146D

def forwardws_engine_E146D(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E146D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  

def save_rej_engine_newcheksheet_E146D(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E146D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E146D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E146D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E146D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E146D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E146D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E146D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E146D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E146D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E146D.html')
 
 
 
 
 
 
def Engine_Checksheet_E146D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
       return render(request,'Engine_Division/Engine_Checksheet_E146D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E146D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt 
def fetch_engine_newchecksheet_E146D(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E146D_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E146D(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb+","+dd
               
               print("yes")
               if engine_division_E146D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E146D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")
               else:
                   engine_division_E146D_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E146D(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E146D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E146D.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

def forwardws_enginesec_E146D(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
        
 
        date1=request.GET.get("date1")
        
        # if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
        #     forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        # else:    
        forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E146D",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
def forward_engine_E146D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E146D.html',context)
 
 
def fetchemp_engine_E146D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

def fetch_enginesec_E146D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E146D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E146D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E146D.html',context)


def forward_enginesec_E146D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E146D.html',context)
 
 
def fetchemp_enginesec_E146D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def Engine_Newchecksheetthird_E146D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

       return render(request,'Engine_Division/Engine_Newchecksheetthird_E146D.html',context)
 
def fetch_enginethird_E146D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E146D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def return_to_user_by_wm_E146D(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})



# Engine E147D

def forwardws_engine_E147D(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E147D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  

def save_rej_engine_newcheksheet_E147D(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E147D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E147D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E147D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E147D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E147D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E147D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E147D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E147D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E147D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E147D.html')
 
 
 
 
 
 
def Engine_Checksheet_E147D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E147D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E147D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt 
def fetch_engine_newchecksheet_E147D(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E147D_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E147D(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb+","+dd
               
               print("yes")
               if engine_division_E147D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E147D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")
               else:
                   engine_division_E147D_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E147D(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E147D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E147D.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

def forwardws_enginesec_E147D(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
        
 
        date1=request.GET.get("date1")
        
        # if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
        #     forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        # else:    
        forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E147D",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
def forward_engine_E147D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E147D.html',context)
 
 
def fetchemp_engine_E147D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

def fetch_enginesec_E147D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E147D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E147D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E147D.html',context)


def forward_enginesec_E147D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E147D.html',context)
 
 
def fetchemp_enginesec_E147D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def Engine_Newchecksheetthird_E147D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

       return render(request,'Engine_Division/Engine_Newchecksheetthird_E147D.html',context)
 
def fetch_enginethird_E147D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E147D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def return_to_user_by_wm_E147D(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def return_to_user_by_cqam(request):
    if request.method=="POST" and request.is_ajax():
        cc = request.POST.get('asmb')
        cuser=request.user
        empno=request.POST.get("empno")
        esn=request.POST.get("esn")
        typee=request.POST.get("type")
        odn=request.POST.get("odn")
        btn=request.POST.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='cqam').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


# Engine E148D

def forwardws_engine_E148D(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E148D",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  

def save_rej_engine_newcheksheet_E148D(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E148D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E148D_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E148D_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E148D(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E148D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E148D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E148D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E148D_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E148D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E148D.html')
 
 
 
 
 
 
def Engine_Checksheet_E148D(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E148D.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E148D(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt 
def fetch_engine_newchecksheet_E148D(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E148D_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E148D(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb+","+dd
               
               print("yes")
               if engine_division_E148D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E148D_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")
               else:
                   engine_division_E148D_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E148D(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E148D(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E148D.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

def forwardws_enginesec_E148D(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
        
 
        date1=request.GET.get("date1")
        
        # if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
        #     forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        # else:    
        forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E148D",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
def forward_engine_E148D(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E148D.html',context)
 
 
def fetchemp_engine_E148D(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

def fetch_enginesec_E148D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E148D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E148D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E148D.html',context)


def forward_enginesec_E148D(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E148D.html',context)
 
 
def fetchemp_enginesec_E148D(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def Engine_Newchecksheetthird_E148D(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

       return render(request,'Engine_Division/Engine_Newchecksheetthird_E148D.html',context)
 
def fetch_enginethird_E148D(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E148D_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def return_to_user_by_wm_E148D(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def return_to_user_by_cqam(request):
    if request.method=="POST" and request.is_ajax():
        cc = request.POST.get('asmb')
        cuser=request.user
        empno=request.POST.get("empno")
        esn=request.POST.get("esn")
        typee=request.POST.get("type")
        odn=request.POST.get("odn")
        btn=request.POST.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='cqam').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


# Engine E148C

def forwardws_engine_E148C(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E148C",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  

def save_rej_engine_newcheksheet_E148C(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E148C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E148C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E148C_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E148C(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E148C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E148C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E148C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E148C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E148C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E148C.html')
 
 
 
 
 
 
def Engine_Checksheet_E148C(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E148C.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E148C(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt 
def fetch_engine_newchecksheet_E148C(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E148C_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E148C(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb+","+dd
               
               print("yes")
               if engine_division_E148C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E148C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")
               else:
                   engine_division_E148C_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E148C(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E148C(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E148C.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

def forwardws_enginesec_E148C(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
        
 
        date1=request.GET.get("date1")
        
        # if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
        #     forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        # else:    
        forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E148C",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
def forward_engine_E148C(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E148C.html',context)
 
 
def fetchemp_engine_E148C(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

def fetch_enginesec_E148C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E148C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E148C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E148C.html',context)


def forward_enginesec_E148C(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E148C.html',context)
 
 
def fetchemp_enginesec_E148C(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def Engine_Newchecksheetthird_E148C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

       return render(request,'Engine_Division/Engine_Newchecksheetthird_E148C.html',context)
 
def fetch_enginethird_E148C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E148C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def return_to_user_by_wm_E148C(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def return_to_user_by_cqam(request):
    if request.method=="POST" and request.is_ajax():
        cc = request.POST.get('asmb')
        cuser=request.user
        empno=request.POST.get("empno")
        esn=request.POST.get("esn")
        typee=request.POST.get("type")
        odn=request.POST.get("odn")
        btn=request.POST.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='cqam').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

# Engine E126C

def forwardws_engine_E126C(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        asmno=esn+","+typee+","+odn+","+btn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetsec_E126C",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})  

def save_rej_engine_newcheksheet_E126C(request):
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           ediccs=request.POST.get('ediccs')
           print("ediccs",ediccs)
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("cc",cc)
           if cc == "":
               return JsonResponse({'status': 400})
           print("data",date1)
           print("newdata=",list1)
        #    print(type(list1))
           list4=list1.split('],[')
           print("list4",list4)
        #    print(type(list4))
           counter=0
           x=0
           c=1
           c1=2
           c2=3
           c3=5
           vlist=[]
           vlist_desc=[]
           vlist_check=[]
           vlist_remark=[]
           vlist_sno=[]
           vlistRemark=[]
           vlistRemark2=[]
           final=[]
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i == 0:
                   vlist[i]=vlist[i][2:]
               if i==l-1:
                   le = len(vlist[i])
                   vlist[i]=vlist[i][:le-2]
                   
               print("i=",vlist[i])
               list5 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                   if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                   elif k==1:
                       vlist_desc.append(list8[k])
                   elif k==2:
                       if k==le-1:
                           lex = len(list8[k])
                           list8[k]=list8[k][:lex-1]
                           vlist_remark.append("Remark")
                       vlist_check.append(list8[k])
                   elif k==le-1:
                       lex = len(list8[k])
                       list8[k]=list8[k][:lex-1]
                       if list8[k]=="" :
                           vlist_remark.append("Remark")
                       else:
                        vlist_remark.append(list8[k])
                   print("j=",list8[k])
 
           print("vlist_remark",vlist_remark)
           print("vlist_sno",vlist_sno)  
           counter=0  
           count=0
           edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
           
           var_edicc = ediccs.split('","')
           print("ediccs",ediccs)
           le = len(var_edicc)
           eddd = []
           for u in range(0,le):
                if u==0:
                    var_edicc[u]=var_edicc[u][2:]
                if u==le-1:
                    lex = len(var_edicc[u])
                    var_edicc[u]=var_edicc[u][:lex-2]
                eddd.append(var_edicc[u])
           for u in eddd:
               print("EEEEEEEE",u)
 
           for i,j,k,l,m,n,o,p in zip(vlist_desc,vlist_check,vlist_remark,eddd):
               print(i,j,k,l,m,n,o,p)
               count=count+1
            #    ediccc=l['edicc']
            #    print("ediccc",ediccc)
               id = list(engine_division_HHPE14152_trx.objects.values('edipctc').order_by('-edipctc'))
               #keshav
               if len(id):
                   id=id[0]['edipctc']+1
               else:
                   id=1
               print("yes")
               if engine_division_E126C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd, changes_by=change_by).exists():
                   engine_division_E126C_trx.objects.filter(edicc_id=l,  ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by).update(CHECK=j,RMK=k,DateStarted=date1)
               else:
                   engine_division_E126C_trx.objects.create(edipctc=id,CHECK=j,RMK=k,DateStarted=date1, ESL=cc, TYPE=aa, ODN=bb, BTN=dd,edidesc=i,edicc_id=l,changes_by=change_by)  
         
           return JsonResponse({'status': 200})
 
 
 
 
 
 
def fetch_engine_newchecksheet_rej_E126C(request):
       if request.method=="GET" and request.is_ajax():
           print("aagya")
        #    asm_no = request.GET.get('asn')
           esn_no = request.POST.get('cc')
           typee = request.POST.get('aa')
           odn = request.POST.get('bb')
           btn = request.POST.get('dd')
           print("***************",esn_no,typee,odn,btn)
           objx=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
           obj=[]
           for u in objx:
               print(u['edicc'])
            #    ext = engine_division_HHPE14152_trx.objects.filter(ASN=asm_no, edicc=u['edicc'],changes_by="wm",CHECK="no")
               if engine_division_E126C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  edicc=u['edicc'],changes_by="wm",CHECK="no").exists():
                   obj.append(u)
        #    print("-----------------------------------------------------------",asm_no)
           print(")))))))))))))))))))))))))))))))",obj)
           saved_data=list(engine_division_E126C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm",CHECK = "no").values())
           print(saved_data)
           saved_data_wm=list(engine_division_E126C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="wm").values())
           saved_data_cqam=list(engine_division_E126C_trx.objects.filter(ESL=esn_no, TYPE=typee, ODN=odn, BTN=btn ,  changes_by="cqam").values())
           context={
            "obj":obj,
            "saved_data":saved_data,
            "saved_data_wm":saved_data_wm,
            "saved_data_cqam":saved_data_cqam,
            }
           
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)
 
 
 
 
 
 
def Engine_Newchecksheetfourth_E126C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'Engine_Division/Engine_Newchecksheetfourth_E126C.html')
 
 
 
 
 
 
def Engine_Checksheet_E126C(request):
       obj=list(Engine_mst.objects.all().values())
       context={
           "obj":obj,
       }
    #    if request.method =="POST":
    #        print("tool sin submit------------------------------------------------")
    #        submitvalue = request.POST.get('submit')
    #        print("***",submitvalue)
    #        print("yesyes")      
    #        if submitvalue=='PDF':  
    #            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context)
    #            return HttpResponse(pdf,content_type='application/pdf')  
    #        if submitvalue =='submit':
    #            code=obj['Engine_Division_Inspection_code']
    #            print("code",code)
    #            #empname=obj['empname']
       return render(request,'Engine_Division/Engine_Checksheet_E126C.html',context)
 
 
 
 
 
 
def fetch_engine_checksheet_E126C(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
@csrf_exempt 
def fetch_engine_newchecksheet_E126C(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            btn = request.POST.get('btn')
            print("file exist")
            obj=list(engine_division_E126C_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn,BTN=btn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 

@csrf_exempt
def save_engine_newcheksheet_E126C(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           dd=request.POST.get('dd')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb+","+dd
               
               print("yes")
               if engine_division_E126C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).exists():
                   engine_division_E126C_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, BTN=dd,slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")
               else:
                   engine_division_E126C_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, BTN=dd,changes_by=change_by)
                   forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status="Forwarded")  
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
 
 
def change_status_cqam_E126C(request):
    cuser=request.user
    cc=request.GET.get('cc')
    aa=request.GET.get('aa')
    bb=request.GET.get('bb')
    dd=request.GET.get('dd')
    asmno = cc+","+aa+","+bb+","+dd
    forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
    return  JsonResponse({'status': 200})




def Engine_Newchecksheet_E126C(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'Engine_Division/Engine_Newchecksheet_E126C.html',context)
 
 
def fetch_rej_list(request):
    cuser=request.user
    obj2=list(forwarded_applications.objects.filter(status='Returned',user_emp=cuser,changes_by='wm').values().order_by('sno'))
   
    pending_appl=[]
    for i in obj2:
        asm=i['asmbly_no']
        url=i['engine_url']
        date=i['date']
       
        temp={'asm_no':asm,'eng_url':url,"date":date,}
        pending_appl.append(temp)
   
    print("-------------------------",pending_appl)
    context={
        "pending_appl": pending_appl,
    }
    return JsonResponse({'data':context},safe=False)

def forwardws_enginesec_E126C(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
 
        asmno=esn+","+typee+","+odn+","+btn
        
 
        date1=request.GET.get("date1")
        
        # if forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
        #     forwarded_applications.objects.filter(asmbly_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        # else:    
        forwarded_applications.objects.create(asmbly_no=asmno,date=date1,
                engine_url="Engine_Newchecksheetthird_E126C",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications.objects.filter(asmbly_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
 
def forward_engine_E126C(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_engine_E126C.html',context)
 
 
def fetchemp_engine_E126C(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 

def fetch_enginesec_E126C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(engine_division_E126C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def Engine_Newchecksheetsec_E126C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'Engine_Division/Engine_Newchecksheetsec_E126C.html',context)


def forward_enginesec_E126C(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Engine_Division/forward_enginesec_E126C.html',context)
 
 
def fetchemp_enginesec_E126C(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='DYCQAM-II').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)


def Engine_Newchecksheetthird_E126C(request):
       print("yes1")
       obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

       return render(request,'Engine_Division/Engine_Newchecksheetthird_E126C.html',context)
 
def fetch_enginethird_E126C(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj11=list(engine_division_E126C_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj11",obj11)
            for j in obj11:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
                 BTN = j['BTN']
            if obj11==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
                BTN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN,'BTN':BTN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def return_to_user_by_wm_E126C(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('asmb')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        btn=request.GET.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def return_to_user_by_cqam(request):
    if request.method=="POST" and request.is_ajax():
        cc = request.POST.get('asmb')
        cuser=request.user
        empno=request.POST.get("empno")
        esn=request.POST.get("esn")
        typee=request.POST.get("type")
        odn=request.POST.get("odn")
        btn=request.POST.get("btn")
        if esn!=None:
            cc=esn+","+typee+","+odn+","+btn
        forwarded_applications.objects.filter(asmbly_no=cc,user_emp=cuser,changes_by='cqam').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})



#block sheet

# block Machining manual_12cyl

def block_Checksheet_manual_12cyl(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }

       return render(request,'block_Division/block_Checksheet_manual_12cyl.html',context)

def fetch_block_checksheet_manual_12cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def block_Newchecksheet_manual_12cyl(request):
    print("yes1")
    obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'block_Division/block_Newchecksheet_manual_12cyl.html',context)

@csrf_exempt 
def fetch_block_newchecksheet_manual_12cyl(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            print("file exist")
            obj=list(block_division_manual_12cyl_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)

@csrf_exempt
def save_block_newchecksheet_manual_12cyl(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]

           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   

               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb
               print("yes")
               if block_division_manual_12cyl_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, slno=s).exists():
                   block_division_manual_12cyl_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
               else:
                   block_division_manual_12cyl_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, changes_by=change_by)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded') 
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)

def forward_block_manual_12cyl(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_manual_12cyl.html',context)

def fetchemp_block_manual_12cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)

def forwardws_block_manual_12cyl(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        asmno=esn+","+typee+","+odn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,
                engine_url="block_Newchecksheetsec_manual_12cyl",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200}) 

def block_Newchecksheetsec_manual_12cyl(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
   
       return render(request,'block_Division/block_Newchecksheetsec_manual_12cyl.html',context)

def fetch_blocksec_manual_12cyl(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(block_division_manual_12cyl_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)

def forward_blocksec_manual_12cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_blocksec_manual_12cyl.html',context)

def fetchemp_blocksec_manual_12cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)

def forwardws_blocksec_manual_12cyl(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        asmno=esn+","+typee+","+odn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,
                engine_url="block_Newchecksheetthird_manual_12cyl",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})

def block_Newchecksheetthird_manual_12cyl(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }

   
       return render(request,'block_Division/block_Newchecksheetthird_manual_12cyl.html',context)

def return_to_user_by_wm_manual_12cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        if esn!=None:
            cc=esn+","+typee+","+odn
        forwarded_applications_block.objects.filter(boogy_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

def block_Newchecksheetfourth_manual_12cyl(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'block_Division/block_Newchecksheetfourth_manual_12cyl.html')


# block Machining E110A
 
def block_Checksheet_E110A(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }
 
       return render(request,'block_Division/block_Checksheet_E110A.html',context)
 
def fetch_block_checksheet_E110A(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
def block_Newchecksheet_E110A(request):
    print("yes1")
    obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)        
    return render(request,'block_Division/block_Newchecksheet_E110A.html',context)
 
@csrf_exempt 
def fetch_block_newchecksheet_E110A(request):
        if request.method=="POST" and request.is_ajax():
            esn_no = request.POST.get('esn')
            typee = request.POST.get('type')
            odn = request.POST.get('odn')
            print("file exist")
            obj=list(block_division_E110A_trx.objects.filter(ESL=esn_no,TYPE=typee,ODN=odn).values().distinct().order_by('slno'))
            print(obj)
            obj2=[]
            for i in obj:
                sno=i['slno']
                col1=i['col1']
                col2=i['col2']
                col3=i['col3']
                col4=i['col4']
                col5=i['col5']
                col6=i['col6']
                col7=i['col7']
                col8=i['col8']
                obj2.append({'sno':sno,'col1':col1,'col2':col2,'col3':col3,'col4':col4,'col5':col5,'col6':col6,'col7':col7,'col8':col8,})
            context={'obj':obj2,}
            print(context,"")
            return JsonResponse(context)
 
@csrf_exempt
def save_block_newchecksheet_E110A(request):
    try:
       if request.method == "POST" and request.is_ajax():
           cuser=request.user
           print("ahaan")
           list1 = request.POST.get("newdata")
           list2 = request.POST.get("newdata1")
           cc=request.POST.get('cc')
           aa=request.POST.get('aa')
           bb=request.POST.get('bb')
           date1=request.POST.get('date1')
           change_by=request.POST.get('change_by')
           type=request.POST.get('type')
           print("newdata=",list1)
           list7=list1.split(',"$",')
           print("list7",list7)
           vlist=[]
           vlist_sno=[]
           vlist_col1=[]
           vlist_col2=[]
           vlist_col3=[]
           vlist_col4=[]
           vlist_col5=[]
           vlist_col6=[]
           vlist_col7=[]
           vlist_col8=[]
 
           
           for i in list7:
               vlist.append(i)
           l = len(vlist)
           for i in range(0,l):
               if i==0:
                   vlist[i]=vlist[i][1:]
               elif i==l-1:
                   leng=len(vlist[i])
                   vlist[i]=vlist[i][:leng-1]
                   
 
               print("i=",vlist[i])
               list8 =vlist[i].split('","')
 
               le = len(list8)
               for k in range(0,le):
                    if k == 0:
                       list8[k]=list8[k][1:]
                       vlist_sno.append(list8[k])
                    elif k == 1:
                   
                       vlist_col1.append(list8[k])
                    elif k==2:
                       vlist_col2.append(list8[k])
                    elif k==3:
                   
                       vlist_col3.append(list8[k])
                    elif k==4:
                       vlist_col4.append(list8[k])
                   
                    elif k==5:
                       vlist_col5.append(list8[k])
                       
                    elif k==6:
                       vlist_col6.append(list8[k])
                    elif k==7:
                       vlist_col7.append(list8[k])
                    elif k==8:
                       if i!=l-1:
                            leng=len(list8[k])
                            list8[k]=list8[k][:leng-1]
                       vlist_col8.append(list8[k])  
                    print("j=",list8[k])
 
           for s,i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_col1,vlist_col2,vlist_col3,vlist_col4,vlist_col5,vlist_col6,vlist_col7,vlist_col8):
               print(s,i,j,k,l,m,n,o,p)
               asmno=cc+","+aa+","+bb
               print("yes")
               if block_division_E110A_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, slno=s).exists():
                   block_division_E110A_trx.objects.filter(ESL=cc, TYPE=aa, ODN=bb, slno=s).update(DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded')
               else:
                   block_division_E110A_trx.objects.create(slno=s,DateStarted=date1,col1=i,col2=j,col3=k,col4=l,col5=m,col6=n,col7=o,col8=p,ESL=cc, TYPE=aa, ODN=bb, changes_by=change_by)
                   forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='cqam').update(status = 'Forwarded') 
         
           return JsonResponse({'status': 200})
    except Exception as e:
        print("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e)
 
def forward_block_E110A(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_E110A.html',context)
 
def fetchemp_block_E110A(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(empname=empname).values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)
 
def forwardws_block_E110A(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        asmno=esn+","+typee+","+odn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,
                engine_url="block_Newchecksheetsec_E110A",status="Pending",empno=empno,user_emp=cuser,changes_by='wm')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200}) 
 
def block_Newchecksheetsec_E110A(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
   
       return render(request,'block_Division/block_Newchecksheetsec_E110A.html',context)
 
def fetch_blocksec_E110A(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(block_division_mst.objects.all().values().order_by('sno'))
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edidh =i['edidh']
            print("edidh",edidh)
            edidm =i['edidm']
            edids =i['edids']
            print("edids",edids)
            edicc =i['edicc']
            obj1=list(block_division_E110A_trx.objects.filter(edidesc=edids).values().order_by('edipctc'))
            print("obj1",obj1)
            for j in obj1:
                 RMK = j['RMK']
                 CHECK = j['CHECK']
                 ESL = j['ESL']
                 TYPE = j['TYPE']
                 ODN = j['ODN']
            if obj1==[]:
                print("ififififiif-----------------------------------------")  
                RMK = ''
                CHECK = ''
                ESL = ''
                TYPE = ''
                ODN = ''
            temp={'sno':sno,'edidh':edidh,'edidm':edidm,'edids':edids,'edicc':edicc,'RMK':RMK,'CHECK':CHECK,'ESL':ESL,'TYPE':TYPE,'ODN':ODN}  
            sumlist.append(temp)      
        print("sumlist",sumlist)    
        context={'sumlist': sumlist}    
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)
 
def forward_blocksec_E110A(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_blocksec_E110A.html',context)
 
def fetchemp_blocksec_E110A(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
def forwardws_blocksec_E110A(request): 
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        asmno=esn+","+typee+","+odn
        date1=request.GET.get("date1")
        print(asmno,date1)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(date=date1,status="Pending")
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date1,
                engine_url="block_Newchecksheetthird_E110A",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
        forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
def block_Newchecksheetthird_E110A(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
 
       context={
           "obj":obj,
        #    "ASN":ASN
       }
 
   
       return render(request,'block_Division/block_Newchecksheetthird_E110A.html',context)
 
def return_to_user_by_wm_E110A(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        esn=request.GET.get("esn")
        typee=request.GET.get("type")
        odn=request.GET.get("odn")
        if esn!=None:
            cc=esn+","+typee+","+odn
        forwarded_applications_block.objects.filter(boogy_no=cc,user_emp=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
def block_Newchecksheetfourth_E110A(request):
       print("yes1")
       obj=list(block_division_mst.objects.all().values().distinct().order_by('sno'))
       print("object",obj)
       return render(request,'block_Division/block_Newchecksheetfourth_E110A.html')


def IssueNoteCreate_gen():
    d=datetime.datetime.now()
    dd=(str(d.day-1).zfill(2))
    mm=(str(d.month).zfill(2))
    yy=(str(d.year))
    dat=dd+mm+yy
    # dat='06062022'
    print("DATE PARAMETER---",dat)
    import requests
    import json
    url='http://10.30.2.110:9081/EPSApi/mmisGen/GetData'
    # ISSUENOTE of ALL RAILWAYS,0 for IR only 1 day and individual railways 3 days allowed
    # data =  {
    #      "input_type":"WARRANTY_ISUUE_NOTE",
    #      "input":"22~20221029~20221029",
    #      "key_ver":"V3"
    #    }
    # NOT WORKING PARTS of RAILWAYS
    # data =  {"input_type":"WARRANTY_CONSIGNEE_MASTER",
    #    "input":"22",
    #    "key_ver":"V1"}
    #PART DETAILS, 0 for IR only 1 day and individual railways 5 days allowed
    # data =  {
    #     "input_type":"WARRANTY_PART_DTLS",
    #     "input":"22~20220924~20220930",
    #     "key_ver":"V1"
    #    }
    #CONSIGNEE MASTER
    data =  {
       "input_type":"WARRANTY_CONSIGNEE_MASTER",
       "input":"22",
       "key_ver":"V1"
    }
    #RECEIPT DETAILS
    # data = {
    # "input_type":"Warranty_receipt_order",
    # "input":"01~25102022~26102022",
    # "key_ver":"V2"
    # }
    #RECEIPTORDER SN NUMBERS
    # data = {
    # "input_type":"Warranty_receipt_order_sn",
    # "input":"22~26102022~26102022~26102022~26102022",
    # "key_ver":"V2"
    # }

    # payload={'input_type':"BLWBatchCosting",'input':"2107"}
    headers = {"Content-Type": "application/json; charset=utf-8"}
    response = requests.request("POST", url,headers=headers,json=data)
    l_main=response.json() 
    print("response--->",l_main)
    print("DATA--->",l_main['data'])
    l2_main_data=l_main['data']
    cou=len(l2_main_data)
    print("COU--->",len(l2_main_data))   


    print('ins   ',ins,'  update   ',upd)
    # print(lsty)


from apscheduler.schedulers.background import BackgroundScheduler

scheduler = BackgroundScheduler()

scheduler.start()


def take_part_master():
    d=datetime.datetime.now()
    dd=(str(d.day-1).zfill(2))
    mm=(str(d.month).zfill(2))
    yy=(str(d.year))
    dat=dd+mm+yy
    # dat='06062022'
    print("DATE PARAMETER---",dat)
    
    rly=['21']
    for i in rly:
        print(i)
        import requests
        import json
        url='http://10.30.2.110:9081/EPSApi/mmisGen/GetData'
        data =  {
            "input_type":"WARRANTY_PART_DTLS",
            "input":i,
            "key_ver":"V1"
        }
        headers = {"Content-Type": "application/json; charset=utf-8"}
        response = requests.request("POST", url,headers=headers,json=data)
        l_main=response.json() 

        print("response--->",l_main)
        print("DATA--->",l_main['data'])
        l2_main_data=l_main['data']
        cou=len(l2_main_data)
        print("COU--->",len(l2_main_data))

# job = scheduler.add_job(batchandduration, 'cron', year ='*', month='*', day = '*', hour =11, minute = 46, second = 0)
IssuenoteJob = scheduler.add_job(take_part_master, 'cron', year='*', month='*', day='*', hour=9, minute=26, second=55)
print("Scheduler started")




#Block master Manish kr sinha 11 nov 2022
 
def block_master(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        if  submitvalue=='submit':  
            print("yessssss")          
            bdipc=request.POST.get('bdipc')
            print(bdipc)
            bdic=request.POST.get('bdic')  
            print(bdic)
            slno=request.POST.get('slno')  
            print(slno)
            head=request.POST.get('head')  
            print(head)
            bdiop=request.POST.get('bdiop')
            print(bdiop)
            opnsno=request.POST.get('opnsno')
            print(opnsno)
            desc=request.POST.get('desc')
            print(desc)
            sdesc=request.POST.get('sdesc')
            print(sdesc)
            drags=request.POST.get('drags')
            print(drags)
            instused=request.POST.get('instused')
            print(instused)
            holers=request.POST.get('holers')
            print(holers)
            holels=request.POST.get('holels')
            print(holels)
            capsaddle=request.POST.get('capsaddle')
            print(capsaddle)
            bore=request.POST.get('bore')
            print(bore)
            position1=request.POST.get('position1')
            print(position1)
            position2=request.POST.get('position2')
            print(position2)
            ubore=request.POST.get('ubore')
            print(ubore)
            mbore=request.POST.get('mbore')
            print(mbore)
            lbore=request.POST.get('lbore')
            print(lbore)
            cbore=request.POST.get('cbore')
            print(cbore)
            print("yeesss")
            id = list(BLOCK_MASTER.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = BLOCK_MASTER(bdipc=bdipc,bdic_id=bdic,slno=slno,head=head,bdiop=bdiop,opnsno=opnsno,desc=desc,sdesc=sdesc,drags=drags,instused=instused,holers=holers,holels=holels,capsaddle=capsaddle,bore=bore,position1=position1,position2=position2,ubore=ubore,mbore=mbore,lbore=lbore,cbore=cbore,sno=id)
            print("save",sav)
            sav.save()
    print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')
    return render(request,"BLOCK_DIVISION/block_master.html")    
 
def update_master(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        bdipc=request.GET.get('bdipc')
        print(bdipc)
        bdic=request.GET.get('bdic')
        print(bdic)
        slno=request.GET.get('slno')
        print(slno)
        head=request.GET.get('head')  
        print(head)
        bdiop=request.GET.get('bdiop')
        print(bdiop)
        opnsno=request.GET.get('opnsno')
        print(opnsno)
        desc=request.GET.get('desc')
        print(desc)
        sdesc=request.GET.get('sdesc')
        print(sdesc)
        drags=request.GET.get('drags')
        print(drags)
        instused=request.GET.get('instused')
        print(instused)
        holers=request.GET.get('holers')
        print(holers)
        holels=request.GET.get('holels')
        print(holels)
        capsaddle=request.GET.get('capsaddle')
        print(capsaddle)
        bore=request.GET.get('bore')
        print(bore)
        position1=request.GET.get('position1')
        print(position1)
        position2=request.GET.get('position2')
        print(position2)
        ubore=request.GET.get('ubore')
        print(ubore)
        mbore=request.GET.get('mbore')
        print(mbore)
        lbore=request.GET.get('lbore')
        print(lbore)
        cbore=request.GET.get('cbore')
        print(cbore)
 
        print("*",)
        code=0
        if block_division_mst.objects.filter(bdic=bdic).exists():
            print("if",)
            if BLOCK_MASTER.objects.filter(bdipc=bdipc,bdic=bdic).exists():
                print("exit",)
                BLOCK_MASTER.objects.filter(bdipc=bdipc,bdic=bdic).update(slno=slno,head=head,bdiop=bdiop,opnsno=opnsno,desc=desc,sdesc=sdesc,drags=drags,instused=instused,holers=holers,holels=holels,capsaddle=capsaddle,bore=bore,position1=position1,position2=position2,ubore=ubore,mbore=mbore,lbore=lbore,cbore=cbore)
                print("update",)
            else :
                BLOCK_MASTER.objects.create(bdipc=bdipc,bdic_id=bdic,slno=slno,head=head,bdiop=bdiop,opnsno=opnsno,desc=desc,sdesc=sdesc,drags=drags,instused=instused,holers=holers,holels=holels,capsaddle=capsaddle,bore=bore,position1=position1,position2=position2,ubore=ubore,mbore=mbore,lbore=lbore,cbore=cbore)
                print("new",)
        else:
            code=1
       
       
        return JsonResponse({'status': 200,'code':code})
 
 
def delete_master(request):
     if request.method == "GET" and request.is_ajax():
        bdipc=request.GET.get('bdipc')  
        bdic=request.GET.get('bdic')
        sav = BLOCK_MASTER.objects.get(bdipc=bdipc,bdic=bdic)
        sav.delete()
        return JsonResponse({'status': 200})
 
def fetch_master(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=BLOCK_MASTER.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            bdic=i['bdic_id']
            bdipc=i['bdipc']
            slno=i['slno']
            head=i['head']
            bdiop=i['bdiop']
            opnsno=i['opnsno']
            desc=i['desc']
            sdesc=i['sdesc']
            drags=i['drags']
            instused=i['instused']
            holers=i['holers']
            holels=i['holels']
            capsaddle=i['capsaddle']
            bore=i['bore']
            position1=i['position1']
            position2=i['position2']
            ubore=i['ubore']
            mbore=i['mbore']
            lbore=i['lbore']
            cbore=i['cbore']
            temp={'sno':sno,'bdic':bdic,'bdipc':bdipc,'slno':slno,'head':head,'bdiop':bdiop,'opnsno':opnsno,'desc':desc,'sdesc':sdesc,'drags':drags,'instused':instused,'holers':holers,'holels':holels,'capsaddle':capsaddle,'bore':bore,'position1':position1,'position2':position2,'ubore':ubore,'mbore':mbore,'lbore':lbore,'cbore':cbore}  
            sumlist.append(temp)
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)  
 
 
#Block Ccase machined 16 cyl Manish kr sinha 11 nov 2022
 
def fetchblock1(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("drgno***********",id)
        if id in ['CCM1','CCM2','CCM3','CCM4','CCM5','CCM6','CCM7','CCM8','CCM9','CCM10','CCM11','CCM12','CCM13','CCM16']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','drags','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                drags=i['drags']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['drags'],"***********************")
                print(i['instused'],"***********************")
                # obj2=list(BLOCK_MASTER_TRX.objects.filter(bdipc=bdipc).values('obs'))  
                # print("object",obj2)
                # obs=''
                # for j in obj2:
                #     obs=j['obs']
                # if obj2==[]:
                #     print("ififififiif-----------------------------------------")
                #     obs=''                  
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'drags':drags,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
            # sno =  (block_division_mst.objects.filter(bdidg=drgno).values('sno').distinct())[0]
            # sno = sno['sno']
            # if(sno is None):
            #     sno = 1
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
 
        elif  id in ['CCM14']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','bore').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                bore=i['bore']
                print(i['bdipc'],"***********************")
                print(i['bore'],"***********************")      
                temp={'bdipc':bdipc,'bore':bore,}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
        elif  id in ['CCM15']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','position1','position2','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                position1=i['position1']
                position2=i['position2']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['position1'],"***********************")    
                print(i['position2'],"***********************")    
                print(i['instused'],"***********************")    
                temp={'bdipc':bdipc,'position1':position1,'position2':position2,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
        elif id in ['CCM17']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','drags','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                drags=i['drags']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['drags'],"***********************")
                print(i['instused'],"***********************")
                # obj2=list(BLOCK_MASTER_TRX.objects.filter(bdipc=bdipc).values('obs'))  
                # print("object",obj2)
                # obs=''
                # for j in obj2:
                #     obs=j['obs']
                # if obj2==[]:
                #     print("ififififiif-----------------------------------------")
                #     obs=''                  
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'drags':drags,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
            # sno =  (block_division_mst.objects.filter(bdidg=drgno).values('sno').distinct())[0]
            # sno = sno['sno']
            # if(sno is None):
            #     sno = 1
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
       
        elif  id in ['CCM18','CCM19']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','bore','ubore','mbore','lbore','cbore','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                bore=i['bore']
                ubore=i['ubore']
                mbore=i['mbore']
                lbore=i['lbore']
                cbore=i['cbore']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['bore'],"***********************")    
                print(i['ubore'],"***********************")    
                print(i['mbore'],"***********************")    
                print(i['lbore'],"***********************")    
                print(i['cbore'],"***********************")    
                print(i['instused'],"***********************")    
                temp={'bdipc':bdipc,'bore':bore,'ubore':ubore,'mbore':mbore,'lbore':lbore,'cbore':cbore,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
       
        elif id in ['CCM20','CCM21']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','drags','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                drags=i['drags']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['drags'],"***********************")
                print(i['instused'],"***********************")
                # obj2=list(BLOCK_MASTER_TRX.objects.filter(bdipc=bdipc).values('obs'))  
                # print("object",obj2)
                # obs=''
                # for j in obj2:
                #     obs=j['obs']
                # if obj2==[]:
                #     print("ififififiif-----------------------------------------")
                #     obs=''                  
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'drags':drags,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
            # sno =  (block_division_mst.objects.filter(bdidg=drgno).values('sno').distinct())[0]
            # sno = sno['sno']
            # if(sno is None):
            #     sno = 1
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
    return JsonResponse({"success":False}, status=400)  
 
 
 
 
 
def block_ccase_machined_16cyl_checksheet(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }
 
       return render(request,'block_Division/block_ccase_machined_16cyl_checksheet.html',context)
 
def fetch_block_checksheet_ccase_machined_16cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
def block_ccase_machined_16cyl(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        # if submitvalue=='PDF':  
        #     pdf = render_to_pdf('block_inspection1pdf.html')
        #     return HttpResponse(pdf,content_type='application/pdf')  
        # if submitvalue =='submit':
        #     obs=request.POST.get('Observation')
        #     print("***",obs)
        #     date = request.POST.get('date')
        #     print("***date***",date)
        #     won = request.POST.get('won')
        #     print("bogggggggggie number",won)
        #     gmcc = request.POST.get('gmcc')
        #     print("bogggggggggie number",gmcc)
        #     insp = request.POST.get('insp')
        #     print("bogggggggggie number",insp)
        #     id = list(models.BLOCK_MASTER_TRX.objects.values('bdic').order_by('bdic'))
        #     if len(id):
        #         id=id[0]['bdipc']+1
        #     else:
        #         id=1
        #     print("***************id")    
        #     sav = BLOCK_MASTER_TRX(bdic=id,obs=Observation,dateblock=date,won=won,gmcc=gmcc,insp=insp)
        #     sav.save()
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_machined_16cyl.html",context)
 
 
 
def getPrevdata_ccmblock(request):
    try:
        print("jiiii")
        if request.method=="GET" and request.is_ajax():
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            bdic = request.GET.get('bdic')
           
           
            sumlist =[]
            if BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=gmcc, insp=insp).values().distinct().exists():
                obj=BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=gmcc, insp=insp).values().distinct().values()
                for i in obj:
                    bdipc=i['bdipc']
 
                    obs=i['obs']
                    accc=i['accc']
                    accr=i['accr']
                    accl=i['accl']
                    csdc=i['csdc']
                    csdr=i['csdr']
                    csdl=i['csdl']
                    rmk=i['rmk']
                    rmkrs=i['rmkrs']
                    rmkls=i['rmkls']
                    obslsa=i['obslsa']
                    obslsc=i['obslsc']
                    obsrsa=i['obsrsa']
                    obsrsc=i['obsrsc']
                    mfm1=i['mfm1']
                    mfm2=i['mfm2']
                    mfm3=i['mfm3']
                    mfm4=i['mfm4']
                    mfm5=i['mfm5']
                    mfm6=i['mfm6']
                    mfm7=i['mfm7']
                    mfm8=i['mfm8']
                    mfm9=i['mfm9']
                    mfm10=i['mfm10']
                   
                                     
                    temp={'bdipc':bdipc,'obs':obs,'accc':accc,'accr':accr,'accl':accl,'csdc':csdc,'csdr':csdr,'csdl':csdl,'rmk':rmk,'rmkrs':rmkrs,'rmkls':rmkls,'obslsa':obslsa,'obsrsa':obsrsa,'obslsc':obslsc,'obsrsc':obsrsc,'mfm1':mfm1,'mfm2':mfm2,'mfm3':mfm3,'mfm4':mfm4,'mfm5':mfm5,'mfm6':mfm6,'mfm7':mfm7,'mfm8':mfm8,'mfm9':mfm9,'mfm10':mfm10}
                    sumlist.append(temp)
                context = {
                    'sumlist': sumlist
                }
                print("sumlist",sumlist)
               
            else:
                context = {
                    'sumlist': sumlist
                }
           
            return JsonResponse({'data':context})
 
               
    except Exception as e:
        print("this",e)
 
 
def SAVEINSPCCM(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
 
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list4=list1.split('],[')
 
 
            print("list4",list4)
            print(type(list4))
 
            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_obs=[]
            vlist_instused=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_desc.append(list4[k])
                    elif k==2:
                        vlist_obs.append(list4[k])
                    elif k==3:
                        vlist_instused.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        # vlist_instused.append(list4[k])
                    print("j=",list4[k])
   
            print("vlist_obs",vlist_obs)
            print("vlist_sno",vlist_sno)  
           
            for i,j,k, in zip(vlist_desc,vlist_obs,vlist_instused):
                print(i,j,k,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obs=j,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(obs=j,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                   
 
       
               
            return JsonResponse({'status': 200})
 
def SAVEINSPCCM14(request):
    # try:
        print("dsdsdsssd")
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
 
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list7=list1.split('],[')
 
 
            print("list7",list7)
            print(type(list7))
 
            vlist=[]
            vlist_bore=[]
            vlist_accc=[]
            vlist_accr=[]
            vlist_accl=[]
            vlist_csdc=[]
            vlist_csdr=[]
            vlist_csdl=[]
            vlist_rmk=[]
           
            for i in list7:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list7 =vlist[i].split('","')
   
                le = len(list7)
                for k in range(0,le):
                    if k == 0:
                        list7[k]=list7[k][1:]
                        vlist_bore.append(list7[k])
                    elif k==1:
                        vlist_accc.append(list7[k])
                    elif k==2:
                        vlist_accr.append(list7[k])
                    elif k==3:
                        vlist_accl.append(list7[k])
                    elif k==4:
                        vlist_csdc.append(list7[k])
                    elif k==5:
                        vlist_csdr.append(list7[k])
                    elif k==6:
                        vlist_csdl.append(list7[k])
                    elif k==le-1:
                        lex = len(list7[k])
                        list7[k]=list7[k][:lex-1]
                        vlist_rmk.append(list7[k])
                    print("j=",list7[k])
   
            print("vlist_bore",vlist_bore)
            print("vlist_accc",vlist_accc)  
            print("vlist_accr",vlist_accr)  
            print("vlist_accl",vlist_accl)  
            print("vlist_csdc",vlist_csdc)  
            print("vlist_csdr",vlist_csdr)
            print("vlist_csdl",vlist_csdl)
            print("vlist_rmk",vlist_rmk)
           
            for i,j,k,l,m,n,o,p in zip(vlist_bore,vlist_accc,vlist_accr,vlist_accl,vlist_csdc,vlist_csdr,vlist_csdl,vlist_rmk):
                print(i,j,k,l,m,n,o,p)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(accc=j,accr=k,accl=l,csdc=m,csdr=n,csdl=o,rmk=p,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(accc=j,accr=k,accl=l,csdc=m,csdr=n,csdl=o,rmk=p,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                   
 
       
               
            return JsonResponse({'status': 200})
 
def SAVEINSPCCM15(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
            print("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$")

            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list12=list1.split('],[')
 
 
            print("list12",list12)
            print(type(list12))
 
            vlist=[]
            vlist_position1=[]
            vlist_position2=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_mfm7=[]
            vlist_mfm8=[]
            vlist_mfm9=[]
            vlist_mfm10=[]
            vlist_instused=[]
           
           
            for i in list12:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list12 =vlist[i].split('","')
   
                le = len(list12)
                for k in range(0,le):
                    if k == 0:
                        list12[k]=list12[k][1:]
                        vlist_position1.append(list12[k])
                    elif k==1:
                        vlist_position2.append(list12[k])
                    elif k==2:
                        vlist_mfm1.append(list12[k])
                    elif k==3:
                        vlist_mfm2.append(list12[k])
                    elif k==4:
                        vlist_mfm3.append(list12[k])
                    elif k==5:
                        vlist_mfm4.append(list12[k])
                    elif k==6:
                        vlist_mfm5.append(list12[k])
                    elif k==7:
                        vlist_mfm6.append(list12[k])
                    elif k==8:
                        vlist_mfm7.append(list12[k])
                    elif k==9:
                        vlist_mfm8.append(list12[k])
                    elif k==10:
                        vlist_mfm9.append(list12[k])
                    elif k==11:
                        vlist_mfm10.append(list12[k])
                    elif k==le-1:
                        lex = len(list12[k])
                        list12[k]=list12[k][:lex-1]
                        vlist_instused.append(list12[k])
                    print("j=",list12[k])
   
            print("vlist_position1",vlist_position1)
            print("vlist_position2",vlist_position2)
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_mfm5",vlist_mfm5)
            print("vlist_mfm6",vlist_mfm6)
            print("vlist_mfm7",vlist_mfm7)
            print("vlist_mfm8",vlist_mfm8)
            print("vlist_mfm9",vlist_mfm9)
            print("vlist_mfm10",vlist_mfm10)
            print("vlist_instused",vlist_instused)
            # It is working now!
            for i,j,k,l,m,n,o,p,q,u in zip(vlist_position1,vlist_position2,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_mfm8):
                print(i,j,k,l,m,n,o,p)
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=k,mfm2=l,mfm3=m,mfm4=n,mfm5=o,mfm6=p,mfm7=q,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=k,mfm2=l,mfm3=m,mfm4=n,mfm5=o,mfm6=p,mfm7=q,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
            return JsonResponse({'status': 200})
 
def SAVEINSPCCM17(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
 
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list5=list1.split('],[')
 
 
            print("list5",list5)
            print(type(list5))
 
            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_obsrsa=[]
            vlist_obslsa=[]
            vlist_instused=[]
           
            for i in list5:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
   
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_drags.append(list5[k])
                    elif k==3:
                        vlist_obsrsa.append(list5[k])
                    elif k==4:
                        vlist_obslsa.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        vlist_instused.append(list5[k])
                    print("j=",list5[k])
   
            print("vlist_sno",vlist_sno)
            print("vlist_desc",vlist_desc)  
            print("vlist_drags",vlist_drags)  
            print("vlist_obsrsa",vlist_obsrsa)  
            print("vlist_obslsa",vlist_obslsa)
            print("vlist_instused",vlist_instused)
           
            for i,j,k,l,m,n in zip(vlist_sno,vlist_desc,vlist_drags,vlist_obsrsa,vlist_obslsa,vlist_instused):
                print(l,m)
               
                print("yes", m)
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obsrsa=l,obslsa=m,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(obsrsa=l,obslsa=m,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                   
 
       
               
            return JsonResponse({'status': 200})
 
def SAVEINSPCCM18(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
 
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list5=list1.split('],[')
 
 
            print("list5",list5)
            print(type(list5))
 
            vlist=[]
            vlist_bore=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_instused=[]
           
            for i in list5:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
   
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_bore.append(list5[k])
                    elif k==1:
                        vlist_mfm1.append(list5[k])
                    elif k==2:
                        vlist_mfm2.append(list5[k])
                    elif k==3:
                        vlist_mfm3.append(list5[k])
                    elif k==4:
                        vlist_mfm4.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        vlist_instused.append(list5[k])
                    print("j=",list5[k])
   
            print("vlist_bore",vlist_bore)
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_instused",vlist_instused)
           
            for i,j,k,l,m,n in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_instused):
                print(j,k,l,m)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                   
 
       
               
            return JsonResponse({'status': 200})
 
def SAVEINSPCCM20(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            cuser=request.user
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
 
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
 
 
            list5=list1.split('],[')
 
 
            print("list5",list5)
            print(type(list5))
 
            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_rmkrs=[]
            vlist_rmkls=[]
            vlist_instused=[]
           
            for i in list5:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list5 =vlist[i].split('","')
   
                le = len(list5)
                for k in range(0,le):
                    if k == 0:
                        list5[k]=list5[k][1:]
                        vlist_sno.append(list5[k])
                    elif k==1:
                        vlist_desc.append(list5[k])
                    elif k==2:
                        vlist_drags.append(list5[k])
                    elif k==3:
                        vlist_rmkrs.append(list5[k])
                    elif k==4:
                        vlist_rmkls.append(list5[k])
                    elif k==le-1:
                        lex = len(list5[k])
                        list5[k]=list5[k][:lex-1]
                        vlist_instused.append(list5[k])
                    print("j=",list5[k])
   
            print("vlist_sno",vlist_sno)
            print("vlist_desc",vlist_desc)
            print("vlist_drags",vlist_drags)
            print("vlist_rmkrs",vlist_rmkrs)
            print("vlist_rmkls",vlist_rmkls)
            print("vlist_instused",vlist_instused)
           
            for i,j,k,l,m,n in zip(vlist_sno,vlist_desc,vlist_drags,vlist_rmkrs,vlist_rmkls,vlist_instused):
                print(l,m)
               
                print("yes")
                asmno=won+","+gmcc+","+insp
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(rmkrs=l,rmkls=m,dateblock=date,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                else:
                    BLOCK_MASTER_TRX.objects.create(rmkrs=l,rmkls=m,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                   
 
       
               
            return JsonResponse({'status': 200})
 
 
def forward_block_ccase_machined_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_ccase_machined_16cyl.html',context)
   
 
def forwardws_block_ccase_machined_16cyl(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_ccase_machined_16cyl_sec",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})
 
 
def block_ccase_machined_16cyl_sec(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        # if submitvalue=='PDF':  
        #     pdf = render_to_pdf('block_inspection1pdf.html')
        #     return HttpResponse(pdf,content_type='application/pdf')  
        # if submitvalue =='submit':
        #     obs=request.POST.get('Observation')
        #     print("***",obs)
        #     date = request.POST.get('date')
        #     print("***date***",date)
        #     won = request.POST.get('won')
        #     print("bogggggggggie number",won)
        #     gmcc = request.POST.get('gmcc')
        #     print("bogggggggggie number",gmcc)
        #     insp = request.POST.get('insp')
        #     print("bogggggggggie number",insp)
        #     id = list(models.BLOCK_MASTER_TRX.objects.values('bdic').order_by('bdic'))
        #     if len(id):
        #         id=id[0]['bdipc']+1
        #     else:
        #         id=1
        #     print("***************id")    
        #     sav = BLOCK_MASTER_TRX(bdic=id,obs=Observation,dateblock=date,won=won,gmcc=gmcc,insp=insp)
        #     sav.save()
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_machined_16cyl_sec.html",context)
 
 
def block_ccase_machined_16cyl_third(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        # if submitvalue=='PDF':  
        #     pdf = render_to_pdf('block_inspection1pdf.html')
        #     return HttpResponse(pdf,content_type='application/pdf')  
        # if submitvalue =='submit':
        #     obs=request.POST.get('Observation')
        #     print("***",obs)
        #     date = request.POST.get('date')
        #     print("***date***",date)
        #     won = request.POST.get('won')
        #     print("bogggggggggie number",won)
        #     gmcc = request.POST.get('gmcc')
        #     print("bogggggggggie number",gmcc)
        #     insp = request.POST.get('insp')
        #     print("bogggggggggie number",insp)
        #     id = list(models.BLOCK_MASTER_TRX.objects.values('bdic').order_by('bdic'))
        #     if len(id):
        #         id=id[0]['bdipc']+1
        #     else:
        #         id=1
        #     print("***************id")    
        #     sav = BLOCK_MASTER_TRX(bdic=id,obs=Observation,dateblock=date,won=won,gmcc=gmcc,insp=insp)
        #     sav.save()
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_machined_16cyl_third.html",context)
 
 
 
def block_ccase_machined_16cyl_fourth(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        # if submitvalue=='PDF':  
        #     pdf = render_to_pdf('block_inspection1pdf.html')
        #     return HttpResponse(pdf,content_type='application/pdf')  
        # if submitvalue =='submit':
        #     obs=request.POST.get('Observation')
        #     print("***",obs)
        #     date = request.POST.get('date')
        #     print("***date***",date)
        #     won = request.POST.get('won')
        #     print("bogggggggggie number",won)
        #     gmcc = request.POST.get('gmcc')
        #     print("bogggggggggie number",gmcc)
        #     insp = request.POST.get('insp')
        #     print("bogggggggggie number",insp)
        #     id = list(models.BLOCK_MASTER_TRX.objects.values('bdic').order_by('bdic'))
        #     if len(id):
        #         id=id[0]['bdipc']+1
        #     else:
        #         id=1
        #     print("***************id")    
        #     sav = BLOCK_MASTER_TRX(bdic=id,obs=Observation,dateblock=date,won=won,gmcc=gmcc,insp=insp)
        #     sav.save()
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_machined_16cyl_fourth.html",context)
 
 
 
def fetchemp_block_ccase_machined_16cyl(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    empno=list(empmast.objects.filter(role='WM/Inspection-1').values('empno'))[0]
    #empno=obj['empno']
    print("empno888888888888",empno)
    return JsonResponse({'data':empno},safe=False)

 
def fetchemp_blocksec_ccase_16cyl(request):
       print("yes")
       empname=request.GET.get('empname')
       print("yes",empname)
       obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empno'))[0]
       empno=obj['empno']
       print("empno888888888888",empno)
       context={
           "empno":empno,
       }
       return JsonResponse({'data':context},safe=False)
 
def forward_blocksec_ccase_machined_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_ccase_machined_16cyl.html',context)
 
 
def return_to_user_by_wm_machined_16cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        if won!=None:
            cc=won+","+gmcc+","+insp
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='wm').update(status = 'Returned')
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

 
def forwardws_blocksec_ccase_machined_16cyl(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_ccase_machined_16cyl_third",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})

#BLOCK ENIGINE PRAKHAR NEGI 22-12-2021************************************************************************

def Engine1_select1(request):
        return render(request,"Engine_Division/Engine_select.html")  

def Engine_Checksheet1(request):
    obj=list(Engine_mst.objects.all().values())
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")      
        if submitvalue=='PDF':  
            pdf = render_to_pdf('Engine_Division/Engine_Checksheetpdf.html',context) 
            return HttpResponse(pdf,content_type='application/pdf')  
        if submitvalue =='submit':
            code=obj['Engine_Division_Inspection_code']
            print("code",code)
            #empname=obj['empname']
    return render(request,'Engine_Division/Engine_Checksheet1.html',context)

def Engine_newchecksheet1(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    context={
        "obj":obj,
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)
        
    return render(request,'Engine_Division/Newchecksheet1.html',context)     


def forward_engine1(request):
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }
    return render(request,'Engine_Division/engine1_forward.html',context)

def fetchemp_engine1(request):
    print("yes")
    empname=request.GET.get('empname')
    print("yes",empname)
    obj=list(empmast.objects.filter(role='WM/Inspection-1').values('empno'))[0]
    empno=obj['empno']
    print("empno888888888888",empno)
    context={
        "empno":empno,
    }
    return JsonResponse({'data':context},safe=False)


def forwardws_engine1(request):  
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(engine_division_trx.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="WS")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200}) 

def forwardcqam_engine1(request):  
    if request.method == "GET" and request.is_ajax():
        btct=request.GET.get("btct")
        print("btct******************************************8",btct)
        obj=list(engine_division_trx.objects.all().values())
        print("obj1",obj)
        for j in obj:
            sav1=block_division_mst.objects.filter(bdic=btct).update(TICK="cqam")  
            return JsonResponse({'status': 200})     
    return JsonResponse({'status': 200}) 


def fetch_engine1(request):
    if request.method=="GET" and request.is_ajax():
        print("aagya")
        obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
        context={"obj":obj}
        print(obj)
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400) 


def save_engine1(request):
    if request.method == "GET" and request.is_ajax():
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        cc=request.GET.get('cc')
        date=request.GET.get('date')
        print("cc",cc)
        print("data",date)
        print("newdata=",list1)
        print(type(list1))
        list4=list1.split('","')
        print("list4",list4)
        print(type(list4))
        counter=0
        x=0
        c=1
        c1=2
        c2=3
        c3=5
        vlist=[]
        vlist_desc=[]
        vlist_check=[]
        vlist_remark=[]
        vlist_sno=[]
        vlistRemark=[]
        vlistRemark2=[]
        final=[]
        
        for i in list4:
            print("i=",i)
            vlist.append(i)    
            #value_list.append(list4[count])
        print("v",vlist) 

        for i in vlist:
            print("i=",i)
            if i=='':
                break
            if counter==c:
               vlist_desc.append(i)
               c=c+3
            counter=counter+1   
        print("desc",vlist_desc)   
        counter=0   

        for j in vlist:
            if j=='':
                break
            if counter==c1:
                vlist_check.append(j)
                c1=c1+3
            counter=counter+1
        print("vlist_check",vlist_check)  
        counter=0      

        for k in vlist:
            if k=='':
                break
            if counter==c2:
                vlistRemark=k.split('"]')
                final=vlistRemark[0]
                #vlistRemark2=k.split('["')
                #final2=vlistRemark2[1]
                vlist_remark.append(final)
                #final2=final2.split('["')
                #vlist_sno.append(final2)
                c2=c2+3
            counter=counter+1
        print("vlist_remark",vlist_remark)
        print("vlist_sno",vlist_sno)  
        counter=0  
        count=0
        edicc=list(engine_division_mst.objects.values('edicc').order_by('sno'))
        for i,j,k,l in zip(vlist_desc,vlist_check,vlist_remark,edicc):
            print(i,j,k,l)
            count=count+1
            ediccc=l['edicc']
            print("ediccc",ediccc)
            id = list(engine_division_trx.objects.values('edipctc').order_by('-edipctc'))
            if len(id):
                id=id[0]['edipctc']+1
            else:
                id=1
            print("yes")
            sav = engine_division_trx.objects.create(edipctc=id,CHECK=j,RMK1=k,dateblock=date,ASN=cc,edidesc=i,edicc_id=ediccc)  
        return JsonResponse({'status': 200})

def newchecksheet1sec_engine(request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    obj11=list(engine_division_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    ASN=obj11['ASN']
    print("asn",ASN)
        # print("**",obj)
    context={
        "obj":obj,
        "ASN":ASN
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)  

    return render(request,'Engine_Division/Newchecksheet1second.html',context)


def newchecksheet1third_engine( request):
    print("yes1")
    obj=list(engine_division_mst.objects.all().values().distinct().order_by('sno'))
    print("object",obj)
    obj11=list(engine_division_trx.objects.filter(edicc='EDICC1').values('ASN'))[0]
    ASN=obj11['ASN']
    print("asn",ASN)
        # print("**",obj)
    context={
        "obj":obj,
        "ASN":ASN
    }
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submitvalue = request.POST.get('submit')
        print("***",submitvalue)
        print("yesyes")  
        if submitvalue =='submit':
            print("aagya2")
            #empname=obj['empname']    
            Remark=request.POST.get('r1')
            print("r1",Remark)  

    return render(request,'Engine_Division/Newchecksheet1third.html',context) 


def forward_engine1sec(request):
    obj=list(empmast.objects.filter(role='DYCQAM-II').values('empname','empno'))[0]
    empname=obj['empname']
    empno=obj['empno']
    print("empname=",empname)
    print("empno=",empno)
    print("obj",obj)
    context={
        "obj":obj,
        "empname":empname,
        "empno":empno,
    }
    return render(request,'Engine_Division/engine1sec_forward.html',context)   

def EDITINSP_engine1(request):
    if request.method == "GET" and request.is_ajax():
        print("idhrhiche")
        Remark=request.GET.get('remark')
      
        cc=request.GET.get('cc')
       
        date=request.GET.get('date')
        desc=request.GET.get('desc')
        obj1=list(engine_division_mst.objects.filter(bdids=desc).values('edicc').distinct())[0]
        edicc=obj1['edicc']
        print("edicc",edicc)
      
        if engine_division_trx.objects.filter(edicc=edicc).exists():
            sav = engine_division_trx.objects.filter(edicc=edicc).update(RMK1=Remark,dateblock=date,CCN=cc)
            F=0
        else :
            F=1
        return JsonResponse({'data':F})


def fetchlink1(request):
    print("ashcgayigscyiagiy")
    obj=list(block_division_mst.objects.all().values().order_by('sno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        sno=i['sno']
        bdic=i['bdic']
        bdid=i['bdid']
        bdidg=i['bdidg']
        TICK=i['TICK']
        temp={'sno':sno,'bdic':bdic,'bdid':bdid,'bdidg':bdidg,'TICK':TICK}
        sumlist.append(temp)
    context={
        "sumlist":sumlist,
    }
    return JsonResponse({'data':context},safe=False)

    
def Engine1_select2(request):
    return render(request,'Engine_Division/engine1_firstforward.html') 

def Engineschedularforward2(request):
    return render(request,'Engine_Division/engine1_secondforward.html')   


#engine master files Prakhar negi 22-12-2021

def engine_para_mst(request):
       print('hhh')  
       if request.method=='POST':  
           submitvalue = request.POST.get('submit')
           print("***",submitvalue) 
           if  submitvalue=='submit':   
               print("yessssss")           
               edicc=request.POST.get('edicc')
               print(edicc)
               DOA=request.POST.get('DOA')  
               ROA=request.POST.get('ROA')
               PAGENO=request.POST.get('PAGENO')
               VERSIONNO=request.POST.get('VERSIONNO')
               print("yeesss")
               print(VERSIONNO)
               id = list(Engine_mst.objects.values('sno').order_by('-sno'))
               if len(id):
                   id=id[0]['sno']+1
               else:
                   id=1
               sav = Engine_mst(edicc=edicc,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO,sno=id)
               sav.save()
       return render(request,"Engine_Division/Engine_mst.html")  

def update_para_mst_engine(request):
       if request.method == "GET" and request.is_ajax():
           sno=request.GET.get('sno')
           print(sno)
           #print("***",RH)
           edicc=request.GET.get('edicc')
        #    print(edicc)
           #print("***",LH)
           DOA=request.GET.get('DOA')
           print(DOA)
           #print("***",Remark)
           ROA=request.GET.get('ROA')
           print(ROA)
           PAGENO=request.GET.get('PAGENO')
           print(PAGENO)
           VERSIONNO=request.GET.get('VERSIONNO')
           print(VERSIONNO)
           #print("*",boggy)
           #print("***************id")  
           if Engine_mst.objects.filter(edicc=edicc).exists():
               Engine_mst.objects.filter(edicc=edicc).update(sno=sno,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO)
   
           else:
               Engine_mst.objects.create(sno=sno,edicc=edicc,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO)
 
        #    sav = Engine_mst.objects.filter(sno=sno).update(edicc=edicc,DOA=DOA,ROA=ROA,PAGENO=PAGENO,VERSIONNO=VERSIONNO)
   
           return JsonResponse({'status': 200})  
 
 
 

 
def delete_para_mst_engine(request):
       if request.method == "GET" and request.is_ajax():
           edicc=request.GET.get('edicc')  
           sav = Engine_mst.objects.get(edicc=edicc)
           sav.delete()
           return JsonResponse({'status': 200})    


def fetch_para_mst_engine(request):
       if request.method=="GET" and request.is_ajax():
           print("yes12")
           obj=Engine_mst.objects.all().values().distinct().order_by('sno')
           print("obj",obj)
           sumlist =[]
           for i in obj:
               sno =i['sno']
               edicc=i['edicc']
               DOA=i['DOA']
               ROA=i['ROA']
               PAGENO=i['PAGENO']
               VERSIONNO=i['VERSIONNO']
               temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}   
               sumlist.append(temp) 
           print("sum",sumlist)    
           context = {
               'sumlist':sumlist
           }
           return JsonResponse({'data':context},safe=False)
       return JsonResponse({"success":False}, status=400)  


def update_para_mst_engine1(request):
    if request.method == "GET" and request.is_ajax():
        sno=request.GET.get('sno')
        print(sno)
        #print("***",RH)
        edicc=request.GET.get('edicc')
        print(edicc)
        #print("***",LH)
        edidh=request.GET.get('edidh')
        print(edidh)
        #print("***",Remark)
        edidm=request.GET.get('edidm')
        print(edidm)
        edids=request.GET.get('edids')
        print(edids)
        #print("*",boggy)
        #print("***************id")  
        if engine_division_mst.objects.filter(edicc=edicc).exists():
            engine_division_mst.objects.filter(edicc=edicc).update(sno=sno,edidh=edidh,edidm=edidm,edids=edids)
        else :
            engine_division_mst.objects.create(sno=sno,edicc=edicc,edidh=edidh,edidm=edidm,edids=edids)
 
        return JsonResponse({'status': 200})    
 
 
def delete_para_mst_engine1(request):
    if request.method == "GET" and request.is_ajax():
        edicc=request.GET.get('edicc')  
        sav = engine_division_mst.objects.get(edicc=edicc)
        sav.delete()
        return JsonResponse({'status': 200})    
 

def fetch_para_mst_engine1(request):
    if request.method=="GET" and request.is_ajax():
        print("yes12")
        obj=engine_division_mst.objects.all().values().distinct().order_by('sno')
        print("obj",obj)
        sumlist =[]
        for i in obj:
            sno =i['sno']
            edicc=i['edicc']
            print("edicc",edicc)
            edidh=i['edidh']
            print(edidh)
            edidm=i['edidm']
            print(edidm)
            edids=i['edids']
            print(edids)
            temp={'sno':sno,'edicc':edicc,'edidh':edidh,'edidm':edidm,'edids':edids}   
            sumlist.append(temp) 
        print("sum",sumlist)    
        context = {
            'sumlist':sumlist
        }
        return JsonResponse({'data':context},safe=False)
    return JsonResponse({"success":False}, status=400)


def engine1_para_mst(request):
    print('hhh')  
    if request.method=='POST':  
        submitvalue = request.POST.get('submit')
        print("***",submitvalue) 
        if  submitvalue=='submit':   
            print("yessssss")           
            edicc=request.POST.get('edicc')
            print(edicc)
            edidh=request.POST.get('edidh')  
            edidm=request.POST.get('edidm')
            edids=request.POST.get('edids')
            print("yeesss")
            id = list(engine_division_mst.objects.values('sno').order_by('-sno'))
            if len(id):
                id=id[0]['sno']+1
            else:
                id=1
            sav = engine_division_mst(edicc=edicc,edidh=edidh,edidm=edidm,edids=edids,sno=id)
            sav.save()
    return render(request,"Engine_Division/Engine_division_mst.html") 

# ABM (Alco Engine block Machining 06 cyl pt no. 10020330)

def block_Checksheet_ABM(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }

       return render(request,'block_Division/block_Checksheet_ABM.html',context)

def fetch_block_checksheet_ABM(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def block_Newchecksheet_ABM(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Alco Engine Block Machining 06 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheet_ABM.html",context)


def block_inspection_BTCT(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("drgno***********",drgno)
        print(id,"dfgdf*******")
        if id in ['BTCT1']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                print(bdic)
                obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno').order_by('sno'))
                sumlist =[]
                for i in obj1:
                    bdipc=i['bdipc']
                    slno=i['slno']
                    print(i['bdipc'],"***********************")
                    print(i['slno'],"***********************")          
                    temp={'bdipc':bdipc,'slno':slno}  
                    sumlist.append(temp)
                    print("sumlist",sumlist)
                        
                context = {
                    'sumlist': sumlist,
                    
                }
                return JsonResponse({'data':context},safe=False)

        elif  id in ['BTCT2']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                print(bdic)
                obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','instused').order_by('sno'))
                sumlist =[]
                for i in obj1:
                    bdipc=i['bdipc']
                    slno=i['slno']
                    instused=i['instused']
                    print(i['bdipc'],"***********************")
                    print(i['slno'],"***********************")      
                    print(i['instused'],"***********************")      
                    temp={'bdipc':bdipc,'slno':slno,'instused':instused}  
                    sumlist.append(temp)
                    print("sumlist",sumlist)
                    
            
                context = {
                    'sumlist': sumlist,
                
                }
                return JsonResponse({'data':context},safe=False)


    return JsonResponse({"success":False}, status=400)  



def fetchblockABM(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("drgno***********",drgno)
        if id in ['ABM1']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                print(bdic)
                obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno').order_by('sno'))
                sumlist =[]
                for i in obj1:
                    bdipc=i['bdipc']
                    slno=i['slno']
                    print(i['bdipc'],"***********************")
                    print(i['slno'],"***********************")          
                    temp={'bdipc':bdipc,'slno':slno}  
                    sumlist.append(temp)
                    print("sumlist",sumlist)
                        
                context = {
                    'sumlist': sumlist,
                    
                }
                return JsonResponse({'data':context},safe=False)

        elif  id in ['ABM2']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                print(bdic)
                obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','instused').order_by('sno'))
                sumlist =[]
                for i in obj1:
                    bdipc=i['bdipc']
                    slno=i['slno']
                    instused=i['instused']
                    print(i['bdipc'],"***********************")
                    print(i['slno'],"***********************")      
                    print(i['instused'],"***********************")      
                    temp={'bdipc':bdipc,'slno':slno,'instused':instused}  
                    sumlist.append(temp)
                    print("sumlist",sumlist)
                    
            
                context = {
                    'sumlist': sumlist,
                
                }
                return JsonResponse({'data':context},safe=False)

        elif  id in ['ABM3','ABM5','ABM7','ABM12']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','drags','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                drags=i['drags']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")    
                print(i['desc'],"***********************")    
                print(i['drags'],"***********************")    
                print(i['instused'],"***********************")    
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'drags':drags,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif id in ['ABM4']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['instused'],"***********************")
                             
                temp={'bdipc':bdipc,'slno':slno,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                  
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

       
        elif  id in ['ABM6']:
            print("drgno***********",drgno)
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************") 
                temp={'bdipc':bdipc,'slno':slno}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
       
        elif id in ['ABM8','ABM9','ABM14','ABM15','ABM16','ABM17']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','capsaddle','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                capsaddle=i['capsaddle']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['capsaddle'],"***********************")
                print(i['instused'],"***********************")
                                
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'capsaddle':capsaddle,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif id in ['ABM10']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['instused'],"***********************")
                                
                temp={'bdipc':bdipc,'slno':slno,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif id in ['ABM11']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['instused'],"***********************")
                                
                temp={'bdipc':bdipc,'slno':slno,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif id in ['ABM13']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['instused'],"***********************")
                                
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif id in ['ABM18']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
                # obj=obj[0]
            # bdid=obj['bdid']
            # bdic=obj['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc','capsaddle','instused').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                capsaddle=i['capsaddle']
                instused=i['instused']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                print(i['capsaddle'],"***********************")
                print(i['instused'],"***********************")
                                
                temp={'bdipc':bdipc,'slno':slno,'desc':desc,'capsaddle':capsaddle,'instused':instused}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
           
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

    return JsonResponse({"success":False}, status=400)  


def getPrevdata_ABM(request):
    try:
        print("jiiii")
        if request.method=="GET" and request.is_ajax():
            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            bdic = request.GET.get('bdic')
           
           
            sumlist =[]
            if BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=block, insp=type).values().distinct().exists():
                obj=BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=block, insp=type).values().distinct().values()
                for i in obj:
                    bdipc=i['bdipc']

                    obs=i['obs']
                    accc=i['accc']
                    accr=i['accr']
                    accl=i['accl']
                    csdc=i['csdc']
                    csdr=i['csdr']
                    csdl=i['csdl']
                    rmk=i['rmk']
                    rmkrs=i['rmkrs']
                    rmkls=i['rmkls']
                    obslsa=i['obslsa']
                    obslsc=i['obslsc']
                    obsrsa=i['obsrsa']
                    obsrsc=i['obsrsc']
                    mfm1=i['mfm1']
                    mfm2=i['mfm2']
                    mfm3=i['mfm3']
                    mfm4=i['mfm4']
                    mfm5=i['mfm5']
                    mfm6=i['mfm6']
                    mfm7=i['mfm7']
                    mfm8=i['mfm8']
                    mfm9=i['mfm9']
                    mfm10=i['mfm10']
                   
                                     
                    temp={'bdipc':bdipc,'obs':obs,'accc':accc,'accr':accr,'accl':accl,'csdc':csdc,'csdr':csdr,'csdl':csdl,'rmk':rmk,'rmkrs':rmkrs,'rmkls':rmkls,'obslsa':obslsa,'obsrsa':obsrsa,'obslsc':obslsc,'obsrsc':obsrsc,'mfm1':mfm1,'mfm2':mfm2,'mfm3':mfm3,'mfm4':mfm4,'mfm5':mfm5,'mfm6':mfm6,'mfm7':mfm7,'mfm8':mfm8,'mfm9':mfm9,'mfm10':mfm10}
                    sumlist.append(temp)
                context = {
                    'sumlist': sumlist
                }
                print("sumlist",sumlist)
               
            else:
                context = {
                    'sumlist': sumlist
                }
           
            return JsonResponse({'data':context})

               
    except Exception as e:
        print("this",e)


def SAVEINSP_ABM(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list2=list1.split('],[')

            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_rmk=[]
            # vlist_obs=[]
            # vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j in zip(vlist_sno,vlist_rmk):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(rmk=j,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(rmk=j,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM1(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_rmk=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_instused=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_mfm1.append(list4[k])
                    elif k==2:
                        vlist_mfm2.append(list4[k])
                    elif k==3:
                        vlist_mfm3.append(list4[k])
                    elif k==4:
                        vlist_instused.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_rmk",vlist_rmk)
            print("vlist_instused",vlist_instused)
            
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,rmk=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM2(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_mfm1=[]
            vlist_instused=[]
            vlist_rmk=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_desc.append(list4[k])
                    elif k==2:
                        vlist_drags.append(list4[k])
                    elif k==3:
                        vlist_mfm1.append(list4[k])
                    elif k==4:
                        vlist_instused.append(list4[k])
                    # elif k==5:
                    #     vlist_rmk.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            print("vlist_desc",vlist_desc)
            print("vlist_drags",vlist_drags)
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_instused",vlist_instused)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_drags,vlist_mfm1,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=l,rmk=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM3(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_instused=[]
            vlist_rmk=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_mfm1.append(list4[k])
                    elif k==2:
                        vlist_instused.append(list4[k])
                    # elif k==3:
                    #     vlist_mfm1.append(list4[k])
                    # elif k==4:
                    #     vlist_instused.append(list4[k])
                    # elif k==5:
                    #     vlist_rmk.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            # print("vlist_desc",vlist_desc)
            # print("vlist_drags",vlist_drags)
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_instused",vlist_instused)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l, in zip(vlist_sno,vlist_mfm1,vlist_instused,vlist_rmk):
                print(i,j,k,l,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,rmk=l,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,rmk=l,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM4(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_mfm7=[]
            vlist_rmk=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_mfm1.append(list4[k])
                    elif k==2:
                        vlist_mfm2.append(list4[k])
                    elif k==3:
                        vlist_mfm3.append(list4[k])
                    elif k==4:
                        vlist_mfm4.append(list4[k])
                    elif k==5:
                        vlist_mfm5.append(list4[k])
                    elif k==6:
                        vlist_mfm6.append(list4[k])
                    elif k==7:
                        vlist_mfm7.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_mfm5",vlist_mfm5)
            print("vlist_mfm6",vlist_mfm6)
            print("vlist_mfm7",vlist_mfm7)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n,o,p,q, in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_rmk):
                print(i,j,k,l,m,n,o,p,q,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,rmk=q,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,rmk=q,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM5(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
            
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_obs=[]
            vlist_instused=[]
            vlist_rmk=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_desc.append(list4[k])
                    elif k==2:
                        vlist_drags.append(list4[k])
                    elif k==3:
                        vlist_obs.append(list4[k])
                    elif k==4:
                        vlist_instused.append(list4[k])
                    # elif k==5:
                    #     vlist_rmk.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            print("vlist_desc",vlist_desc)
            print("vlist_drags",vlist_drags)
            print("vlist_obs",vlist_obs)
            print("vlist_instused",vlist_instused)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_drags,vlist_obs,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(obs=l,rmk=n,dateblock=date)
                    
                else:
                    BLOCK_MASTER_TRX.objects.create(obs=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                    
                   

       
               
            return JsonResponse({'status': 200})


def SAVEINSP_ABM6(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_slno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_rmk=[]
            vlist_instused=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_slno.append(list4[k])
                    elif k==1:
                        vlist_mfm1.append(list4[k])
                    elif k==2:
                        vlist_mfm2.append(list4[k])
                    elif k==3:
                        vlist_mfm3.append(list4[k])
                    elif k==4:
                        vlist_mfm4.append(list4[k])
                    elif k==5:
                        vlist_mfm5.append(list4[k])
                    elif k==6:
                        vlist_mfm6.append(list4[k])
                    elif k==7:
                        vlist_rmk.append(list4[k])
                        
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list4[k])
                    print("j=",list4[k])
            print("vlist_slno",vlist_slno)  
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_mfm5",vlist_mfm5)
            print("vlist_mfm6",vlist_mfm6)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n,o,p,q, in zip(vlist_slno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_rmk,vlist_instused):
                print(i,j,k,l,m,n,o,p,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,rmk=p,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,rmk=p,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})



def SAVEINSP_ABM7(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_slno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_rmk=[]
            vlist_instused=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_slno.append(list4[k])
                    elif k==1:
                        vlist_mfm1.append(list4[k])
                    elif k==2:
                        vlist_mfm2.append(list4[k])
                    elif k==3:
                        vlist_rmk.append(list4[k])
                        
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list4[k])
                    print("j=",list4[k])
            print("vlist_slno",vlist_slno)  
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m, in zip(vlist_slno,vlist_mfm1,vlist_mfm2,vlist_rmk,vlist_instused):
                print(i,j,k,l,m,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,rmk=l,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,rmk=l,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM8(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_slno=[]
            vlist_desc=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_mfm7=[]
            vlist_instused=[]
            vlist_rmk=[]
            
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_slno.append(list4[k])
                    elif k==1:
                        vlist_desc.append(list4[k])
                    elif k==2:
                        vlist_mfm1.append(list4[k])
                    elif k==3:
                        vlist_mfm2.append(list4[k])
                    elif k==4:
                        vlist_mfm3.append(list4[k])
                    elif k==5:
                        vlist_mfm4.append(list4[k])
                    elif k==6:
                        vlist_mfm5.append(list4[k])
                    elif k==7:
                        vlist_mfm6.append(list4[k])
                    elif k==8:
                        vlist_mfm7.append(list4[k])
                    elif k==9:
                        vlist_instused.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_slno",vlist_slno)  
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_mfm5",vlist_mfm5)
            print("vlist_mfm6",vlist_mfm6)
            print("vlist_mfm7",vlist_mfm7)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n,o,p,q,r,s, in zip(vlist_slno,vlist_desc,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_instused,vlist_rmk,):
                print(i,k,l,m,n,o,p,q,s,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=k,mfm2=l,mfm3=m,mfm4=n,mfm5=o,mfm6=p,mfm7=q,rmk=s,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=k,mfm2=l,mfm3=m,mfm4=n,mfm5=o,mfm6=p,mfm7=q,rmk=s,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   

       
               
            return JsonResponse({'status': 200})

def SAVEINSP_ABM9(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
            cuser=request.user
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            bgno = won+","+block+","+type
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))

            list4=list1.split('],[')

            print("list4",list4)
            # print(type(list4))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_obs=[]
            vlist_instused=[]
            vlist_rmk=[]
           
            for i in list4:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list4 =vlist[i].split('","')
   
                le = len(list4)
                for k in range(0,le):
                    if k == 0:
                        list4[k]=list4[k][1:]
                        vlist_sno.append(list4[k])
                    elif k==1:
                        vlist_desc.append(list4[k])
                    elif k==2:
                        vlist_drags.append(list4[k])
                    elif k==3:
                        vlist_obs.append(list4[k])
                    elif k==4:
                        vlist_instused.append(list4[k])
                    # elif k==5:
                    #     vlist_rmk.append(list4[k])
                    elif k==le-1:
                        lex = len(list4[k])
                        list4[k]=list4[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list4[k])
                    print("j=",list4[k])
            print("vlist_sno",vlist_sno)  
            print("vlist_desc",vlist_desc)
            print("vlist_drags",vlist_drags)
            print("vlist_obs",vlist_obs)
            print("vlist_instused",vlist_instused)
            print("vlist_rmk",vlist_rmk)
            
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_drags,vlist_obs,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(obs=l,rmk=n,dateblock=date)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                else:
                    BLOCK_MASTER_TRX.objects.create(obs=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=bgno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                   

       
               
            return JsonResponse({'status': 200})

def forward_block_ABM(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={"sumlist":sumlist,}

    return render(request, 'BLOCK_DIVISION/forward_ABM.html', context)

def forwardws_block_ABM(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        asmno=won+","+block+","+type
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending",engine_url="block_Newchecksheetsec_ABM")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_Newchecksheetsec_ABM",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})

def block_Newchecksheetsec_ABM(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Alco Engine Block Machining 06 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetsec_ABM.html",context)

def forward_blocksec_ABM(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_ABM.html',context)

def forwardws_blocksec_ABM(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        asmno=won+","+block+","+type
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_Newchecksheetthird_ABM",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')

    return JsonResponse({'status': 200})

def block_Newchecksheetthird_ABM(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Alco Engine Block Machining 06 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetthird_ABM.html",context)

def return_to_user_by_wm_ABM(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        if won!=None:
            cc=won+","+block+","+type
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='sseblock_shopinspection').update(status = 'Returned', engine_url="block_Newchecksheetfourth_ABM")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})

def block_Newchecksheetfourth_ABM(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Alco Engine Block Machining 06 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetfourth_ABM.html",context)


#block gm ccase machined 16cyl

def block_gm_ccase_machined_16cyl_checksheet(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }
 
       return render(request,'block_Division/block_gm_ccase_machined_16cyl_checksheet.html',context)
 
def fetch_block_gm_ccase_machined_16cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)


def block_gm_ccase_machined_16cyl(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_gm_ccase_machined_16cyl.html",context)

def fetchblockgccm(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("drgno***********",id)
        if id in ['GCCM1','GCCM6','GCCM9']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','desc').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                desc=i['desc']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['desc'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'desc':desc}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
 
        elif  id in ['GCCM2']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','drags').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                drags=i['drags']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['drags'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'drags':drags}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
 
 
        elif  id in ['GCCM3']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','drags','sdesc').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                drags=i['drags']
                sdesc=i['sdesc']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['drags'],"***********************")
                print(i['sdesc'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'drags':drags,'sdesc':sdesc}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)

        elif  id in ['GCCM4','GCCM5']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','bore','desc','drags','sdesc').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                drags=i['drags']
                sdesc=i['sdesc']
                bore=i['bore']
                desc=i['desc']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['drags'],"***********************")
                print(i['sdesc'],"***********************")
                print(i['desc'],"***********************")
                print(i['bore'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'drags':drags,'sdesc':sdesc,'desc':desc,'bore':bore}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM7']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                temp={'bdipc':bdipc,'slno':slno}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM8']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','head').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                head=i['head']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['head'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'head':head}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM10']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','bore','drags').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                bore=i['bore']
                drags=i['drags']
                print(i['bdipc'],"***********************")
                print(i['bore'],"***********************")
                print(i['drags'],"***********************")
                temp={'bdipc':bdipc,'bore':bore,'drags':drags}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM11']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','bore','position1','position2','ubore','mbore','lbore','cbore').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                bore=i['bore']
                ubore=i['ubore']
                mbore=i['mbore']
                lbore=i['lbore']
                cbore=i['cbore']
                position1=i['position1']
                position2=i['position2']
                print(i['bdipc'],"***********************")
                print(i['ubore'],"***********************")
                print(i['mbore'],"***********************")
                print(i['lbore'],"***********************")
                print(i['cbore'],"***********************")
                print(i['bore'],"***********************")
                print(i['position1'],"***********************")
                print(i['position2'],"***********************")
                temp={'bdipc':bdipc,'bore':bore,'ubore':ubore,'mbore':mbore,'lbore':lbore,'cbore':cbore,'position1':position1,'position2':position2}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM12']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','head','bdiop','opnsno').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                head=i['head']
                bdiop=i['bdiop']
                opnsno=i['opnsno']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")
                print(i['head'],"***********************")
                print(i['bdiop'],"***********************")
                print(i['opnsno'],"***********************")
                temp={'bdipc':bdipc,'slno':slno,'head':head,'bdiop':bdiop,'opnsno':opnsno}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM13','GCCM15','GCCM16']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','desc').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                desc=i['desc']
                print(i['bdipc'],"***********************")
                print(i['desc'],"***********************")
                temp={'bdipc':bdipc,'desc':desc}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM14']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','sdesc','drags').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                sdesc=i['sdesc']
                drags=i['drags']
                print(i['bdipc'],"***********************")
                print(i['sdesc'],"***********************")
                print(i['drags'],"***********************")
                temp={'bdipc':bdipc,'sdesc':sdesc,'drags':drags}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        elif  id in ['GCCM17','GCCM18']:
            obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
            # bdic="CCM1"
            print(obj)
            if len(obj)>0:
                bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','bore').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                bore=i['bore']
                print(i['bdipc'],"***********************")
                print(i['bore'],"***********************")
                temp={'bdipc':bdipc,'bore':bore}  
                sumlist.append(temp)
                print("sumlist",sumlist)
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        

    return JsonResponse({"success":False}, status=400)

# def SAVEINSPGCCM3(request):
#     # try:
#         if request.method == "GET" and request.is_ajax():
#             from datetime import datetime
#             cuser=request.user
#             print("ahaan")
#             list1 = request.GET.get("newdata")
#             list2 = request.GET.get("newdata1")
           
#             role=request.GET.get('role')
 
#             won = request.GET.get('won')
#             gmcc = request.GET.get('gmcc')
#             insp = request.GET.get('insp')
#             date=request.GET.get('date')
#             bdic=request.GET.get('bdic')
#             date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
#             print("newdata=",list1)
#             print(type(list1))
#             print("newdata1=",list2)
#             print(type(list2))
#             list3=list1.split('],[')
#             print("list3",list3)
#             print(type(list3))

#             vlist=[]
#             vlist_bore=[]
#             vlist_mfm1=[]
#             vlist_mfm2=[]
#             vlist_mfm3=[]
#             vlist_mfm4=[]
#             vlist_mfm5=[]
#             vlist_mfm6=[]
#             vlist_mfm7=[]
#             vlist_mfm8=[]
#             vlist_mfm9=[]
#             vlist_mfm10=[]
            
#             for i in list3:
#                 vlist.append(i)
#             l=len(vlist)
#             for i in range(0,l):
#                 if i == 0:
#                     vlist[i]=vlist[i][2:]
#                 if i==l-1:
#                     le = len(vlist[i])
#                     vlist[i]=vlist[i][:le-2]
                
#                 print("i=",vlist[i])
#                 list3 =vlist[i].split('","')

#                 le = len(list3)
#                 for k in range(0,le):
#                     if k == 0:
#                         list3[k]=list3[k][1:]
#                         vlist_bore.append(list3[k])
#                     elif k==1:
#                         vlist_mfm1.append(list3[k])
#                     elif k==2:
#                         vlist_mfm2.append(list3[k])
#                     elif k==3:
#                         vlist_mfm3.append(list3[k])
#                     elif k==4:
#                         vlist_mfm4.append(list3[k])
#                     elif k==5:
#                         vlist_mfm5.append(list3[k])
#                     elif k==6:
#                         vlist_mfm6.append(list3[k])
#                     elif k==7:
#                         vlist_mfm7.append(list3[k])
#                     elif k==8:
#                         vlist_mfm8.append(list3[k])
#                     elif k==9:
#                         vlist_mfm9.append(list3[k])
#                     elif k==le-1:
#                         lex = len(list3[k])
#                         list3[k]=list3[k][:lex-1]
#                         # if list5[k]=="" :
#                         #     vlist_remark.append("Remark")
#                         # else:
#                         vlist_mfm10.append(list3[k])
#                     print("j=",list3[k])

#             print("vlist_bore",vlist_bore)
#             print("vlist_mfm1",vlist_mfm1)
#             print("vlist_mfm2",vlist_mfm2)
#             print("vlist_mfm3",vlist_mfm3)
#             print("vlist_mfm4",vlist_mfm4)
#             print("vlist_mfm5",vlist_mfm5)
#             print("vlist_mfm6",vlist_mfm6)
#             print("vlist_mfm7",vlist_mfm7)
#             print("vlist_mfm8",vlist_mfm8)
#             print("vlist_mfm9",vlist_mfm9)
#             print("vlist_mfm10",vlist_mfm10)
            
#             for i,j,k,l,m,n,o,p,q,r,s in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_mfm8,vlist_mfm9,vlist_mfm10):
#                 print(i,j,k,l,m,n,o,p,q,r,s)
#                 asmno=won+","+gmcc+","+insp
#                 print("yes")
#                 if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
#                     BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,mfm10=s,dateblock=date)
#                     forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
#                 else:
#                     BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,mfm10=s,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
#                     forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
#             return JsonResponse({'status': 200})
def SAVEINSPGCCM3(request):
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        print("ahaan")
        list1 = request.GET.get("newdata")
        list2 = request.GET.get("newdata1")
        
        role=request.GET.get('role')

        won = request.GET.get('won')
        gmcc = request.GET.get('gmcc')
        insp = request.GET.get('insp')
        date=request.GET.get('date')
        bdic=request.GET.get('bdic')
        date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
        print("newdata=",list1)
        print(type(list1))
        print("newdata1=",list2)
        print(type(list2))
        list3=list1.split('],[')
        print("list3",list3)
        print(type(list3))

        vlist=[]
        vlist_bore=[]
        vlist_mfm1=[]
        vlist_mfm2=[]
        vlist_mfm3=[]
        vlist_mfm4=[]
        vlist_mfm5=[]
        vlist_mfm6=[]
        vlist_mfm7=[]
        vlist_mfm8=[]
        vlist_mfm9=[]
        vlist_mfm10=[]
        
        for i in list3:
            vlist.append(i)
        l=len(vlist)
        for i in range(0,l):
            if i == 0:
                vlist[i]=vlist[i][2:]
            if i==l-1:
                le = len(vlist[i])
                vlist[i]=vlist[i][:le-2]
            
            print("i=",vlist[i])
            list3 =vlist[i].split('","')

            le = len(list3)
            for k in range(0,le):
                if k == 0:
                    list3[k]=list3[k][1:]
                    vlist_bore.append(list3[k])
                elif k==1:
                    vlist_mfm1.append(list3[k])
                elif k==2:
                    vlist_mfm2.append(list3[k])
                elif k==3:
                    vlist_mfm3.append(list3[k])
                elif k==4:
                    vlist_mfm4.append(list3[k])
                elif k==5:
                    vlist_mfm5.append(list3[k])
                elif k==6:
                    vlist_mfm6.append(list3[k])
                elif k==7:
                    vlist_mfm7.append(list3[k])
                elif k==8:
                    vlist_mfm8.append(list3[k])
                elif k==9:
                    vlist_mfm9.append(list3[k])
                elif k==le-1:
                    lex = len(list3[k])
                    list3[k]=list3[k][:lex-1]
                    # if list5[k]=="" :
                    #     vlist_remark.append("Remark")
                    # else:
                    vlist_mfm10.append(list3[k])
                print("j=",list3[k])

        print("vlist_bore",vlist_bore)
        print("vlist_mfm1",vlist_mfm1)
        print("vlist_mfm2",vlist_mfm2)
        print("vlist_mfm3",vlist_mfm3)
        print("vlist_mfm4",vlist_mfm4)
        print("vlist_mfm5",vlist_mfm5)
        print("vlist_mfm6",vlist_mfm6)
        print("vlist_mfm7",vlist_mfm7)
        print("vlist_mfm8",vlist_mfm8)
        print("vlist_mfm9",vlist_mfm9)
        print("vlist_mfm10",vlist_mfm10)
        
        for i,j,k,l,m,n,o,p,q,r,s in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_mfm8,vlist_mfm9,vlist_mfm10):
            print(i,j,k,l,m,n,o,p,q,r,s)
            asmno=won+","+gmcc+","+insp
            print("yes")
        if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
            BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(rmkrs=l,rmkls=m,dateblock=date,TICK=role)
            forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
        else:
            BLOCK_MASTER_TRX.objects.create(rmkrs=l,rmkls=m,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
            forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                   
 
       
               
    return JsonResponse({'status': 200})
 

def SAVEINSPGCCM2(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
           
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
            print("newdata=",list1)
            print(type(list1))
            print("newdata1=",list2)
            print(type(list2))
            list3=list1.split('],[')


            print("list3",list3)
            print(type(list3))

            vlist=[]
            vlist_bore=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            
            
        
            for i in list3:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                
                print("i=",vlist[i])
                list3 =vlist[i].split('","')

                le = len(list3)
                for k in range(0,le):
                    if k == 0:
                        list3[k]=list3[k][1:]
                        vlist_bore.append(list3[k])
                    elif k==1:
                        vlist_mfm1.append(list3[k])
                    elif k==2:
                        vlist_mfm2.append(list3[k])
                    elif k==3:
                        vlist_mfm3.append(list3[k])
                    elif k==4:
                        vlist_mfm4.append(list3[k])
                    elif k==5:
                        vlist_mfm5.append(list3[k])
                    elif k==le-1:
                        lex = len(list3[k])
                        list3[k]=list3[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_mfm6.append(list3[k])
                    print("j=",list3[k])

            print("vlist_bore",vlist_bore)
            print("vlist_mfm1",vlist_mfm1)
            print("vlist_mfm2",vlist_mfm2)
            print("vlist_mfm3",vlist_mfm3)
            print("vlist_mfm4",vlist_mfm4)
            print("vlist_mfm5",vlist_mfm5)
            print("vlist_mfm6",vlist_mfm6)
            
            
            
            
        
            for i,j,k,l,m,n,o in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6):
                print(i,j,k,l,m,n,o)
            
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,obslsa=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
            return JsonResponse({'status': 200})

def SAVEINSPGCCM1(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list2 = request.GET.get("newdata1")
            cuser = request.user
            role=request.GET.get('role')
 
            won = request.GET.get('won')
            gmcc = request.GET.get('gmcc')
            insp = request.GET.get('insp')
            
            asmno=won+","+gmcc+","+insp
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')
            print("aata h yha pe ya nai")
 
            

            if bdic in ['GCCM1','GCCM6','GCCM9','CMM1','CMM4','CMM7','CMM12']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
 
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_desc=[]
                vlist_obs=[]
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_desc.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_obs.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_sno",vlist_sno)
                print("vlist_desc",vlist_desc)
                print("vlist_obs",vlist_obs)
                
            
                for i,j,k, in zip(vlist_sno,vlist_desc,vlist_obs):
                    print(i,j,k,)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obs=k,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(obs=k,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM2','CMM2']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_obsrsc=[]
                vlist_obslsc=[]
                vlist_drags=[]
                vlist_obsrsa=[]
                vlist_obslsa=[]
                vlist_rmk=[]
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_obsrsc.append(list3[k])
                        elif k==2:
                            vlist_obslsc.append(list3[k])
                        elif k==3:
                            vlist_drags.append(list3[k])
                        elif k==4:
                            vlist_obsrsa.append(list3[k])
                        elif k==5:
                            vlist_obslsa.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_rmk.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_sno",vlist_sno)
                print("vlist_obsrsc",vlist_obsrsc)
                print("vlist_obslsc",vlist_obslsc)
                print("vlist_drags",vlist_drags)
                print("vlist_obsrsa",vlist_obsrsa)
                print("vlist_obslsa",vlist_obslsa)
                print("vlist_rmk",vlist_rmk)
                
            
                for i,j,k,l,m,n,o in zip(vlist_sno,vlist_obsrsc,vlist_obslsc,vlist_drags,vlist_obsrsa,vlist_obslsa,vlist_rmk):
                    print(i,j,k,l,m,n,o)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obsrsc=j,obslsc=k,obsrsa=m,obslsa=n,rmk=o,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(obsrsc=j,obslsc=k,obsrsa=m,obslsa=n,rmk=o,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM3','CMM3']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_obsrsc=[]
                vlist_obslsc=[]
                vlist_drags=[]
                vlist_obsrsa=[]
                vlist_sdesc=[]
                vlist_obslsa=[]
               
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_obsrsc.append(list3[k])
                        elif k==2:
                            vlist_obslsc.append(list3[k])
                        elif k==3:
                            vlist_drags.append(list3[k])
                        elif k==4:
                            vlist_obsrsa.append(list3[k])
                        elif k==5:
                            vlist_sdesc.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_obslsa.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_sno",vlist_sno)
                print("vlist_obsrsc",vlist_obsrsc)
                print("vlist_obslsc",vlist_obslsc)
                print("vlist_drags",vlist_drags)
                print("vlist_obsrsa",vlist_obsrsa)
                print("vlist_sdesc",vlist_sdesc)
                print("vlist_obslsa",vlist_obslsa)
                
                
            
                for i,j,k,l,m,n,o in zip(vlist_sno,vlist_obsrsc,vlist_obslsc,vlist_drags,vlist_obsrsa,vlist_sdesc,vlist_obslsa):
                    print(i,j,k,l,m,n,o)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obsrsc=j,obslsc=k,obsrsa=m,obslsa=o,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(obsrsc=j,obslsc=k,obsrsa=m,obslsa=o,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM4','GCCM5','CMM5','CMM6']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_bore=[]
                vlist_desc=[]
                vlist_mfm1=[]
                vlist_sdesc=[]
                vlist_mfm2=[]
                vlist_drags=[]
                vlist_mfm3=[]
               
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_bore.append(list3[k])
                        elif k==2:
                            vlist_desc.append(list3[k])
                        elif k==3:
                            vlist_mfm1.append(list3[k])
                        elif k==4:
                            vlist_sdesc.append(list3[k])
                        elif k==5:
                            vlist_mfm2.append(list3[k])
                        elif k==6:
                            vlist_drags.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm3.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_sno",vlist_sno)
                print("vlist_bore",vlist_bore)
                print("vlist_desc",vlist_desc)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_sdesc",vlist_sdesc)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_drags",vlist_drags)
                print("vlist_mfm3",vlist_mfm3)
                
                
            
                for i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_bore,vlist_desc,vlist_mfm1,vlist_sdesc,vlist_mfm2,vlist_drags,vlist_mfm3):
                    print(i,j,k,l,m,n,o,p)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=l,mfm2=n,mfm3=p,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=l,mfm2=n,mfm3=p,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM7']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_rmkrs=[]
                vlist_rmkls=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_rmkrs.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_rmkls.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_sno",vlist_sno)
                print("vlist_rmkrs",vlist_rmkrs)
                print("vlist_rmkls",vlist_rmkls)
                
                
                
            
                for i,j,k in zip(vlist_sno,vlist_rmkrs,vlist_rmkls):
                    print(i,j,k)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(rmkrs=j,rmkls=k,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(rmkrs=j,rmkls=k,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM8']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_linearrs=[]
                vlist_rmkrs=[]
                vlist_linearls=[]
                vlist_rmkls=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_linearrs.append(list3[k])
                        elif k==1:
                            vlist_rmkrs.append(list3[k])
                        elif k==2:
                            vlist_linearls.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_rmkls.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_linearrs",vlist_linearrs)
                print("vlist_rmkrs",vlist_rmkrs)
                print("vlist_linearls",vlist_linearls)
                print("vlist_rmkls",vlist_rmkls)
                
                
                
            
                for i,j,k,l in zip(vlist_linearrs,vlist_rmkrs,vlist_linearls,vlist_rmkls):
                    print(i,j,k,l)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(rmkrs=j,rmkls=l,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(rmkrs=j,rmkls=l,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM10','CMM15']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_bore=[]
                vlist_obsrsc=[]
                vlist_obslsc=[]
                vlist_drags=[]
                vlist_obsrsa=[]
                vlist_obslsa=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_bore.append(list3[k])
                        elif k==1:
                            vlist_obsrsc.append(list3[k])
                        elif k==2:
                            vlist_obslsc.append(list3[k])
                        elif k==3:
                            vlist_drags.append(list3[k])
                        elif k==4:
                            vlist_obsrsa.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_obslsa.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_bore",vlist_bore)
                print("vlist_obsrsc",vlist_obsrsc)
                print("vlist_obslsc",vlist_obslsc)
                print("vlist_drags",vlist_drags)
                print("vlist_obsrsa",vlist_obsrsa)
                print("vlist_obslsa",vlist_obslsa)
                
                
                
            
                for i,j,k,l,m,n in zip(vlist_bore,vlist_obsrsc,vlist_obslsc,vlist_drags,vlist_obsrsa,vlist_obslsa):
                    print(i,j,k,l,m,n)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obsrsc=j,obslsc=k,obsrsa=m,obslsa=n,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(obsrsc=j,obslsc=k,obsrsa=m,obslsa=n,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM12']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_bore1=[]
                vlist_mfm1=[]
                vlist_bore2=[]
                vlist_mfm2=[]
                vlist_bore3=[]
                vlist_mfm3=[]
                vlist_bore4=[]
                vlist_mfm4=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_bore1.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_bore2.append(list3[k])
                        elif k==3:
                            vlist_mfm2.append(list3[k])
                        elif k==4:
                            vlist_bore3.append(list3[k])
                        elif k==5:
                            vlist_mfm3.append(list3[k])
                        elif k==6:
                            vlist_bore4.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm4.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_bore1",vlist_bore1)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_bore2",vlist_bore2)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_bore3",vlist_bore3)
                print("vlist_mfm3",vlist_mfm3)
                print("vlist_bore4",vlist_bore4)
                print("vlist_mfm4",vlist_mfm4)
                
                
                
                
            
                for i,j,k,l,m,n,o,p in zip(vlist_bore1,vlist_mfm1,vlist_bore2,vlist_mfm2,vlist_bore3,vlist_mfm3,vlist_bore4,vlist_mfm4):
                    print(i,j,k,l,m,n,o,p)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=l,mfm3=n,mfm4=p,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=l,mfm3=n,mfm4=p,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})

            elif bdic in ['CMM13','CMM14']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_sno=[]
                vlist_rmkrs=[]
                vlist_rmkls=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_sno.append(list3[k])
                        elif k==1:
                            vlist_rmkrs.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_rmkls.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_rmkrs",vlist_rmkrs)
                print("vlist_rmkls",vlist_rmkls)
                
                
                for i,j,k, in zip(vlist_sno,vlist_rmkrs,vlist_rmkls,):
                    print(i,j,k,)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(rmkrs=j,rmkls=k,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(rmkrs=j,rmkls=k,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            
            elif bdic in ['GCCM13','GCCM15','GCCM16','CMM8','CMM10','CMM11']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_desc=[]
                vlist_obsrsc=[]
                vlist_obslsc=[]
                vlist_obsrsa=[]
                vlist_obslsa=[]
            
                
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_desc.append(list3[k])
                        elif k==1:
                            vlist_obsrsc.append(list3[k])
                        elif k==2:
                            vlist_obslsc.append(list3[k])
                        elif k==3:
                            vlist_obsrsa.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_obslsa.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_desc",vlist_desc)
                print("vlist_obsrsc",vlist_obsrsc)
                print("vlist_obslsc",vlist_obslsc)
                print("vlist_obsrsa",vlist_obsrsa)
                print("vlist_obslsa",vlist_obslsa)
                
                
                
                
            
                for i,j,k,l,m in zip(vlist_desc,vlist_obsrsc,vlist_obslsc,vlist_obsrsa,vlist_obslsa):
                    print(i,j,k,l,m)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(obsrsc=j,obslsc=k,obsrsa=l,obslsa=m,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(obsrsc=j,obslsc=k,obsrsa=l,obslsa=m,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM14','CMM9']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_desc1=[]
                vlist_mfm1=[]
                vlist_desc2=[]
                vlist_mfm2=[]
            
                
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_desc1.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_desc2.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm2.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_desc1",vlist_desc1)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_desc2",vlist_desc2)
                print("vlist_mfm2",vlist_mfm2)
                
                
                
                
                
            
                for i,j,k,l in zip(vlist_desc1,vlist_mfm1,vlist_desc2,vlist_mfm2):
                    print(i,j,k,l)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=l,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=l,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM14']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_desc1=[]
                vlist_mfm1=[]
                vlist_desc2=[]
                vlist_mfm2=[]
            
                
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_desc1.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_desc2.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm2.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_desc1",vlist_desc1)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_desc2",vlist_desc2)
                print("vlist_mfm2",vlist_mfm2)
                
                
                
                
                
            
                for i,j,k,l in zip(vlist_desc1,vlist_mfm1,vlist_desc2,vlist_mfm2):
                    print(i,j,k,l)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=l,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=l,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM14']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_desc1=[]
                vlist_mfm1=[]
                vlist_desc2=[]
                vlist_mfm2=[]
            
                
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_desc1.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_desc2.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm2.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_desc1",vlist_desc1)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_desc2",vlist_desc2)
                print("vlist_mfm2",vlist_mfm2)
                
                for i,j,k,l in zip(vlist_desc1,vlist_mfm1,vlist_desc2,vlist_mfm2):
                    print(i,j,k,l)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=l,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=l,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})
            elif bdic in ['GCCM17','CMM17',]:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_bore=[]
                vlist_mfm1=[]
                vlist_mfm2=[]
                vlist_mfm3=[]
                vlist_mfm4=[]
                vlist_mfm5=[]
                vlist_mfm6=[]
                vlist_mfm7=[]
                vlist_mfm8=[]
                vlist_mfm9=[]
                vlist_mfm10=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_bore.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_mfm2.append(list3[k])
                        elif k==3:
                            vlist_mfm3.append(list3[k])
                        elif k==4:
                            vlist_mfm4.append(list3[k])
                        elif k==5:
                            vlist_mfm5.append(list3[k])
                        elif k==6:
                            vlist_mfm6.append(list3[k])
                        elif k==7:
                            vlist_mfm7.append(list3[k])
                        elif k==8:
                            vlist_mfm8.append(list3[k])
                        elif k==9:
                            vlist_mfm9.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm10.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_bore",vlist_bore)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_mfm3",vlist_mfm3)
                print("vlist_mfm4",vlist_mfm4)
                print("vlist_mfm5",vlist_mfm5)
                print("vlist_mfm6",vlist_mfm6)
                print("vlist_mfm7",vlist_mfm7)
                print("vlist_mfm8",vlist_mfm8)
                print("vlist_mfm9",vlist_mfm9)
                print("vlist_mfm10",vlist_mfm10)
                
                for i,j,k,l,m,n,o,p,q,r,s in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_mfm8,vlist_mfm9,vlist_mfm10):
                    print(i,j,k,l,m,n,o,p,q,r,s)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,mfm10=s,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,mfm10=s,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})

            elif bdic in ['CMM16','CMM17',]:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_slno=[]
                vlist_mfm1=[]
                vlist_head=[]
                vlist_mfm2=[]
                vlist_bdiop=[]
                vlist_mfm3=[]
                vlist_opnsno=[]
                vlist_mfm4=[]
                vlist_desc=[]
                vlist_mfm5=[]
                vlist_sdesc=[]
                vlist_mfm6=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_slno.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_head.append(list3[k])
                        elif k==3:
                            vlist_mfm2.append(list3[k])
                        elif k==4:
                            vlist_bdiop.append(list3[k])
                        elif k==5:
                            vlist_mfm3.append(list3[k])
                        elif k==6:
                            vlist_opnsno.append(list3[k])
                        elif k==7:
                            vlist_mfm4.append(list3[k])
                        elif k==8:
                            vlist_desc.append(list3[k])
                        elif k==9:
                            vlist_mfm5.append(list3[k])
                        elif k==10:
                            vlist_sdesc.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm6.append(list3[k])
                        print("j=",list3[k])
    
                # print("vlist_bore",vlist_bore)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_mfm3",vlist_mfm3)
                print("vlist_mfm4",vlist_mfm4)
                print("vlist_mfm5",vlist_mfm5)
                print("vlist_mfm6",vlist_mfm6)
                
                for i,j,k,l,m,n,o,p,q,r,s,t, in zip(vlist_slno,vlist_mfm1,vlist_head,vlist_mfm2,vlist_bdiop,vlist_mfm3,vlist_opnsno,vlist_mfm4,vlist_desc,vlist_mfm5,vlist_sdesc,vlist_mfm6):
                    print(i,j,k,l,m,n,o,p,q,r,s,t)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=l,mfm3=n,mfm4=p,mfm5=r,mfm6=t,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=l,mfm3=n,mfm4=p,mfm5=r,mfm6=t,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})

            elif bdic in ['CMM18']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_bore=[]
                vlist_mfm1=[]
                vlist_mfm2=[]
                vlist_mfm3=[]
                vlist_mfm4=[]
                vlist_mfm5=[]
                vlist_mfm6=[]
                vlist_mfm7=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_bore.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_mfm2.append(list3[k])
                        elif k==3:
                            vlist_mfm3.append(list3[k])
                        elif k==4:
                            vlist_mfm4.append(list3[k])
                        elif k==5:
                            vlist_mfm5.append(list3[k])
                        elif k==6:
                            vlist_mfm6.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm7.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_bore",vlist_bore)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_mfm3",vlist_mfm3)
                print("vlist_mfm4",vlist_mfm4)
                print("vlist_mfm5",vlist_mfm5)
                print("vlist_mfm6",vlist_mfm6)
                print("vlist_mfm7",vlist_mfm7)
                
                for i,j,k,l,m,n,o,p, in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,):
                    print(i,j,k,l,m,n,o,p,)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,dateblock=date)
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                return JsonResponse({'status': 200})

            elif bdic in ['CMM19']:
                print("newdata=",list1)
                print(type(list1))
                print("newdata1=",list2)
                print(type(list2))
                list3=list1.split('],[')
    
    
                print("list3",list3)
                print(type(list3))
    
                vlist=[]
                vlist_bore=[]
                vlist_mfm1=[]
                vlist_mfm2=[]
                vlist_mfm3=[]
                vlist_mfm4=[]
                vlist_mfm5=[]
                vlist_mfm6=[]
                vlist_mfm7=[]
                
            
                for i in list3:
                    vlist.append(i)
                l=len(vlist)
                for i in range(0,l):
                    if i == 0:
                        vlist[i]=vlist[i][2:]
                    if i==l-1:
                        le = len(vlist[i])
                        vlist[i]=vlist[i][:le-2]
                    
                    print("i=",vlist[i])
                    list3 =vlist[i].split('","')
    
                    le = len(list3)
                    for k in range(0,le):
                        if k == 0:
                            list3[k]=list3[k][1:]
                            vlist_bore.append(list3[k])
                        elif k==1:
                            vlist_mfm1.append(list3[k])
                        elif k==2:
                            vlist_mfm2.append(list3[k])
                        elif k==3:
                            vlist_mfm3.append(list3[k])
                        elif k==4:
                            vlist_mfm4.append(list3[k])
                        elif k==5:
                            vlist_mfm5.append(list3[k])
                        elif k==6:
                            vlist_mfm6.append(list3[k])
                        elif k==le-1:
                            lex = len(list3[k])
                            list3[k]=list3[k][:lex-1]
                            # if list5[k]=="" :
                            #     vlist_remark.append("Remark")
                            # else:
                            vlist_mfm7.append(list3[k])
                        print("j=",list3[k])
    
                print("vlist_bore",vlist_bore)
                print("vlist_mfm1",vlist_mfm1)
                print("vlist_mfm2",vlist_mfm2)
                print("vlist_mfm3",vlist_mfm3)
                print("vlist_mfm4",vlist_mfm4)
                print("vlist_mfm5",vlist_mfm5)
                print("vlist_mfm6",vlist_mfm6)
                print("vlist_mfm7",vlist_mfm7)
                
                for i,j,k,l,m,n,o,p, in zip(vlist_bore,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,):
                    print(i,j,k,l,m,n,o,p,)
                
                    print("yes")
                    if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).exists():
                        BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=gmcc, insp=insp,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,dateblock=date)
                        forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                    else:
                        BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,dateblock=date,won=won, gmcc=gmcc, insp=insp, bdipc=i,bdic_id=bdic,TICK=role)
                        print("yahan aaya kya")
                        forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='sse_block_shopinspection(G)',empno=cuser).update(status="Forwarded")
                return JsonResponse({'status': 200})
            
            
            return JsonResponse({'status': 200})


def forwardws_block_gm_ccase_machined_16cyl(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending",engine_url="block_gm_ccase_machined_16cyl_sec")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_gm_ccase_machined_16cyl_sec",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')

        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})

def forward_block_gm_ccase_machined_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_gm_ccase_machined_16cyl.html',context)

def block_gm_ccase_machined_16cyl_sec(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_gm_ccase_machined_16cyl_sec.html",context)

def block_gm_ccase_machined_16cyl_third(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_gm_ccase_machined_16cyl_third.html",context)

def block_gm_ccase_machined_16cyl_fourth(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM GM Crankcase Machined 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_gm_ccase_machined_16cyl_fourth.html",context)


 
def forward_blocksec_gm_ccase_machined_16cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_gm_ccase_machined_16cyl.html',context)
 
def forwardws_blocksec_gm_ccase_machined_16cyl(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_gm_ccase_machined_16cyl_third",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})

def return_to_user_by_wm_machined_gm_ccm_16cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        if won!=None:
            cc=won+","+gmcc+","+insp
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Returned',engine_url="block_gm_ccase_machined_16cyl_fourth")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def help_menu1(request):
        context={}
        return render(request, "Block_Division/help_menu1.html", context)



################################   saket

def block_Checksheet_BM16(request):
    obj=list(Block_Mst.objects.all().values())
    context={
        "obj":obj,
        }
    return render(request,'block_Division/block_Checksheet_BM16.html',context)


def fetch_block_checksheet_BM16(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def block_Newchecksheet_BM16(request):
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Cylinder Block Machining 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }

    return render(request,'block_Division/block_Newchecksheet_BM16.html',context)


def fetchblock_BM16(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("id",id)
        print("drgno***********",drgno)
        # id in ['CBM1','CBM2','CBM3','CBM4','CBM5','CBM6','CBM7','CBM8','CBM9','CBM10','CBM11','CBM13','CBM14','CBM15','CBM16','CBM17','CBM18','CBM19','CBM20']:
        obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
        print("aa rha")
        print(obj)
        if len(obj)>0:
            bdic=obj[0]['bdic']
            print("hjhj",bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','head','bdiop','opnsno','desc','sdesc',
            'drags','instused','holers','holels','capsaddle','bore','position1','position2','ubore','mbore','lbore','cbore').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                head=i['head']
                bdiop=i['bdiop']
                opnsno=i['opnsno']
                desc=i['desc']
                sdesc=i['sdesc']
                drags=i['drags']
                instused=i['instused']
                holers=i['holers']
                holels=i['holels']
                capsaddle=i['capsaddle']
                bore=i['bore']
                position1=i['position1']
                position2=i['position2']
                ubore=i['ubore']
                mbore=i['mbore']
                lbore=i['lbore']
                cbore=i['cbore']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")          

                temp={'bdipc':bdipc,'slno':slno,'head':head,'bdiop':bdiop,'opnsno':opnsno,'desc':desc,'sdesc':sdesc,'drags':drags,'instused':instused,'holers':holers,'holels':holels,'capsaddle':capsaddle,'bore':bore,'position1':position1,'position2':position2,'ubore':ubore,'mbore':mbore,'lbore':lbore,'cbore':cbore}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                    
            context = {
                'sumlist': sumlist,
                
            }
            return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)  



def SAVEINSP_BM_16(request):
    # try:
        if request.method == "GET" and request.is_ajax():
            from datetime import datetime
            print("ahaan")
            list1 = request.GET.get("newdata")
            list = request.GET.get("newdata1")
            cuser = request.user
           
            role=request.GET.get('role')

            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            asmno=won+","+block+","+type
            date=request.GET.get('date')
            bdic=request.GET.get('bdic')
            date = datetime.strptime(date,'%d-%m-%Y').strftime('%Y-%m-%d')

        if bdic in ['CBM1']:
            print("aata hai ya nai")
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_rmk=[]
            # vlist_obs=[]
            # vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j in zip(vlist_sno,vlist_rmk):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(rmk=j,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(rmk=j,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM2']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            print("mfm :",vlist_mfm2)
            vlist_mfm3=[]
            vlist_rmk=[]
            # vlist_obs=[]
            # vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_mfm1.append(list2[k])
                    elif k==2:
                        vlist_mfm2.append(list2[k])
                    elif k==3:
                        vlist_mfm3.append(list2[k])
                    # elif k==4:
                    #     vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m, in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_rmk):
                print(i,j,k,l,m,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,rmk=m,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,rmk=m,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})
        
        elif bdic in ['CBM3','CBM4','CBM13','CBM18']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_mfm1=[]
            vlist_instused=[]
            vlist_rmk=[]
            # vlist_obs=[]
            
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_drags.append(list2[k])
                    elif k==3:
                        vlist_mfm1.append(list2[k])
                    elif k==4:
                        vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_drags,vlist_mfm1,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=l,rmk=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM7']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_drags=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_instused=[]
            vlist_rmk=[]
            # vlist_obs=[]
            # vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_drags.append(list2[k])
                    elif k==3:
                        vlist_mfm1.append(list2[k])
                    elif k==4:
                        vlist_mfm2.append(list2[k])
                    elif k==5:
                        vlist_mfm3.append(list2[k])
                    elif k==6:
                        vlist_mfm4.append(list2[k])
                    elif k==7:
                        vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n,o,p,q in zip(vlist_sno,vlist_desc,vlist_drags,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n,o,p,q,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=l,mfm2=m,mfm3=n,mfm4=o,rmk=q,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=l,mfm2=m,mfm3=n,mfm4=o,rmk=q,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM8']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_holers=[]
            vlist_holels=[]
            vlist_rmk=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_holers.append(list2[k])
                    elif k==3:
                        vlist_holels.append(list2[k])
                    elif k==4:
                        vlist_rmk.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_holers,vlist_holels,vlist_rmk,vlist_instused):
                print(i,j,k,l,m,n,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(rmk=m,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(rmk=m,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM5','CBM6','CBM9','CBM14','CBM15']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_capsaddle=[]
            vlist_obs=[]
            vlist_instused=[]
            vlist_rmk=[]
            # vlist_obs=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_capsaddle.append(list2[k])
                    elif k==3:
                        vlist_obs.append(list2[k])
                    elif k==4:
                        vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n, in zip(vlist_sno,vlist_desc,vlist_capsaddle,vlist_obs,vlist_instused,vlist_rmk):
                print(i,j,k,l,m,n)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(obs=l,rmk=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(obs=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM10','CBM11']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_mfm7=[]
            vlist_rmk=[]
            # vlist_obs=[]
            # vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_mfm1.append(list2[k])
                    elif k==2:
                        vlist_mfm2.append(list2[k])
                    elif k==3:
                        vlist_mfm3.append(list2[k])
                    elif k==4:
                        vlist_mfm4.append(list2[k])
                    elif k==5:
                        vlist_mfm5.append(list2[k])
                    elif k==6:
                        vlist_mfm6.append(list2[k])
                    elif k==7:
                        vlist_mfm7.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n,o,p,q in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_rmk):
                print(i,j,k,l,m,n,o,p,q)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,rmk=q,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,rmk=q,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM12']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_capsaddle=[]
            vlist_mfm1=[]
            vlist_instused=[]
            vlist_rmk=[]
            # vlist_obs=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_capsaddle.append(list2[k])
                    elif k==3:
                        vlist_mfm1.append(list2[k])
                    elif k==4:
                        vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m,n in zip(vlist_sno,vlist_desc,vlist_capsaddle,vlist_mfm1,vlist_instused,vlist_rmk):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=l,rmk=n,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=l,rmk=n,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM16']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_mfm1.append(list2[k])
                    elif k==2:
                        vlist_mfm2.append(list2[k])
                    elif k==3:
                        vlist_mfm3.append(list2[k])
                    elif k==4:
                        vlist_mfm4.append(list2[k])
                    elif k==5:
                        vlist_mfm5.append(list2[k])
                    elif k==6:
                        vlist_mfm6.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_instused",vlist_instused)  
           
            for i,j,k,l,m,n,o,p in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_instused):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM17']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_rmk=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_mfm1.append(list2[k])
                    elif k==2:
                        vlist_mfm2.append(list2[k])
                    elif k==3:
                        vlist_mfm3.append(list2[k])
                    elif k==4:
                        vlist_mfm4.append(list2[k])
                    elif k==5:
                        vlist_mfm5.append(list2[k])
                    elif k==6:
                        vlist_mfm6.append(list2[k])
                    elif k==7:
                        vlist_rmk.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_instused",vlist_instused)  
           
            for i,j,k,l,m,n,o,p,q in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_rmk,vlist_instused):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,rmk=p,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,rmk=p,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM19']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_mfm1=[]
            vlist_mfm2=[]
            vlist_mfm3=[]
            vlist_mfm4=[]
            vlist_mfm5=[]
            vlist_mfm6=[]
            vlist_mfm7=[]
            vlist_mfm8=[]
            vlist_mfm9=[]
            vlist_instused=[]
            vlist_rmk=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_mfm1.append(list2[k])
                    elif k==2:
                        vlist_mfm2.append(list2[k])
                    elif k==3:
                        vlist_mfm3.append(list2[k])
                    elif k==4:
                        vlist_mfm4.append(list2[k])
                    elif k==5:
                        vlist_mfm5.append(list2[k])
                    elif k==6:
                        vlist_mfm6.append(list2[k])
                    elif k==7:
                        vlist_mfm7.append(list2[k])
                    elif k==8:
                        vlist_mfm8.append(list2[k])
                    elif k==9:
                        vlist_mfm9.append(list2[k])
                    elif k==10:
                        vlist_instused.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_rmk.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_instused",vlist_instused)  
           
            for i,j,k,l,m,n,o,p,q,r,s,t in zip(vlist_sno,vlist_mfm1,vlist_mfm2,vlist_mfm3,vlist_mfm4,vlist_mfm5,vlist_mfm6,vlist_mfm7,vlist_mfm8,vlist_mfm9,vlist_instused,vlist_rmk):
                print(j,t)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,rmk=t,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(mfm1=j,mfm2=k,mfm3=l,mfm4=m,mfm5=n,mfm6=o,mfm7=p,mfm8=q,mfm9=r,rmk=t,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM20']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_capsaddle=[]
            vlist_rmk=[]
            # vlist_obs=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_capsaddle.append(list2[k])
                    elif k==3:
                        vlist_rmk.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m in zip(vlist_sno,vlist_desc,vlist_capsaddle,vlist_rmk,vlist_instused):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(rmk=l,dateblock=date)
                else:
                    BLOCK_MASTER_TRX.objects.create(rmk=l,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                   
             
            return JsonResponse({'status': 200})

        elif bdic in ['CBM21']:
            print("newdata=",list1)
            # print(type(list1))
            print("newdata1=",list)
            # print(type(list2))


            list2=list1.split('],[')


            print("list2",list2)
            # print(type(list2))

            vlist=[]
            vlist_sno=[]
            vlist_desc=[]
            vlist_capsaddle=[]
            vlist_rmk=[]
            # vlist_obs=[]
            vlist_instused=[]
           
            for i in list2:
                vlist.append(i)
            l=len(vlist)
            for i in range(0,l):
                if i == 0:
                    vlist[i]=vlist[i][2:]
                if i==l-1:
                    le = len(vlist[i])
                    vlist[i]=vlist[i][:le-2]
                   
                print("i=",vlist[i])
                list2 =vlist[i].split('","')
   
                le = len(list2)
                for k in range(0,le):
                    if k == 0:
                        list2[k]=list2[k][1:]
                        vlist_sno.append(list2[k])
                    elif k==1:
                        vlist_desc.append(list2[k])
                    elif k==2:
                        vlist_capsaddle.append(list2[k])
                    elif k==3:
                        vlist_rmk.append(list2[k])
                    elif k==le-1:
                        lex = len(list2[k])
                        list2[k]=list2[k][:lex-1]
                        # if list5[k]=="" :
                        #     vlist_remark.append("Remark")
                        # else:
                        vlist_instused.append(list2[k])
                    
                    print("j=",list2[k])
   
            
            print("vlist_sno",vlist_sno)
            print("vlist_rmk",vlist_rmk)  
           
            for i,j,k,l,m in zip(vlist_sno,vlist_desc,vlist_capsaddle,vlist_rmk,vlist_instused):
                print(i,j,)
               
                print("yes")
                if BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).exists():
                    BLOCK_MASTER_TRX.objects.filter(bdipc=i,bdic_id=bdic,won=won, gmcc=block, insp=type,TICK=role).update(rmk=l,dateblock=date)
                    forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='cqam',empno=cuser).update(status="Forwarded")
                else:
                    BLOCK_MASTER_TRX.objects.create(rmk=l,dateblock=date,won=won, gmcc=block, insp=type, bdipc=i,bdic_id=bdic,TICK=role)
                    forwarded_applications_block.objects.filter(boogy_no=asmno,changes_by='cqam',empno=cuser).update(status="Forwarded")
                   
             
            return JsonResponse({'status': 200})
        
def getPrevdata_BM16(request):
    try:
        print("jiiii")
        if request.method=="GET" and request.is_ajax():
            won = request.GET.get('won')
            block = request.GET.get('block')
            type = request.GET.get('type')
            bdic = request.GET.get('bdic')
           
           
            sumlist =[]
            if BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=block, insp=type).values().distinct().exists():
                obj=BLOCK_MASTER_TRX.objects.filter(bdic=bdic, won=won, gmcc=block, insp=type).values().distinct().values()
                for i in obj:
                    bdipc=i['bdipc']

                    obs=i['obs']
                    accc=i['accc']
                    accr=i['accr']
                    accl=i['accl']
                    csdc=i['csdc']
                    csdr=i['csdr']
                    csdl=i['csdl']
                    rmk=i['rmk']
                    rmkrs=i['rmkrs']
                    rmkls=i['rmkls']
                    obslsa=i['obslsa']
                    obslsc=i['obslsc']
                    obsrsa=i['obsrsa']
                    obsrsc=i['obsrsc']
                    mfm1=i['mfm1']
                    mfm2=i['mfm2']
                    mfm3=i['mfm3']
                    mfm4=i['mfm4']
                    mfm5=i['mfm5']
                    mfm6=i['mfm6']
                    mfm7=i['mfm7']
                    mfm8=i['mfm8']
                    mfm9=i['mfm9']
                    mfm10=i['mfm10']
                   
                                     
                    temp={'bdipc':bdipc,'obs':obs,'accc':accc,'accr':accr,'accl':accl,'csdc':csdc,'csdr':csdr,'csdl':csdl,'rmk':rmk,'rmkrs':rmkrs,'rmkls':rmkls,'obslsa':obslsa,'obsrsa':obsrsa,'obslsc':obslsc,'obsrsc':obsrsc,'mfm1':mfm1,'mfm2':mfm2,'mfm3':mfm3,'mfm4':mfm4,'mfm5':mfm5,'mfm6':mfm6,'mfm7':mfm7,'mfm8':mfm8,'mfm9':mfm9,'mfm10':mfm10}
                    sumlist.append(temp)
                context = {
                    'sumlist': sumlist
                }
                print("sumlist",sumlist)
               
            else:
                context = {
                    'sumlist': sumlist
                }
           
            return JsonResponse({'data':context})

               
    except Exception as e:
        print("this",e)


def forward_block_BM16(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={"sumlist":sumlist,}

    return render(request, 'BLOCK_DIVISION/forward_block_BM16.html', context)

def forwardws_block_BM16(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        asmno=won+","+block+","+type
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending",engine_url="block_Newchecksheetsec_BM16")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_Newchecksheetsec_BM16",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})


def block_Newchecksheetsec_BM16(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Cylinder Block Machining 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetsec_BM16.html",context)


def forward_blocksec_BM16(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_blocksec_BM16.html',context)

def forwardws_blocksec_BM16(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        asmno=won+","+block+","+type
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_Newchecksheetthird_BM16",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})


def block_Newchecksheetthird_BM16(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Cylinder Block Machining 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetthird_BM16.html",context)


def return_to_user_by_wm_BM16(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        block=request.GET.get("block")
        type=request.GET.get("type")
        if won!=None:
            cc=won+","+block+","+type
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='wm').update(status = 'Returned', engine_url="block_Newchecksheetfourth_BM16")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


def block_Newchecksheetfourth_BM16(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='Cylinder Block Machining 16 Cyl.').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
        
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_Newchecksheetfourth_BM16.html",context)



#BLock Ccase manual machining 12 cyl
 
def block_ccase_manual_12cyl_checksheet(request):
       obj=list(Block_Mst.objects.all().values())
       context={
           "obj":obj,
       }
 
       return render(request,'block_Division/block_ccase_manual_12cyl_checksheet.html',context)
 
def fetch_block_ccase_manual_12cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)
 
 
def block_ccase_manual_12cyl(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Manual 12 Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_manual_12cyl.html",context)
 
def forward_block_ccase_manual_12cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_ccase_manual_12cyl.html',context)
   
 
def forwardws_block_ccase_manual_12cyl(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_ccase_manual_12cyl_sec",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})
 
def forward_block_ccase_manual_12cyl_sec(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_ccase_manual_12cyl_sec.html',context)
 
 
def return_to_user_by_wm_manual_12cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        if won!=None:
            cc=won+","+gmcc+","+insp
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='wm').update(status = 'Returned',engine_url="block_ccase_manual_12cyl_fourth")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})
 
 
def forwardws_blocksec_ccase_manual_12cyl(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='cqam',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_ccase_manual_12cyl_third",status="Pending",empno=cqam_empno,changes_by='cqam',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='wm').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})
 
def block_ccase_manual_12cyl_sec(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Manual 12 Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_manual_12cyl_sec.html",context)
 
def block_ccase_manual_12cyl_third(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Manual 12 Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_manual_12cyl_third.html",context)
 
def block_ccase_manual_12cyl_fourth(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='GM Crankcase Manual 12 Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_ccase_manual_12cyl_fourth.html",context)

#BLOCK CMM MACHINED 12CYL

def block_cmm_12cyl_checksheet(request):
    obj=list(Block_Mst.objects.all().values())
    context={
           "obj":obj,
       }
    return render(request,'block_Division/block_cmm_12cyl_checksheet.html',context)

def fetch_block_cmm_checksheet_12cyl(request):
  if request.method == "GET" and request.is_ajax():
        obj=list(Engine_mst.objects.all().values().order_by('sno'))
        print("objhere",obj)
        sumlist=[]
        for i in obj:
                sno = i['sno']
                edicc= i['edicc']
                DOA= i['DOA']
                ROA= i['ROA']
                PAGENO= i['PAGENO']
                VERSIONNO= i['VERSIONNO']
                temp={'sno':sno,'edicc':edicc,'DOA':DOA,'ROA':ROA,'PAGENO':PAGENO,'VERSIONNO':VERSIONNO}
                sumlist.append(temp)
        context={
            "sumlist":sumlist,
        }
        print("yesyesyeys")
        print("obj",obj)
        print("sumlist",sumlist)
        return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def fetchblock_cmm(request):
    if request.method=="GET" and request.is_ajax():
       
        drgno = request.GET.get('drgno')
        id = request.GET.get('id')
        print("id",id)
        print("drgno***********",drgno)
        # id in ['CBM1','CBM2','CBM3','CBM4','CBM5','CBM6','CBM7','CBM8','CBM9','CBM10','CBM11','CBM13','CBM14','CBM15','CBM16','CBM17','CBM18','CBM19','CBM20']:
        obj=list(block_division_mst.objects.filter(bdic=id).values('bdid','bdic').order_by('sno'))
        print("aa rha")
        print(obj)
        if len(obj)>0:
            bdic=obj[0]['bdic']
            print(bdic)
            obj1=list(BLOCK_MASTER.objects.filter(bdic=bdic).values('bdipc','slno','head','bdiop','opnsno','desc','sdesc',
            'drags','instused','holers','holels','capsaddle','bore','position1','position2','ubore','mbore','lbore','cbore').order_by('sno'))
            sumlist =[]
            for i in obj1:
                bdipc=i['bdipc']
                slno=i['slno']
                head=i['head']
                bdiop=i['bdiop']
                opnsno=i['opnsno']
                desc=i['desc']
                sdesc=i['sdesc']
                drags=i['drags']
                instused=i['instused']
                holers=i['holers']
                holels=i['holels']
                capsaddle=i['capsaddle']
                bore=i['bore']
                position1=i['position1']
                position2=i['position2']
                ubore=i['ubore']
                mbore=i['mbore']
                lbore=i['lbore']
                cbore=i['cbore']
                print(i['bdipc'],"***********************")
                print(i['slno'],"***********************")          

                temp={'bdipc':bdipc,'slno':slno,'head':head,'bdiop':bdiop,'opnsno':opnsno,'desc':desc,'sdesc':sdesc,'drags':drags,'instused':instused,'holers':holers,'holels':holels,'capsaddle':capsaddle,'bore':bore,'position1':position1,'position2':position2,'ubore':ubore,'mbore':mbore,'lbore':lbore,'cbore':cbore}  
                sumlist.append(temp)
                print("sumlist",sumlist)
                   
            context = {
                'sumlist': sumlist,
               
            }
            return JsonResponse({'data':context},safe=False)
        return JsonResponse({"success":False}, status=400)

def block_cmm_12cyl(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM Machined 12Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_cmm_12cyl.html",context)

def forward_block_cmm_12cyl(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'block_Division/forward_block_cmm_12cyl.html',context)
   
 
def forwardws_block_cmm_12cyl(request):  
    print("kkkk")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        print("if")
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,user_emp=cuser,changes_by='sse_block_shopinspection').update(status="Pending")
        else:
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,
                engine_url="block_cmm_12cyl_sec",status="Pending",empno=empno,user_emp=cuser,changes_by='sse_block_shopinspection')
 
        return JsonResponse({'status': 200})    
    return JsonResponse({'status': 200})
 
def forward_block_cmm_12cyl_sec(request):
    obj=list(empmast.objects.filter(role='sse_block_shopinspection(G)').values('empname','empno'))
    print("obj",obj)
    sumlist=[]
    for i in obj:
        empname=i['empname']
        empno = i['empno']
        temp={'empname':empname,'empno':empno}  
        sumlist.append(temp)    
    print("sumlist",sumlist)    
 
 
    context={
        "sumlist":sumlist,
     
    }
    return render(request,'Block_Division/forward_block_cmm_12cyl_sec.html',context)
 
 
def return_to_user_by_wm_machined_cmm_12cyl(request):
    if request.method=="GET" and request.is_ajax():
        cc = request.GET.get('bgno')
        cuser=request.user
        empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        if won!=None:
            cc=won+","+gmcc+","+insp
        forwarded_applications_block.objects.filter(boogy_no=cc,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Returned',engine_url="block_cmm_12cyl_fourth")
        return JsonResponse({'status': 200})
    return JsonResponse({'status': 200})


 
def forwardws_block_cmm_12cyl_sec(request):
    print("iiii")
    if request.method == "GET" and request.is_ajax():
        from datetime import datetime
        cuser=request.user
        cqam_empno=request.GET.get("cqam_empno")
        print(cqam_empno)
        # empno=request.GET.get("empno")
        won=request.GET.get("won")
        gmcc=request.GET.get("gmcc")
        insp=request.GET.get("insp")
        asmno=won+","+gmcc+","+insp
        date=request.GET.get("date")
        date = datetime.strptime(date,'%d-%m-%Y')
        print(asmno,date)
        if forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).exists():
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser).update(status="Pending")
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
        else:    
            forwarded_applications_block.objects.create(boogy_no=asmno,date=date,engine_url="block_cmm_12cyl_third",status="Pending",empno=cqam_empno,changes_by='sse_block_shopinspection(G)',user_emp=cuser)
            forwarded_applications_block.objects.filter(boogy_no=asmno,empno=cuser,changes_by='sse_block_shopinspection').update(status = 'Forwarded')
 
    return JsonResponse({'status': 200})

def block_inspection_BT(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='block_inspection').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_inspection1.html",context)


def block_cmm_12cyl_sec(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM Machined 12Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_cmm_12cyl_sec.html",context)

def block_cmm_12cyl_third(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM Machined 12Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "obj1":obj1,
        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_cmm_12cyl_third.html",context)

def block_cmm_12cyl_fourth(request):
    print("hgbjhcvghj================================")
    obj=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj",obj)
    obj1=block_division_mst.objects.all().values().distinct().order_by('sno')
    print("obj2",obj1)
    count=1
    heading = block_division_mst.objects.filter(bdid='CMM Machined 12Cyl').values('bdic','bdidg').order_by('sno')
    print(heading,"__________________________________")
    ##boggy=request.POST.get('bdidg')  
   
    if request.method =="POST":
        print("tool sin submit------------------------------------------------")
        submit_form = request.POST.get('submit_form')
        print(submit_form)
        print("yesyes")      
       
       
 
    context={
        "obj":obj,
        "Obj1":obj1,

        "count":count,
        #'bdmsd':bdmsd,
        'heading':heading,
    }
    return render(request,"Block_Division/block_cmm_12cyl_fourth.html",context)




def Block_Newchecksheetthird_Alco_16cyl_pdf(request):
    print("karan34634")
    if request.method=="GET":
           print("aagya456")
           asm_no = request.GET.get('asm')
        #    block_no = request.GET.get('')
        #    asm_no= "w123"+","+"127"+","+"16cyl"

           print("-----------------------------------------------------------")
           print(asm_no)
           x=asm_no.split(',')
           print(x)

           obj=list(block_welding_mst.objects.all().values('edids').distinct().order_by('sno'))
            #keshav
            # print(asm_no)

           
           saved_data=block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no ,changes_by="user").values()
       
           saved_data_wm=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no , changes_by="wm").values())
           saved_data_cqam=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no , changes_by="cqam").values())
              
           context={"obj":obj, "saved_data":saved_data,"saved_data_wm":saved_data_wm,"saved_data_cqam":saved_data_cqam,"wo":x[0],"bn":x[1],"tp":x[2],}
           pdf = render_to_pdf('Block_Division/renderpdf.html',context)
           return HttpResponse(pdf,content_type='application/pdf')




#Excel_Report for block_newchecksheetthird_Alco_16cyl.html

def Block_Newchecksheetthird_Alco_16cyl_excel(request):
    fiscalyear.START_MONTH = 4
    fsy=str(fiscalyear.FiscalYear.current())
    fsy=int(fsy[2:6])
    fsy=str(fsy-1)+'-'+str(fsy)
    date=datetime.now()
    date=date.strftime('%d-%m-%Y')
    # records = list(block_division_Alco_16cyl_trx.objects.values().distinct())
    # records = engine_select_mst.objects.all().distinct()
    asm_no = request.GET.get('asm')
    print('asm',asm_no)
   
    records=list(block_division_Alco_16cyl_trx.objects.filter(ASN = asm_no ,changes_by="cqam").values())

    import xlwt
    #print(alldata)
    response = HttpResponse(content_type='application/ms-excel')
    response['Content-Disposition'] = 'filename="Block_Newchecksheetthird_Alco_16cyl.xls"'
    wb = xlwt.Workbook(encoding='utf-8')
    ws = wb.add_sheet('Machines Capacity',cell_overwrite_ok=True)
    alignment = xlwt.Alignment()
    alignment.horz = xlwt.Alignment.HORZ_CENTER
    font_style = xlwt.XFStyle()
    font_style.font.bold = True
    font_style.font.name = "Arial"
    font_style.font.underline = True
    font_style.font.height = 220
    font_style.font.alignment ="Center"
    font_style.alignment = alignment
    font_style.alignment.wrap = True
    font_style1 = xlwt.XFStyle()
    font_style1.font.bold = True
    font_style1.font.name = "Calibri"
    font_style1.font.height = 220
    font_style1.alignment = alignment
    font_style1.alignment.wrap = False
    # blue_style = xlwt.easyxf('pattern: pattern solid, fore_color blue;')
    styleg = xlwt.easyxf( 'font: colour green, bold True;')
    styley = xlwt.easyxf( 'font: colour blue, bold True;')
    styler = xlwt.easyxf( 'font: colour red, bold True;')
    font_style2 = xlwt.XFStyle()
    font_style2.alignment=alignment
    font_style2.alignment.wrap=True
    font_style2.font.name = "Arial"
    font_style2.font.width="FitWidth"
    font_style2.font.alignment ="left"
    # fill_cell = PatternFill(patternType='solid', fgColor='#FCBA03')
    style5 = xlwt.easyxf('pattern: pattern solid, fore_colour lime')
   
    ws.write_merge(0, 0, 0, 2, 'BANARAS LOCOMOTIVE WORKS VARANASI',style5)
    ws.write_merge(1, 1, 0, 2, 'Check list Inspection Report - BG Cyl. Block Weldment',font_style1)

    row_num=2
    columns = ['DESCRIPTION','CHECK','REMARKS']

    for col_num in range(len(columns)):

        ws.write(row_num, col_num, columns[col_num],style5)
        col_num+=1
    mx_count1 = 0
    mx_count2 = 0
    mx_count3 = 0
    row_num=3
    for i in range(len(records)):
        # print("eoghghgh",len(records[i]['edidesc']))
        if(mx_count1 < len(records[i]['edidesc'])):
            mx_count1 = len(records[i]['edidesc'])
        if(mx_count2 < len(records[i]['CHECK'])):
            mx_count2 = len(records[i]['CHECK'])
        if(mx_count3 < len(records[i]['RMK1'])):
            mx_count3 = len(records[i]['RMK1'])

        ws.write(i+3, 0,records[i]['edidesc'],font_style2)
        ws.write(i+3, 1,records[i]['CHECK'],font_style2)
        ws.write(i+3, 2,records[i]['RMK1'],font_style2)

    # starts from cell D3, ends at cell D7
   
    # print("mx_count1",mx_count1)
    ws.col(0).width = mx_count1*100
    ws.col(1).width = mx_count2*1000
    ws.col(2).width = len(columns[2])*500
    # ws.col(1).fill = fill_cell
   


    wb.save(response)
    return response




def finalpdf(request):
#karan_10_03_2023
    if request.method=='GET':
        bgno=request.GET.get('bgno')
        print('bgnooooo',bgno)

        # bgno='363'
        DATE=request.GET.get('date')
        
        print('date',DATE)
        datecur=datetime.now()
        bdic1='BTCT1'
        bdic2='BTCT2'
        bdic3='BTCT3'
        bdic4='BTCT4'
        bdic5='BTCT5'
        bdic6='BTCT6'
        bdic7='BTCT7'

        # obj=list(block_division_mst.objects.filter(bdidg=drgno).values('bdid','bdic').order_by('sno'))
        # if len(obj)>0:
        #     bdic=obj[0]['bdic']
       
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic1,).values('slno','bdipc','bdipdesc','bdipmn','bdipmm'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
           
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
           
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
           
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic1,boggy=bgno, TICK="sse_block_shopinspection(G)").values('bdiptvnr','bdiptvnl','bdiptvr','TICK'))  
        
            print(obj2,"sdjhhhdashf")
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''                    
            temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'fin':fin,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr,}  
            sumlist.append(temp)
       

            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
           
            # bgno = '363'
            # bdic = 'BTCT1'
            # role = 'user'
           
        sumlist1 =[]
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic1,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
            obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic1,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
            for i in obj:
                bdipc=i['bdipc']

                Longspeci1=i['Longspeci1']
                Transspeci1=i['Transspeci1']
                Vertispeci1=i['Vertispeci1']  

                bdiptvnr=i['bdiptvnr']
                bdiptvnl=i['bdiptvnl']
                bdiptvr=i['bdiptvr']
                                   
                temp={'bdipc':bdipc,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
                sumlist1.append(temp)
           
       
        sumlist21 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
       
       
       

        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic2).values('slno','bdipc','bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']

            if i['Longmin']!='':
                Longmin=float(i['Longmin'])
            else:
                Longmin=0

            if i['Longmax']!='':
                Longmax=float(i['Longmax'])
            else:
                Longmax=0

            if i['Transmin']!='':
                Transmin=float(i['Transmin'])
            else:
                Transmin=0
            if i['Transmax']!='':
                Transmax=float(i['Transmax'])
            else:
                Transmax=0

            if i['Vertimin']!='':
                Vertimin=float(i['Vertimin'])
            else:
                Vertimin=0
            if i['Vertimax']!='':
                Vertimax=float(i['Vertimax'])
            else:
                Vertimax=0

           


           
       
            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=abs(sum1-Longmin)
            rem1=round(rem1, 1)
            rem2=abs(sum2-Transmin)
            rem2=round(rem2, 1)
            rem3=abs(sum3-Vertimin)
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
           
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic2,boggy=bgno, TICK="sse_block_shopinspectio(G)").values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
            Longspeci1 = ''
            Transspeci1 = ''
            Vertispeci1 = ''
            bdiptvr=''
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Transspeci1=j['Transspeci1']
                Vertispeci1=j['Vertispeci1']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                Longspeci1 = ''
                Transspeci1 = ''
                Vertispeci1 = ''
                bdiptvr=''
            #till here
            temp={'slno':slno,'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3,'bdiptvr':bdiptvr}  
            sumlist.append(temp)
            print('sumlist count',len(sumlist))
            print('sumlist',sumlist)
            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
            # bgno = '363'
            # bdic = 'BTCT2'
            # role = 'user'
               
            sumlist1 =[]
            if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic2,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
                obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic2,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
                for i in obj:
                    bdipc=i['bdipc']

                    Longspeci1=i['Longspeci1']
                    Transspeci1=i['Transspeci1']
                    Vertispeci1=i['Vertispeci1']  

                    bdiptvnr=i['bdiptvnr']
                    bdiptvnl=i['bdiptvnl']
                    bdiptvr=i['bdiptvr']
                                       
                    temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
                    sumlist1.append(temp)
               
                sumlist22 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
                datecur=datetime.now()
       
       
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic3).values('slno','bdipc','bdipdesc','bdipmn','bdipmm'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
            print(i['bdipmn'],"***********************")
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
       
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
           
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc, boggy=bgno, TICK="sse_block_shopinspectio(G)").values('bdiptvnr','bdiptvnl','bdiptvr'))  
           
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''                    
            temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'fin':fin,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
            sumlist.append(temp)
            print("sumlist",sumlist)

            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
           
           
            sumlist1 =[]
            if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic3,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
                obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic3,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
                for i in obj:
                    bdipc=i['bdipc']

                    Longspeci1=i['Longspeci1']
                    Transspeci1=i['Transspeci1']
                    Vertispeci1=i['Vertispeci1']  

                    bdiptvnr=i['bdiptvnr']
                    bdiptvnl=i['bdiptvnl']
                    bdiptvr=i['bdiptvr']
                                       
                    temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
                    sumlist1.append(temp)
               
           
            # sumlist.extend(sumlist1)
            sumlist23 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
        drgno = request.GET.get('drgno')
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic4).values('slno','bdipc','bdipdesc','bdipmn','bdipmm'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
            print(i['bdipmn'],"***********************")
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
       
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
           
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc, boggy=bgno, TICK="sse_block_shopinspectio(G)").values('bdiptvnr','bdiptvnl','bdiptvr'))  
           
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                print("ififififiif-----------------------------------------")
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''                    
            temp={'slno':slno,'bdipc':bdipc,'bdipdesc':bdipdesc,'fin':fin,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
            sumlist.append(temp)
          

            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
           
           
            sumlist1 =[]
            if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic4,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
                obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic4,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
                for i in obj:
                    bdipc=i['bdipc']

                    Longspeci1=i['Longspeci1']
                    Transspeci1=i['Transspeci1']
                    Vertispeci1=i['Vertispeci1']  

                    bdiptvnr=i['bdiptvnr']
                    bdiptvnl=i['bdiptvnl']
                    bdiptvr=i['bdiptvr']
                                       
                    temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr}  
                    sumlist1.append(temp)
               
           
            # sumlist.extend(sumlist1)
        
        sumlist24 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
      
        #sheet5 starts here.....
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic5).values('slno','bdipc','bdipdesc','Longmin','Longmax','Transmin','Transmax','Vertimin','Vertimax'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']

            if i['Longmin']!='':
                Longmin=float(i['Longmin'])
            else:
                Longmin=0

            if i['Longmax']!='':
                Longmax=float(i['Longmax'])
            else:
                Longmax=0

            if i['Transmin']!='':
                Transmin=float(i['Transmin'])
            else:
                Transmin=0
            if i['Transmax']!='':
                Transmax=float(i['Transmax'])
            else:
                Transmax=0

            if i['Vertimin']!='':
                Vertimin=float(i['Vertimin'])
            else:
                Vertimin=0
            if i['Vertimax']!='':
                Vertimax=float(i['Vertimax'])
            else:
                Vertimax=0  
            sum1=((Longmax+Longmin)/2)
            sum2=((Transmax+Transmin)/2)
            sum3=((Vertimax+Vertimin)/2)
            rem1=abs(sum1-Longmin)
            rem1=round(rem1, 1)
            rem2=abs(sum2-Transmin)
            rem2=round(rem2, 1)
            rem3=abs(sum3-Vertimin)
            rem3=round(rem3, 1)
            sum1=str(sum1)
            rem1=str(rem1)
            sum2=str(sum2)
            rem2=str(rem2)
            sum3=str(sum3)
            rem3=str(rem3)
            fin1=str(sum1 +'+-'+ rem1)
            fin2=str(sum2 +'+-'+ rem2)
            fin3=str(sum3 +'+-'+ rem3)
           
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdiptd=bdipdesc, boggy=bgno,TICK="sse_block_shopinspection(G)").values('Longspeci1','Transspeci1','Vertispeci1','bdiptvr'))  
            Longspeci1 = ''
            Transspeci1 = ''
            Vertispeci1 = ''
            bdiptvr=''
            for j in obj2:
                Longspeci1=j['Longspeci1']
                Transspeci1=j['Transspeci1']
                Vertispeci1=j['Vertispeci1']
                bdiptvr=j['bdiptvr']
            if obj2==[]:
                Longspeci1 = ''
                Transspeci1 = ''
                Vertispeci1 = ''
                bdiptvr=''
            #till here
            temp={'slno':slno,'bdipdesc':bdipdesc,'fin1':fin1,'fin2':fin2,'fin3':fin3}  
            sumlist.append(temp)
       
        bgno = request.GET.get('bgno')
        bdic = request.GET.get('bdic')
        role = request.GET.get('role')
       
        sumlist1 =[]
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic5,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
            obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic5,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
            for i in obj:
                bdipc=i['bdipc']

                Longspeci1=i['Longspeci1']
                Transspeci1=i['Transspeci1']
                Vertispeci1=i['Vertispeci1']  

                bdiptvnr=i['bdiptvnr']
                bdiptvnl=i['bdiptvnl']
                bdiptvr=i['bdiptvr']
                                   
                temp={'bdipc':bdipc,'Longspeci1':Longspeci1,'Transspeci1':Transspeci1,'Vertispeci1':Vertispeci1,'bdiptvr':bdiptvr}  
                sumlist1.append(temp)
           
            sumlist25 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic6).values('slno','bdipc','bdipdesc','bdipmn','bdipmm'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
            # bdipmm=float(i['bdipmm'])
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            # print('fin',fin)
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic1, boggy=bgno, TICK="sse_block_shopinspectio(G)").values('bdiptvnr','bdiptvnl','bdiptvr','bdiptvnrt2','bdiptvnrt3','bdiptvnlt2','bdiptvnlt3'))  
        
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            bdiptvnrt2=''
            bdiptvnrt3=''
            bdiptvnlt2=''
            bdiptvnlt3=''
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
                bdiptvnrt2=j['bdiptvnrt2']
                bdiptvnrt3=j['bdiptvnrt3']
                bdiptvnlt2=j['bdiptvnlt2']
                bdiptvnlt3=j['bdiptvnlt3']
                

            if obj2==[]:
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr=''
                bdiptvnrt2=''
                bdiptvnrt3=''
                bdiptvnlt2=''
                bdiptvnlt3=''                    
            temp={'slno':slno,'bdipdesc':bdipdesc,'fin':fin}  
            sumlist.append(temp)

            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
           
       
           
        sumlist1 =[]
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic6,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
            obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic6,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
            for i in obj:
                bdipc=i['bdipc']

                Longspeci1=i['Longspeci1']
                Transspeci1=i['Transspeci1']
                Vertispeci1=i['Vertispeci1']  

                bdiptvnr=i['bdiptvnr']
                bdiptvnl=i['bdiptvnl']
                bdiptvr=i['bdiptvr']
                bdiptvnrt2=i['bdiptvnrt2']
                bdiptvnrt3=i['bdiptvnrt3']
                bdiptvnlt2=i['bdiptvnlt2']
                bdiptvnlt3=i['bdiptvnlt3']
                                   
                temp={'bdipc':bdipc,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr,'bdiptvnrt2':bdiptvnrt2,'bdiptvnrt3':bdiptvnrt3,'bdiptvnlt2':bdiptvnlt2,'bdiptvnlt3':bdiptvnlt3}  
                sumlist1.append(temp)
           
        # sumlist.extend(sumlist1)
        sumlist26= [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
       
       
        obj1=list(BLOCK_DIV_INSP_PARA_MST.objects.filter(bdic=bdic7).values('slno','bdipc','bdipdesc','bdipmn','bdipmm'))
        sumlist =[]
        for i in obj1:
            slno=i['slno']
            bdipc=i['bdipc']
            bdipdesc=i['bdipdesc']
            if i['bdipmn']!='':
                bdipmn=float(i['bdipmn'])
            else:
                bdipmn=0
            if i['bdipmm']!='':
                bdipmm=float(i['bdipmm'])
            else:
                bdipmm=0
            # bdipmm=float(i['bdipmm'])
            sum=((bdipmm+bdipmn)/2)
            rem=sum-bdipmn
            rem=round(rem, 1)
            sum=str(sum)
            rem=str(rem)
            fin=str(sum +'+-'+ rem)
            # print('fin',fin)
            obj2=list(BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic1, boggy=bgno, TICK="sse_block_shopinspectio(G)").values('bdiptvnr','bdiptvnl','bdiptvr','bdiptvnrt2','bdiptvnrt3','bdiptvnlt2','bdiptvnlt3'))  
            # print("object",obj2)
            bdiptvnr=''
            bdiptvnl=''
            bdiptvr=''
            bdiptvnrt2=''
            bdiptvnrt3=''
            bdiptvnlt2=''
            bdiptvnlt3='' 
            for j in obj2:
                bdiptvnr=j['bdiptvnr']
                bdiptvnl=j['bdiptvnl']
                bdiptvr=j['bdiptvr']
                bdiptvnrt2=j['bdiptvnrt2']
                bdiptvnrt3=j['bdiptvnrt3']
                bdiptvnlt2=j['bdiptvnlt2']
                bdiptvnlt3=j['bdiptvnlt3']
            if obj2==[]:
                bdiptvnr=''
                bdiptvnl=''
                bdiptvr='' 
                bdiptvnrt2=''
                bdiptvnrt3=''
                bdiptvnlt2=''
                bdiptvnlt3=''                   
            temp={'slno':slno,'bdipdesc':bdipdesc,'fin':fin}  
            sumlist.append(temp)

            bgno = request.GET.get('bgno')
            bdic = request.GET.get('bdic')
            role = request.GET.get('role')
           
          
        sumlist1 =[]
        if BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic7,boggy=bgno,TICK="sse_block_shopinspection(G)").exists():
            obj=BLOCK_DIV_INSP_PARA_TRX.objects.filter(bdic=bdic7,boggy=bgno,TICK="sse_block_shopinspection(G)").values().order_by('bdiptc')
            for i in obj:
                bdipc=i['bdipc']

                Longspeci1=i['Longspeci1']
                Transspeci1=i['Transspeci1']
                Vertispeci1=i['Vertispeci1']  

                bdiptvnr=i['bdiptvnr']
                bdiptvnl=i['bdiptvnl']
                bdiptvr=i['bdiptvr']
                bdiptvnrt2=i['bdiptvnrt2']
                bdiptvnrt3=i['bdiptvnrt3']
                bdiptvnlt2=i['bdiptvnlt2']
                bdiptvnlt3=i['bdiptvnlt3']
                                   
                temp={'bdipc':bdipc,'bdiptvnr':bdiptvnr,'bdiptvnl':bdiptvnl,'bdiptvr':bdiptvr,'bdiptvnrt2':bdiptvnrt2,'bdiptvnrt3':bdiptvnrt3,'bdiptvnlt2':bdiptvnlt2,'bdiptvnlt3':bdiptvnlt3}  
                sumlist1.append(temp)
           
       
        # sumlist.extend(sumlist1)
        sumlist27 = [{**sumlist, **sumlist1} for sumlist, sumlist1 in zip(sumlist, sumlist1)]
       
        context = {
            'datecur':datecur,
            'bgno':bgno,

            'sumlist21': sumlist21,
            'sumlist22': sumlist22,
            'sumlist23': sumlist23,
            'sumlist24': sumlist24,
            'sumlist25': sumlist25,
            'sumlist26': sumlist26,
            'sumlist27': sumlist27
        }
        # return render(request,'Block_Division/finalpdf.htmlp',context)
        pdf = render_to_pdf('Block_Division/finalpdf.html',context)
        return HttpResponse(pdf,content_type='application/pdf')


# Changed by vikash kumar


def blockdivision4excel(request):
    print("aagya")
    eng = request.GET.get('eng')
    blo = request.GET.get('blo')
    wo = request.GET.get('wo')
    insp = request.GET.get('insp')
    response = HttpResponse(content_type='application/vnd.ms-excel')
    response['Content-Disposition'] = 'attachment; filename="my_excel_file.xls"'
    wb = xlwt.Workbook(encoding='utf-8')
    alignment = xlwt.Alignment()
    alignment.horz = xlwt.Alignment.HORZ_CENTER
    font_style = xlwt.XFStyle()
    font_style.font.bold = True
    font_style.font.name = "Arial"
    font_style.font.underline = True
    font_style.font.height = 220
    font_style.font.alignment ="Center"
    font_style.alignment = alignment
    font_style.alignment.wrap = True
    font_style1 = xlwt.XFStyle()
    font_style1.font.bold = True
    font_style1.font.name = "Calibri"
    font_style1.font.height = 300
    font_style1.alignment = alignment
    font_style1.alignment.wrap = False
    font_style2 = xlwt.XFStyle()
    font_style2.font.bold = True
    font_style2.font.name = "Calibri"
    font_style2.font.height = 220
    font_style2.alignment = alignment
    font_style2.alignment.wrap = False

    blue_style = xlwt.easyxf('pattern: pattern solid, fore_color blue;')
    styleg = xlwt.easyxf( 'font: colour green, bold True;')
    styley = xlwt.easyxf( 'font: colour blue, bold True;')
    styler = xlwt.easyxf( 'font: colour red, bold True;')

    ws1 = wb.add_sheet('Vikash parker 1')
    ws1.write_merge(0, 0, 0, 3, 'Banaras Loco Works',font_style1)
    ws1.write_merge(1, 1,0, 3, 'Block Division Inspection sheet 1',font_style1)
    ws1.write_merge(2, 2,0, 1, 'Crank Case No. :',font_style2)
    ws1.write_merge(2, 2,2, 3, 'W/O No. :',font_style2)
    ws1.write_merge(3, 3,0, 1, 'Type :',font_style2)
    ws1.write_merge(3, 3,2, 3, 'Name of Inspector :',font_style2)
    ws1.write_merge(4, 4,0, 1, 'Date Started :',font_style2)
    ws1.write_merge(4, 4,2, 3, 'Date Completed :',font_style2)
   
    row_num = 5
    columns = ['Sno','Description','WM Check','WM Remark']
    for col_num in range(len(columns)):
        ws1.write(row_num, col_num, columns[col_num],styleg)
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1. "Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS",t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1 
        join public.dlw_block_division_crankcase_12cyl_trx  t2
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."eng_no"=%s and t2."wo_no"=%s and  t2."Insp_no"=%s where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1."sno",t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para" ;''',[eng,wo,insp])
    result = cursor.fetchall()
 
    r2=6
    for i in range(len(result)):
        ws1.write_merge(r2, r2, 0, 0,result[i][0])
        ws1.write_merge(r2, r2, 1, 1,result[i][2])
        ws1.write_merge(r2, r2, 2, 2,result[i][3])
        ws1.write_merge(r2, r2, 3, 3,result[i][4])
    
        r2+=1
    wb.save(response)
    return response

def blockdivision4pdf(request):
    if request.method=='GET':
        print("aagya")
        eng = request.GET.get('eng')
        blo = request.GET.get('blo')
        wo = request.GET.get('wo')
        insp = request.GET.get('insp')
        date1 = request.GET.get('date1')
        date2 = request.GET.get('date2')

        print("-----------------------------------------------------------")
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1. "Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS",t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1 
        join public.dlw_block_division_crankcase_12cyl_trx  t2
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."eng_no"=%s and t2."wo_no"=%s and  t2."Insp_no"=%s where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1."sno",t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para" ;''',[eng,wo,insp])
    result = cursor.fetchall()
 
    chk = result[0][1]
    data = [('0',chk)]
    for i in range(0,len(result)):
        result[i][2]
        if chk != result[i][1]:
            chk = result[i][1]
            data.append(('0',chk))
            data.append((result[i]))
        else:
            data.append((result[i]))
    result = data
    print(result,"sssssssssssssssss")
    context={'result':result,'eng':eng,"blo":blo, "wo":wo, "insp":insp, "date1":date1, "date2":date2}
    pdf= render_to_pdf('Block_Division/blockdivision4pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')

def blockdivision5excel(request):
    print("aagya")
    eng = request.GET.get('eng')
    blo = request.GET.get('blo')
    wo = request.GET.get('wo')
    insp = request.GET.get('insp')
    response = HttpResponse(content_type='application/vnd.ms-excel')
    response['Content-Disposition'] = 'attachment; filename="my_excel_file.xls"'

    wb = xlwt.Workbook(encoding='utf-8')
    alignment = xlwt.Alignment()
    alignment.horz = xlwt.Alignment.HORZ_CENTER
    font_style = xlwt.XFStyle()
    font_style.font.bold = True
    font_style.font.name = "Arial"
    font_style.font.underline = True
    font_style.font.height = 220
    font_style.font.alignment ="Center"
    font_style.alignment = alignment
    font_style.alignment.wrap = True
    font_style1 = xlwt.XFStyle()
    font_style1.font.bold = True
    font_style1.font.name = "Calibri"
    font_style1.font.height = 300
    font_style1.alignment = alignment
    font_style1.alignment.wrap = False
    font_style2 = xlwt.XFStyle()
    font_style2.font.bold = True
    font_style2.font.name = "Calibri"
    font_style2.font.height = 220
    font_style2.alignment = alignment
    font_style2.alignment.wrap = False

    blue_style = xlwt.easyxf('pattern: pattern solid, fore_color blue;')
    styleg = xlwt.easyxf( 'font: colour green, bold True;')
    styley = xlwt.easyxf( 'font: colour blue, bold True;')
    styler = xlwt.easyxf( 'font: colour red, bold True;')

    ws1 = wb.add_sheet('Vikash parker 1')
    ws1.write_merge(0, 0, 0, 3, 'Banaras Loco Works',font_style1)
    ws1.write_merge(1, 1,0, 3, 'Block Division Inspection sheet 1',font_style1)
    ws1.write_merge(2, 2,0, 1, 'Crank Case No. :',font_style2)
    ws1.write_merge(2, 2,2, 3, 'W/O No. :',font_style2)
    ws1.write_merge(3, 3,0, 1, 'Type :',font_style2)
    ws1.write_merge(3, 3,2, 3, 'Name of Inspector :',font_style2)
    ws1.write_merge(4, 4,0, 1, 'Date Started :',font_style2)
    ws1.write_merge(4, 4,2, 3, 'Date Completed :',font_style2)
   
    row_num = 5
    columns = ['Sno','Description','WM Check','WM Remark']
    for col_num in range(len(columns)):
        ws1.write(row_num, col_num, columns[col_num],styleg)
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t2."Blo_No", t2.date2, t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1
        join public.dlw_block_division_crankcase_16cyl_trx t2 
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."Blo_No"=%s and t2."Insp_no"=%s and t2"wo_no"=%s and t2."Insp_no"=%s  where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1.sno, t2."Blo_No", t2.date2, t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para";''',[eng,wo,insp,blo])
    result = cursor.fetchall()
 
    r2=6
    for i in range(len(result)):
        print(result,"kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk")
        ws1.write_merge(r2, r2, 0, 0,result[i][0])
        ws1.write_merge(r2, r2, 1, 1,result[i][2])
        ws1.write_merge(r2, r2, 2, 2,result[i][3])
        ws1.write_merge(r2, r2, 3, 3,result[i][4])
 
        r2+=1
    wb.save(response)
    return response

def blockdivision5pdf(request):
    if request.method=='GET':
        print("aagya")
        eng = request.GET.get('eng')
        blo = request.GET.get('blo')
        wo = request.GET.get('wo')
        insp = request.GET.get('insp')
        date1 = request.GET.get('date1')
        date2 = request.GET.get('date2')
        print("-----------------------------------------------------------")
    
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t2."Blo_No", t2.date2, t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1
        join public.dlw_block_division_crankcase_16cyl_trx t2 
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."Blo_No"=%s and t2."Insp_no"=%s and t2."wo_no"=%s and t2."Insp_no"=%s  where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1.sno, t2."Blo_No", t2.date2, t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para";''',[eng,wo,insp,blo])
    result = cursor.fetchall()
 
    chk = result[0][1]
    data = [('0',chk)]
    for i in range(0,len(result)):
        result[i][2]
        if chk != result[i][1]:
            chk = result[i][1]
            data.append(('0',chk))
            data.append((result[i]))
        else:
            data.append((result[i]))
    result = data
    print(result,"sssssssssssssssss")
    context={'result':result,'eng':eng,"blo":blo, "wo":wo, "insp":insp, "date1":date1, "date2":date2}
    pdf= render_to_pdf('Block_Division/blockdivision5pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')

def blockdivision2excel(request):
    print("aagya")
    eng = request.GET.get('eng')
    blo = request.GET.get('blo')
    wo = request.GET.get('wo')
    insp = request.GET.get('insp')
    response = HttpResponse(content_type='application/vnd.ms-excel')
    response['Content-Disposition'] = 'attachment; filename="my_excel_file.xls"'

    wb = xlwt.Workbook(encoding='utf-8')
    alignment = xlwt.Alignment()
    alignment.horz = xlwt.Alignment.HORZ_CENTER
    font_style = xlwt.XFStyle()
    font_style.font.bold = True
    font_style.font.name = "Arial"
    font_style.font.underline = True
    font_style.font.height = 220
    font_style.font.alignment ="Center"
    font_style.alignment = alignment
    font_style.alignment.wrap = True
    font_style1 = xlwt.XFStyle()
    font_style1.font.bold = True
    font_style1.font.name = "Calibri"
    font_style1.font.height = 300
    font_style1.alignment = alignment
    font_style1.alignment.wrap = False
    font_style2 = xlwt.XFStyle()
    font_style2.font.bold = True
    font_style2.font.name = "Calibri"
    font_style2.font.height = 220
    font_style2.alignment = alignment
    font_style2.alignment.wrap = False

    blue_style = xlwt.easyxf('pattern: pattern solid, fore_color blue;')
    styleg = xlwt.easyxf( 'font: colour green, bold True;')
    styley = xlwt.easyxf( 'font: colour blue, bold True;')
    styler = xlwt.easyxf( 'font: colour red, bold True;')

    ws1 = wb.add_sheet('Vikash parker 1')
    ws1.write_merge(0, 0, 0, 3, 'Banaras Loco Works',font_style1)
    ws1.write_merge(1, 1,0, 3, 'Block Division Inspection sheet 1',font_style1)
    ws1.write_merge(2, 2,0, 1, 'Crank Case No. :',font_style2)
    ws1.write_merge(2, 2,2, 3, 'W/O No. :',font_style2)
    ws1.write_merge(3, 3,0, 1, 'Type :',font_style2)
    ws1.write_merge(3, 3,2, 3, 'Name of Inspector :',font_style2)
    ws1.write_merge(4, 4,0, 1, 'Date Started :',font_style2)
    ws1.write_merge(4, 4,2, 3, 'Date Completed :',font_style2)
    
    row_num = 5
    columns = ['Sno','Description','WM Check','WM Remark']
    for col_num in range(len(columns)):
        ws1.write(row_num, col_num, columns[col_num],styleg)
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1. "Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS",t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1 
        join public.dlw_block_division_alco_06cyl_trx  t2
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."eng_no"=%s and t2."wo_no"=%s and  t2."Insp_no"=%s where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1."sno",t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para" ;''',[eng,wo,insp])
    result = cursor.fetchall()
 
   
    r2=6
  
    for i in range(len(result)):
        print(result,"kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk")
        ws1.write_merge(r2, r2, 0, 0,result[i][0])
        ws1.write_merge(r2, r2, 1, 1,result[i][2])
        ws1.write_merge(r2, r2, 2, 2,result[i][3])
        ws1.write_merge(r2, r2, 3, 3,result[i][4])
       
        r2+=1
    wb.save(response)

    return response
def blockdivision2pdf(request):
    if request.method=='GET':
        print("aagya")
        eng = request.GET.get('eng')
        blo = request.GET.get('blo')
        wo = request.GET.get('wo')
        insp = request.GET.get('insp')
        date1 = request.GET.get('date1')
        date2 = request.GET.get('date2')
        print("-----------------------------------------------------------")
       
        cursor=connection.cursor()
        cursor.execute('''select t1.sno,
        t1. "Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS",t2."eng_no", t2."Insp_no", t2."wo_no"
        FROM public.dlw_block_welding_mst t1 
        join public.dlw_block_division_alco_06cyl_trx  t2
        on t1."Block_Division_Inspection_code"=t2."block_Division_Inspection_code" and t2."eng_no"=%s and t2."wo_no"=%s and  t2."Insp_no"=%s where "changes_by"='sse_block_shopinspection(G)'
        group by t1."Block_division_Para", t1."Block_division_SubPara", t2."CHECK", t2."REMARKS", t1."sno",t2."eng_no", t2."Insp_no", t2."wo_no"
        order by t1."Block_division_Para" ;''',[eng,wo,insp])
    result = cursor.fetchall()
  
    chk = result[0][1]
    data = [('0',chk)]
    for i in range(0,len(result)):
        result[i][2]
        if chk != result[i][1]:
            chk = result[i][1]
            data.append(('0',chk))
            data.append((result[i]))
        else:
            data.append((result[i]))
    result = data
    print(result,"sssssssssssssssss")
    context={'result':result,'eng':eng,"blo":blo, "wo":wo, "insp":insp, "date1":date1, "date2":date2}
    pdf= render_to_pdf('Block_Division/blockdivision2pdf.html',context)
    return HttpResponse(pdf,content_type='application/pdf')
  
def generate10Excel(request):
    print("ByRohitgupta")
    # This is the base code to set the top parameters
    gmcc = request.GET.get('gmcc')
    date = request.GET.get('date')
    won = request.GET.get('won')
    insp = request.GET.get('insp')
    response = HttpResponse(content_type='application/vnd.ms-excel')
    response['Content-Disposition'] = 'attachment; filename="my_excel_file.xls"'
    #end of this code

    wb = xlwt.Workbook(encoding='utf-8')
 
    font_style2 = xlwt.easyxf('font: bold True, name Calibri, height 220; alignment: vertical center, horizontal center, wrap on; pattern: pattern solid, fore_colour light_green; borders: left thin, right thin, top thin, bottom thin')
    font_style = xlwt.easyxf('font: height 180; align: vertical center, horizontal center, wrap on; pattern: pattern solid, fore_colour ice_blue; borders: left thin, right thin, top thin, bottom thin')
    font_style1 = xlwt.easyxf('font: bold True, name Calibri, height 300; align: vertical center, horizontal center, wrap on; pattern: pattern solid, fore_colour light_green; borders: left thin, right thin, top thin, bottom thin')

    blue_style = xlwt.easyxf('pattern: pattern solid, fore_color blue;')
    styleg = xlwt.easyxf('font: bold True, height 180; align: vertical center, horizontal center, wrap on; pattern: pattern solid, fore_colour sky_blue; borders: left thin, right thin, top thin, bottom thin')
    styleg.font.colour_index = xlwt.Style.colour_map['black']
    styley = xlwt.easyxf( 'font: colour blue, bold True;')
    styler = xlwt.easyxf( 'font: colour red, bold True;')
    
    #pg admin me %s ko change kr lena
    cursor=connection.cursor()
    cursor.execute('''
        SELECT distinct t1."BLOCK_DIV_INSP_PARA_TRX_CODE", t1."BLOCK_DIV_INSP_PARA_CODE", t1."BLOCK_DIV_INSP_PARA_TRX_DESC",
        t1.dateblock,t1."w.o.no", t1."GMCC_No", t1."Inspector_no", t1."Observation", t1."ACC_ENDC", t1."ACC_ENDR",
        t1."ACC_ENDL", t1."CSD_ENDC", t1."CSD_ENDR", t1."CSD_ENDL",t1."MFM_NO1", t1."MFM_NO2", t1."MFM_NO3", t1."MFM_NO4",
        t1."MFM_NO5", t1."MFM_NO6", t1."MFM_NO7", t1."MFM_NO8",t1."MFM_NO9", t1."MFM_NO10",t1."Observation_LSC", t1."Observation_LSA",
        t1."Observation_RSC", t1."Observation_RSA", t1."RemarksRs", t1."RemarksLs", t1."Remarks",t1."Role", 
        t1."BLOCK_DIVISION_INSPECTION_CODE",t2."Position 1", t2."Position 2", t2."Discription_Slno",t2."DRAG_SIZE",
        t2."INSTRUMENT_USED",t2."DISCRIPTION",t2."SUB_DESC","sno", t2."Bore no",t2."Heading"
        FROM public.dlw_block_master_trx t1,public.dlw_block_master t2
        where  t1."BLOCK_DIV_INSP_PARA_CODE"=t2."BLOCK_DIV_INSP_PARA_CODE" 
        and t1."BLOCK_DIVISION_INSPECTION_CODE"=t2."BLOCK_DIVISION_INSPECTION_CODE"
        and t1."w.o.no"=%s and t1."GMCC_No"=%s and t1."Inspector_no"=%s
        and  t1."BLOCK_DIVISION_INSPECTION_CODE" in 
        (SELECT distinct "BLOCK_DIVISION_INSPECTION_CODE" FROM public.dlw_block_master 
        WHERE "BLOCK_DIVISION_INSPECTION_CODE"="BLOCK_DIVISION_INSPECTION_CODE" AND "BLOCK_DIVISION_INSPECTION_CODE"	in
         ('MGM1','MGM2','MGM3','MGM4','MGM5','MGM6','MGM7','MGM8','MGM9','MGM10','MGM11','MGM12','MGM13','MGM14','MGM15','MGM16','MGM17','MGM18','MGM19','MGM20','MGM21')) 
        order by "sno";
        ''',[won,gmcc,insp])
    
    # Bhai jab database se data hi nhi aayega to fill kaise hoga
    result1 = cursor.fetchall()
    print('kr lo print',result1)

    #Adding the required sheets
    ws1 = wb.add_sheet('Sheet 1')
    ws2 = wb.add_sheet('Sheet 2')
    ws3 = wb.add_sheet('Sheet 3')
    ws4 = wb.add_sheet('Sheet 4')
    ws5 = wb.add_sheet('Sheet 5')
    ws6 = wb.add_sheet('Sheet 6')
    ws7 = wb.add_sheet('Sheet 7')
    ws8 = wb.add_sheet('Sheet 8')
    ws9 = wb.add_sheet('Sheet 9')
    ws10 = wb.add_sheet('Sheet 10')
    ws11 = wb.add_sheet('Sheet 11')
    ws12 = wb.add_sheet('Sheet 12')
    ws13 = wb.add_sheet('Sheet 13')
    ws14 = wb.add_sheet('Sheet 14')
    ws15 = wb.add_sheet('Sheet 15')
    ws16 = wb.add_sheet('Sheet 16')
    ws17 = wb.add_sheet('Sheet 17')
    ws18 = wb.add_sheet('Sheet 18')
    ws19 = wb.add_sheet('Sheet 19')
    ws20 = wb.add_sheet('Sheet 20')
    ws21 = wb.add_sheet('Sheet 21')


    #These are the first page Headings
    # this is for table 1 of our sheet
    ws1.write_merge(0, 3, 0, 12, 'Inspection Sheet of H.H.P Crankcase Welding Asm.',font_style1)
    ws1.write_merge(4, 6,0, 12, 'Introduction: It includes Inspection of H.H.P Crankcase\nManual Inspection Check Sheet For GM Crankcase Machined 12 Cyl. Part no. 9548208',font_style1)
    ws1.write_merge(7, 8,0, 12, 'Document No: : C.L. / IB / 12 / 002',font_style2)
    ws1.write_merge(9, 9,0, 5, 'W.o No. : '+str(won),font_style2)
    ws1.write_merge(9, 9,6, 12, 'CMCC No. : '+str(gmcc),font_style2)
    ws1.write_merge(10, 10,0, 5, 'Inspector : '+str(insp),font_style2)
    ws1.write_merge(10, 10,6, 12, 'Date: '+str(date),font_style2)
    ws1.write_merge(11,12,0, 12, '1. Accessory End Plate Milling/Drilling/Tapping holes',font_style2)
    ws1.write_merge(13,13,0,1,'S.No',styleg)
    ws1.write_merge(13,13,2,6,'Description',styleg)
    ws1.write_merge(13,13,7,7,'Drg. Size(in MM)',styleg)
    ws1.write_merge(13,13,8,10,'Observation',styleg)
    ws1.write_merge(13,13,11,12,'Instrument Used',styleg)
    row1 =14
    

    #Sheet headings
    ws2.write_merge(0,1,0,12,"2. CSD End Plate Milling/Drilling/Tapping Holes",font_style2)
    ws2.write_merge(2,2,0,1,'S.No',styleg)
    ws2.write_merge(2,2,2,6,'Description',styleg)
    ws2.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws2.write_merge(2,2,8,10,'Observation',styleg)
    ws2.write_merge(2,2,11,12,'Instrument Used',styleg)
    row2=3
    ws3.write_merge(0,1,0,12,"3. Serration MFM (LB and RB)",font_style2)
    ws3.write_merge(2,2,0,1,'S.No',styleg)
    ws3.write_merge(2,2,2,6,'Description',styleg)
    ws3.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws3.write_merge(2,2,8,10,'Observation',styleg)
    ws3.write_merge(2,2,11,12,'Instrument Used',styleg)
    row3=3
    ws4.write_merge(0,1,0,12,"4. Total Length",font_style2)
    ws4.write_merge(2,2,0,1,'S.No',styleg)
    ws4.write_merge(2,2,2,6,'Description',styleg)
    ws4.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws4.write_merge(2,2,8,10,'Observation',styleg)
    ws4.write_merge(2,2,11,12,'Instrument Used',styleg)
    row4=3
    ws5.write_merge(0,1,0,12,"5. Base Rail Machining Holes",font_style2)
    ws5.write_merge(2,2,0,1,'S.No',styleg)
    ws5.write_merge(2,2,2,6,'Description',styleg)
    ws5.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws5.write_merge(2,2,8,10,'Observation',styleg)
    ws5.write_merge(2,2,11,12,'Instrument Used',styleg)
    row5=3
    ws6.write_merge(0,1,0, 12, '6. Piston Cooling Pad Milling/Drilling/Tapping',font_style2)
    ws6.write_merge(2,2,0,1,'S.No',styleg)
    ws6.write_merge(2,2,2,6,'Description',styleg)
    ws6.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws6.write_merge(2,2,8,10,'Observation',styleg)
    ws6.write_merge(2,2,11,12,'Instrument Used',styleg) 
    row6=3
    ws7.write_merge(0,1,0, 12, '7. Main Frame Members Tapped Holes',font_style2)
    ws7.write_merge(2,2,0,1,'S.No',styleg)
    ws7.write_merge(2,2,2,6,'Description',styleg)
    ws7.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws7.write_merge(2,2,8,10,'Observation',styleg)
    ws7.write_merge(2,2,11,12,'Instrument Used',styleg) 
    row7=3
    ws8.write_merge(0,1,0, 12, '8. Thrust Face Machining',font_style2)
    ws8.write_merge(2,2,0,1,'S.No',styleg)
    ws8.write_merge(2,2,2,6,'Description',styleg)
    ws8.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws8.write_merge(2,2,8,10,'Observation',styleg)
    ws8.write_merge(2,2,11,12,'Instrument Used',styleg)
    row8=3
    ws9.write_merge(0,1,0, 12, '9. Tang slot Machining',font_style2)
    ws9.write_merge(2,2,0,1,'S.No',styleg)
    ws9.write_merge(2,2,2,6,'Description',styleg)
    ws9.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws9.write_merge(2,2,8,10,'Observation',styleg)
    ws9.write_merge(2,2,11,12,'Instrument Used',styleg)
    row9=3
    ws10.write_merge(0,1,0, 12, '10. Window Bores',font_style2)
    ws10.write_merge(2,2,0,1,'S.No',styleg)
    ws10.write_merge(2,2,2,6,'Description',styleg)
    ws10.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws10.write_merge(2,2,8,10,'Observation',styleg)
    ws10.write_merge(2,2,11,12,'Instrument Used',styleg)
    row10=3
    ws11.write_merge(0,1,0, 12, '11. Key Way',font_style2)
    ws11.write_merge(2,2,0,1,'S.No',styleg)
    ws11.write_merge(2,2,2,6,'Description',styleg)
    ws11.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws11.write_merge(2,2,8,10,'Observation',styleg)
    ws11.write_merge(2,2,11,12,'Instrument Used',styleg)
    row11=3
    ws12.write_merge(0,1,0, 12, '12. Water Jumped Holes',font_style2)
    ws12.write_merge(2,2,0,1,'S.No',styleg)
    ws12.write_merge(2,2,2,6,'Description',styleg)
    ws12.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws12.write_merge(2,2,8,10,'Observation',styleg)
    ws12.write_merge(2,2,11,12,'Instrument Used',styleg)
    row12=3
    
    ws13.write_merge(0,1,0, 12, '13. Crank Bore Dia',font_style2)
    ws13.write_merge(2,2,0,1,'S.No',styleg)
    ws13.write_merge(2,2,2,6,'Description',styleg)
    ws13.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws13.write_merge(2,2,8,10,'Observation',styleg)
    ws13.write_merge(2,2,11,12,'Instrument Used',styleg)
    row13=3
    ws14.write_merge(0,0,0, 12, '13.1 Crank Bore Dia Actual Dimention',font_style2)
    ws14.write_merge(1,1,0,12, 'ACTUAL DIMENSION',styleg)
    ws14.write_merge(2,3,0,0, 'Bore.NO',styleg)
    ws14.write_merge(2,2,1,3, 'ACC End',styleg)
    ws14.write_merge(3,3,1,1, 'C',styleg)
    ws14.write_merge(3,3,2,2, 'R',styleg)
    ws14.write_merge(3,3,3,3, 'L',styleg)
    ws14.write_merge(2,2,4,6, 'CSD End',styleg)
    ws14.write_merge(3,3,4,4, 'C',styleg)
    ws14.write_merge(3,3,5,5, 'R',styleg)
    ws14.write_merge(3,3,6,6, 'L',styleg)
    ws14.write_merge(2,3,7,12, 'Remarks',styleg)
    row14=4
    
    ws15.write_merge(0,0,0, 12, '13.2 Crank Borer Alingment',font_style2)
    ws15.write_merge(1,1,0, 12, ' Crank Borer Alingment',styleg)
    ws15.write_merge(2,3,0,0, 'Position',styleg)
    ws15.write_merge(2,3,1,1,' ',styleg)
    ws15.write_merge(2,2,2,8,'MFM No',styleg)
    ws15.write_merge(3,3,2,2,'1',styleg)
    ws15.write_merge(3,3,3,3,'2',styleg)
    ws15.write_merge(3,3,4,4,'3',styleg)
    ws15.write_merge(3,3,5,5,'4',styleg)
    ws15.write_merge(3,3,6,6,'5',styleg)
    ws15.write_merge(3,3,7,7,'6',styleg)
    ws15.write_merge(3,3,8,8,'7',styleg)
    ws15.write_merge(2,3,9,12,'Instrument',styleg)
    row15=4

    ws16.write_merge(0,1,0, 12, '14. Exhaust Deck Machining tapped Hoes',font_style2)
    ws16.write_merge(2,2,0,1,'S.No',styleg)
    ws16.write_merge(2,2,2,6,'Description',styleg)
    ws16.write_merge(2,2,7,7,'Drg. Size(in MM)',styleg)
    ws16.write_merge(2,2,8,10,'Observation',styleg)
    ws16.write_merge(2,2,11,12,'Instrument Used',styleg)
    row16=3
   
  
    ws17.write_merge(0,1,0, 12, '15. Cam Pad Machining/Tapping holes, Crab Bolt hole etc',font_style2)
    ws17.write_merge(2,3,0,1,'S.No',styleg)
    ws17.write_merge(2,3,2,6,'Description',styleg)
    ws17.write_merge(2,3,7,7,'Drg. Size(in MM)',styleg)
    ws17.write_merge(2,2,8,9,'Observation',styleg)
    ws17.write_merge(3,3,8,8,'RS',styleg)
    ws17.write_merge(3,3,9,9,'LS',styleg)
    ws17.write_merge(2,3,10,12,'Instrument Used',styleg)
    row17=4
     
    ws18.write_merge(0,1,0, 12, '16.1 Cylinder Liner Bore Right',font_style2)
    ws18.write_merge(2,3,0,1,'Bore no.',styleg)
    ws18.write_merge(2,3,2,3,'Upper Bore',styleg)
    ws18.write_merge(2,3,4,5,'Middle Bore',styleg)
    ws18.write_merge(2,3,6,7,'Lower Bore',styleg)
    ws18.write_merge(2,3,8,9,'Counter bore',styleg)
    ws18.write_merge(2,3,10,12,'Checking Instrument',styleg)
    row18=4
    ws19.write_merge(0,1,0, 12, '16.2 Cylinder Liner Bore Left',font_style2)
    ws19.write_merge(2,3,0,1,'Bore no.',styleg)
    ws19.write_merge(2,3,2,3,'Upper Bore',styleg)
    ws19.write_merge(2,3,4,5,'Middle Bore',styleg)
    ws19.write_merge(2,3,6,7,'Lower Bore',styleg)
    ws19.write_merge(2,3,8,9,'Counter bore',styleg)
    ws19.write_merge(2,3,10,12,'Checking Instrument',styleg)
    row19=4
   
    
    ws20.write_merge(0,1,0, 12, '17. Cylinder Relief Valve (RS and LS)',font_style2)
    ws20.write_merge(2,3,0,1,'S.No',styleg)
    ws20.write_merge(2,3,2,6,'Description',styleg)
    ws20.write_merge(2,3,7,7,'Drg. Size(in MM)',styleg)
    ws20.write_merge(2,2,8,9,'Remarks',styleg)
    ws20.write_merge(3,3,8,8,'RS',styleg)
    ws20.write_merge(3,3,9,9,'LS',styleg)
    ws20.write_merge(2,3,10,12,'Checking Instrument',styleg)
    row20=4
   
    ws21.write_merge(0,1,0, 12,  '18. Injector Hole',font_style2)
    ws21.write_merge(2,3,0,1,'S.No',styleg)
    ws21.write_merge(2,3,2,6,'Description',styleg)
    ws21.write_merge(2,3,7,7,'Drg. Size(in MM)',styleg)
    ws21.write_merge(2,2,8,9,'Remarks',styleg)
    ws21.write_merge(3,3,8,8,'RS',styleg)
    ws21.write_merge(3,3,9,9,'LS',styleg)
    ws21.write_merge(2,3,10,12,'Checking Instrument',styleg)
    row21=4
    for i in result1:
        #this data filling is only for table 1 in our sheet. Match the code accordingly i.e MGM1 for table 1 
        if i[32]=='MGM1':
            #GCCM1
            ws1.write_merge(row1,row1,0,1,i[35],font_style)
            ws1.write_merge(row1,row1,2,6,i[38],font_style)
            ws1.write_merge(row1,row1,7,7,i[36],font_style)
            ws1.write_merge(row1,row1,8,10,i[7],font_style)
            ws1.write_merge(row1,row1,11,12,i[37],font_style)
            row1+=1
        elif i[32]=='MGM2':
            ws2.write_merge(row2,row2,0,1,i[35],font_style)
            ws2.write_merge(row2,row2,2,6,i[38],font_style)
            ws2.write_merge(row2,row2,7,7,i[36],font_style)
            ws2.write_merge(row2,row2,8,10,i[7],font_style)
            ws2.write_merge(row2,row2,11,12,i[37],font_style)
            row2+=1
        elif i[32]=='MGM3':
            ws3.write_merge(row3,row3,0,1,i[35],font_style)
            ws3.write_merge(row3,row3,2,6,i[38],font_style)
            ws3.write_merge(row3,row3,7,7,i[36],font_style)
            ws3.write_merge(row3,row3,8,10,i[7],font_style)
            ws3.write_merge(row3,row3,11,12,i[37],font_style)
            row3+=1
        elif i[32]=='MGM4':
            ws4.write_merge(row4,row4,0,1,i[35],font_style)
            ws4.write_merge(row4,row4,2,6,i[38],font_style)
            ws4.write_merge(row4,row4,7,7,i[36],font_style)
            ws4.write_merge(row4,row4,8,10,i[7],font_style)
            ws4.write_merge(row4,row4,11,12,i[37],font_style)
            row4+=1
        elif i[32]=='MGM5':
            ws5.write_merge(row5,row5,0,1,i[35],font_style)
            ws5.write_merge(row5,row5,2,6,i[38],font_style)
            ws5.write_merge(row5,row5,7,7,i[36],font_style)
            ws5.write_merge(row5,row5,8,10,i[7],font_style)
            ws5.write_merge(row5,row5,11,12,i[37],font_style)
            row5+=1
        elif i[32]=='MGM6':
            ws6.write_merge(row6,row6,0,1,i[35],font_style)
            ws6.write_merge(row6,row6,2,6,i[38],font_style)
            ws6.write_merge(row6,row6,7,7,i[36],font_style)
            ws6.write_merge(row6,row6,8,10,i[7],font_style)
            ws6.write_merge(row6,row6,11,12,i[37],font_style)
            row6+=1
        elif i[32]=='MGM7':
            ws7.write_merge(row7,row7,0,1,i[35],font_style)
            ws7.write_merge(row7,row7,2,6,i[38],font_style)
            ws7.write_merge(row7,row7,7,7,i[36],font_style)
            ws7.write_merge(row7,row7,8,10,i[7],font_style)
            ws7.write_merge(row7,row7,11,12,i[37],font_style)
            row7+=1
        elif i[32]=='MGM8':
            ws8.write_merge(row8,row8,0,1,i[35],font_style)
            ws8.write_merge(row8,row8,2,6,i[38],font_style)
            ws8.write_merge(row8,row8,7,7,i[36],font_style)
            ws8.write_merge(row8,row8,8,10,i[7],font_style)
            ws8.write_merge(row8,row8,11,12,i[37],font_style)
            row8+=1
        elif i[32]=='MGM9':
            ws9.write_merge(row9,row9,0,1,i[35],font_style)
            ws9.write_merge(row9,row9,2,6,i[38],font_style)
            ws9.write_merge(row9,row9,7,7,i[36],font_style)
            ws9.write_merge(row9,row9,8,10,i[7],font_style)
            ws9.write_merge(row9,row9,11,12,i[37],font_style)
            row9+=1
        elif i[32]=='MGM10':
            ws10.write_merge(row10,row10,0,1,i[35],font_style)
            ws10.write_merge(row10,row10,2,6,i[38],font_style)
            ws10.write_merge(row10,row10,7,7,i[36],font_style)
            ws10.write_merge(row10,row10,8,10,i[7],font_style)
            ws10.write_merge(row10,row10,11,12,i[37],font_style)
            row10+=1
        elif i[32]=='MGM11':
            ws11.write_merge(row11,row11,0,1,i[35],font_style)
            ws11.write_merge(row11,row11,2,6,i[38],font_style)
            ws11.write_merge(row11,row11,7,7,i[36],font_style)
            ws11.write_merge(row11,row11,8,10,i[7],font_style)
            ws11.write_merge(row11,row11,11,12,i[37],font_style)
            row11+=1
        elif i[32]=='MGM12':
            ws12.write_merge(row12,row12,0,1,i[35],font_style)
            ws12.write_merge(row12,row12,2,6,i[38],font_style)
            ws12.write_merge(row12,row12,7,7,i[36],font_style)
            ws12.write_merge(row12,row12,8,10,i[7],font_style)
            ws12.write_merge(row12,row12,11,12,i[37],font_style)
            row12+=1
        elif i[32]=='MGM13':
            ws13.write_merge(row13,row13,0,1,i[35],font_style)
            ws13.write_merge(row13,row13,2,6,i[38],font_style)
            ws13.write_merge(row13,row13,7,7,i[36],font_style)
            ws13.write_merge(row13,row13,8,10,i[7],font_style)
            ws13.write_merge(row13,row13,11,12,i[37],font_style)
            row13+=1
        elif i[32]=='MGM14':
            ws14.write_merge(row14,row14,0,0,i[41],font_style)
            ws14.write_merge(row14,row14,1,1,i[8],font_style)
            ws14.write_merge(row14,row14,2,2,i[9],font_style)
            ws14.write_merge(row14,row14,3,3,i[10],font_style)
            ws14.write_merge(row14,row14,4,4,i[11],font_style)
            ws14.write_merge(row14,row14,5,5,i[12],font_style)
            ws14.write_merge(row14,row14,6,6,i[13],font_style)
            ws14.write_merge(row14,row14,7,12,i[30],font_style)
            row14+=1
        elif i[32]=='MGM15':
            ws15.write_merge(row15,row15,0,0,i[33],font_style)
            ws15.write_merge(row15,row15,1,1,i[34],font_style)
            ws15.write_merge(row15,row15,2,2,i[14],font_style)
            ws15.write_merge(row15,row15,3,3,i[15],font_style)
            ws15.write_merge(row15,row15,4,4,i[16],font_style)
            ws15.write_merge(row15,row15,5,5,i[17],font_style)
            ws15.write_merge(row15,row15,6,6,i[18],font_style)
            ws15.write_merge(row15,row15,7,7,i[19],font_style)
            ws15.write_merge(row15,row15,8,8,i[20],font_style)
            ws15.write_merge(row15,row15,9,12,i[37],font_style)
            row15+=1
        elif i[32]=='MGM16':
            ws16.write_merge(row16,row16,0,1,i[35],font_style)
            ws16.write_merge(row16,row16,2,6,i[38],font_style)
            ws16.write_merge(row16,row16,7,7,i[36],font_style)
            ws16.write_merge(row16,row16,8,10,i[7],font_style)
            ws16.write_merge(row16,row16,11,12,i[37],font_style)
            row16+=1
        
        elif i[32]=='MGM17':
            ws17.write_merge(row17,row17,0,1,i[35],font_style)
            ws17.write_merge(row17,row17,2,6,i[38],font_style)
            ws17.write_merge(row17,row17,7,7,i[36],font_style)
            ws17.write_merge(row17,row17,8,8,i[27],font_style)
            ws17.write_merge(row17,row17,9,9,i[25],font_style)
            ws17.write_merge(row17,row17,10,12,i[37],font_style)
            row17+=1
    
        elif i[32]=='MGM18':
            ws18.write_merge(row18,row18,0,1,i[41],font_style)
            ws18.write_merge(row18,row18,2,3,i[14],font_style)
            ws18.write_merge(row18,row18,4,5,i[15],font_style)
            ws18.write_merge(row18,row18,6,7,i[16],font_style)
            ws18.write_merge(row18,row18,8,9,i[17],font_style)
            ws18.write_merge(row18,row18,10,12,i[37],font_style)
            row18+=1
        elif i[32]=='MGM19':
            ws19.write_merge(row19,row19,0,1,i[41],font_style)
            ws19.write_merge(row19,row19,2,3,i[14],font_style)
            ws19.write_merge(row19,row19,4,5,i[15],font_style)
            ws19.write_merge(row19,row19,6,7,i[16],font_style)
            ws19.write_merge(row19,row19,8,9,i[17],font_style)
            ws19.write_merge(row19,row19,10,12,i[37],font_style)
            row19+=1

        elif i[32]=='MGM20':
            ws20.write_merge(row20,row20,0,1,i[35],font_style)
            ws20.write_merge(row20,row20,2,6,i[38],font_style)
            ws20.write_merge(row20,row20,7,7,i[36],font_style)
            ws20.write_merge(row20,row20,8,8,i[28],font_style)
            ws20.write_merge(row20,row20,9,9,i[29],font_style)
            ws20.write_merge(row20,row20,10,12,i[37],font_style)
            row20+=1
        elif i[32]=='MGM21':
            ws21.write_merge(row21,row21,0,1,i[35],font_style)
            ws21.write_merge(row21,row21,2,6,i[38],font_style)
            ws21.write_merge(row21,row21,7,7,i[36],font_style)
            ws21.write_merge(row21,row21,8,8,i[28],font_style)
            ws21.write_merge(row21,row21,9,9,i[29],font_style)
            ws21.write_merge(row21,row21,10,12,i[37],font_style)
            row21+=1

    wb.save(response)
    return response







